{"ast":null,"code":"// Sistema de armazenamento usando IndexedDB para grandes volumes de dados\n// Fallback para localStorage se IndexedDB n√£o estiver dispon√≠vel\nconst DB_NAME=\"deckmaster_db\";const DB_VERSION=1;const STORE_NAME=\"sync_queue\";class IndexedDBStorage{constructor(){this.db=null;this.isReady=false;this.fallbackToLocalStorage=false;this.init();}// Inicializa o banco de dados\nasync init(){if(typeof window==='undefined'||!window.indexedDB){console.warn(\"‚ö†Ô∏è IndexedDB n√£o dispon√≠vel. Usando localStorage como fallback.\");this.fallbackToLocalStorage=true;this.isReady=true;return;}try{this.db=await this.openDB();this.isReady=true;console.log(\"‚úÖ IndexedDB inicializado com sucesso\");}catch(error){console.error(\"‚ùå Erro ao inicializar IndexedDB:\",error);this.fallbackToLocalStorage=true;this.isReady=true;}}// Abre conex√£o com IndexedDB\nopenDB(){return new Promise((resolve,reject)=>{const request=indexedDB.open(DB_NAME,DB_VERSION);request.onerror=()=>reject(request.error);request.onsuccess=()=>resolve(request.result);request.onupgradeneeded=event=>{const db=event.target.result;// Cria object store se n√£o existir\nif(!db.objectStoreNames.contains(STORE_NAME)){const objectStore=db.createObjectStore(STORE_NAME,{keyPath:\"id\",autoIncrement:true});// Cria √≠ndices\nobjectStore.createIndex(\"timestamp\",\"timestamp\",{unique:false});objectStore.createIndex(\"type\",\"type\",{unique:false});console.log(\"üì¶ Object store criado:\",STORE_NAME);}};});}// Aguarda at√© o DB estar pronto\nasync waitForReady(){if(this.isReady)return;// Aguarda at√© 5 segundos\nconst timeout=5000;const start=Date.now();while(!this.isReady&&Date.now()-start<timeout){await new Promise(resolve=>setTimeout(resolve,100));}if(!this.isReady){console.warn(\"‚ö†Ô∏è Timeout ao aguardar IndexedDB. Usando fallback.\");this.fallbackToLocalStorage=true;this.isReady=true;}}// Salva item no storage\nasync setItem(key,value){await this.waitForReady();if(this.fallbackToLocalStorage){try{localStorage.setItem(key,JSON.stringify(value));}catch(error){console.error(\"‚ùå Erro ao salvar no localStorage:\",error);throw error;}return;}return new Promise((resolve,reject)=>{const transaction=this.db.transaction([STORE_NAME],\"readwrite\");const store=transaction.objectStore(STORE_NAME);const request=store.put({id:key,data:value,timestamp:Date.now()});request.onsuccess=()=>resolve(request.result);request.onerror=()=>reject(request.error);});}// Recupera item do storage\nasync getItem(key){await this.waitForReady();if(this.fallbackToLocalStorage){try{const item=localStorage.getItem(key);return item?JSON.parse(item):null;}catch(error){console.error(\"‚ùå Erro ao ler do localStorage:\",error);return null;}}return new Promise((resolve,reject)=>{const transaction=this.db.transaction([STORE_NAME],\"readonly\");const store=transaction.objectStore(STORE_NAME);const request=store.get(key);request.onsuccess=()=>{const result=request.result;resolve(result?result.data:null);};request.onerror=()=>reject(request.error);});}// Remove item do storage\nasync removeItem(key){await this.waitForReady();if(this.fallbackToLocalStorage){try{localStorage.removeItem(key);}catch(error){console.error(\"‚ùå Erro ao remover do localStorage:\",error);}return;}return new Promise((resolve,reject)=>{const transaction=this.db.transaction([STORE_NAME],\"readwrite\");const store=transaction.objectStore(STORE_NAME);const request=store.delete(key);request.onsuccess=()=>resolve();request.onerror=()=>reject(request.error);});}// Lista todos os itens\nasync getAllItems(){await this.waitForReady();if(this.fallbackToLocalStorage){// No localStorage, retorna apenas o item da fila\ntry{const queue=localStorage.getItem(\"deckmaster_pending_sync\");return queue?[{id:\"deckmaster_pending_sync\",data:JSON.parse(queue)}]:[];}catch(error){console.error(\"‚ùå Erro ao listar do localStorage:\",error);return[];}}return new Promise((resolve,reject)=>{const transaction=this.db.transaction([STORE_NAME],\"readonly\");const store=transaction.objectStore(STORE_NAME);const request=store.getAll();request.onsuccess=()=>resolve(request.result||[]);request.onerror=()=>reject(request.error);});}// Limpa todo o storage\nasync clear(){await this.waitForReady();if(this.fallbackToLocalStorage){try{// Remove apenas itens relacionados ao DeckMaster\nconst keys=Object.keys(localStorage);keys.forEach(key=>{if(key.startsWith('deckmaster_')){localStorage.removeItem(key);}});}catch(error){console.error(\"‚ùå Erro ao limpar localStorage:\",error);}return;}return new Promise((resolve,reject)=>{const transaction=this.db.transaction([STORE_NAME],\"readwrite\");const store=transaction.objectStore(STORE_NAME);const request=store.clear();request.onsuccess=()=>resolve();request.onerror=()=>reject(request.error);});}// Obt√©m estat√≠sticas de uso\nasync getStorageStats(){await this.waitForReady();if(this.fallbackToLocalStorage){let totalSize=0;const keys=Object.keys(localStorage);keys.forEach(key=>{if(key.startsWith('deckmaster_')){totalSize+=localStorage.getItem(key).length;}});return{type:'localStorage',itemCount:keys.filter(k=>k.startsWith('deckmaster_')).length,estimatedSize:totalSize,estimatedSizeMB:(totalSize/1024/1024).toFixed(2),maxSize:'5-10MB (limite do navegador)'};}const items=await this.getAllItems();let totalSize=0;items.forEach(item=>{totalSize+=JSON.stringify(item).length;});// Tenta obter quota do navegador (se dispon√≠vel)\nlet quota=null;if(navigator.storage&&navigator.storage.estimate){try{const estimate=await navigator.storage.estimate();quota={usage:estimate.usage,quota:estimate.quota,usageMB:(estimate.usage/1024/1024).toFixed(2),quotaMB:(estimate.quota/1024/1024).toFixed(2),percentUsed:(estimate.usage/estimate.quota*100).toFixed(2)};}catch(error){console.warn(\"‚ö†Ô∏è N√£o foi poss√≠vel obter quota do storage\");}}return{type:'IndexedDB',itemCount:items.length,estimatedSize:totalSize,estimatedSizeMB:(totalSize/1024/1024).toFixed(2),quota:quota};}// M√©todo para debug\nasync logStats(){const stats=await this.getStorageStats();console.log(\"\\n\\uD83D\\uDCCA ESTAT\\xCDSTICAS DE ARMAZENAMENTO:\\n  \\uD83D\\uDCBE Tipo: \".concat(stats.type,\"\\n  \\uD83D\\uDCE6 Itens: \").concat(stats.itemCount,\"\\n  \\uD83D\\uDCBD Tamanho estimado: \").concat(stats.estimatedSizeMB,\"MB\\n  \").concat(stats.quota?\"\\n  \\uD83D\\uDCC8 Quota do navegador:\\n    \\u2022 Usado: \".concat(stats.quota.usageMB,\"MB\\n    \\u2022 Total: \").concat(stats.quota.quotaMB,\"MB\\n    \\u2022 Ocupa\\xE7\\xE3o: \").concat(stats.quota.percentUsed,\"%\\n  \"):\"  \\uD83D\\uDCCF Limite: \".concat(stats.maxSize||'Desconhecido'),\"\\n    \"));}}// Singleton\nconst storage=new IndexedDBStorage();export default storage;// Exporta a inst√¢ncia tamb√©m como named export para compatibilidade\nexport const indexedDBStorage=storage;// Exporta m√©todos √∫teis\nexport const setItem=(key,value)=>storage.setItem(key,value);export const getItem=key=>storage.getItem(key);export const removeItem=key=>storage.removeItem(key);export const clear=()=>storage.clear();export const getStorageStats=()=>storage.getStorageStats();export const logStats=()=>storage.logStats();// Exp√µe globalmente para debug\nif(typeof window!=='undefined'){window.storageManager=storage;console.log(\"üí° Use window.storageManager.logStats() para ver estat√≠sticas de armazenamento\");}","map":{"version":3,"names":["DB_NAME","DB_VERSION","STORE_NAME","IndexedDBStorage","constructor","db","isReady","fallbackToLocalStorage","init","window","indexedDB","console","warn","openDB","log","error","Promise","resolve","reject","request","open","onerror","onsuccess","result","onupgradeneeded","event","target","objectStoreNames","contains","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","waitForReady","timeout","start","Date","now","setTimeout","setItem","key","value","localStorage","JSON","stringify","transaction","store","put","id","data","timestamp","getItem","item","parse","get","removeItem","delete","getAllItems","queue","getAll","clear","keys","Object","forEach","startsWith","getStorageStats","totalSize","length","type","itemCount","filter","k","estimatedSize","estimatedSizeMB","toFixed","maxSize","items","quota","navigator","storage","estimate","usage","usageMB","quotaMB","percentUsed","logStats","stats","concat","indexedDBStorage","storageManager"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/lib/indexedDBStorage.js"],"sourcesContent":["// Sistema de armazenamento usando IndexedDB para grandes volumes de dados\r\n// Fallback para localStorage se IndexedDB n√£o estiver dispon√≠vel\r\n\r\nconst DB_NAME = \"deckmaster_db\";\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = \"sync_queue\";\r\n\r\nclass IndexedDBStorage {\r\n  constructor() {\r\n    this.db = null;\r\n    this.isReady = false;\r\n    this.fallbackToLocalStorage = false;\r\n    this.init();\r\n  }\r\n\r\n  // Inicializa o banco de dados\r\n  async init() {\r\n    if (typeof window === 'undefined' || !window.indexedDB) {\r\n      console.warn(\"‚ö†Ô∏è IndexedDB n√£o dispon√≠vel. Usando localStorage como fallback.\");\r\n      this.fallbackToLocalStorage = true;\r\n      this.isReady = true;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.db = await this.openDB();\r\n      this.isReady = true;\r\n      console.log(\"‚úÖ IndexedDB inicializado com sucesso\");\r\n    } catch (error) {\r\n      console.error(\"‚ùå Erro ao inicializar IndexedDB:\", error);\r\n      this.fallbackToLocalStorage = true;\r\n      this.isReady = true;\r\n    }\r\n  }\r\n\r\n  // Abre conex√£o com IndexedDB\r\n  openDB() {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => resolve(request.result);\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        const db = event.target.result;\r\n        \r\n        // Cria object store se n√£o existir\r\n        if (!db.objectStoreNames.contains(STORE_NAME)) {\r\n          const objectStore = db.createObjectStore(STORE_NAME, { \r\n            keyPath: \"id\",\r\n            autoIncrement: true \r\n          });\r\n          \r\n          // Cria √≠ndices\r\n          objectStore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n          objectStore.createIndex(\"type\", \"type\", { unique: false });\r\n          \r\n          console.log(\"üì¶ Object store criado:\", STORE_NAME);\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  // Aguarda at√© o DB estar pronto\r\n  async waitForReady() {\r\n    if (this.isReady) return;\r\n    \r\n    // Aguarda at√© 5 segundos\r\n    const timeout = 5000;\r\n    const start = Date.now();\r\n    \r\n    while (!this.isReady && Date.now() - start < timeout) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n    }\r\n    \r\n    if (!this.isReady) {\r\n      console.warn(\"‚ö†Ô∏è Timeout ao aguardar IndexedDB. Usando fallback.\");\r\n      this.fallbackToLocalStorage = true;\r\n      this.isReady = true;\r\n    }\r\n  }\r\n\r\n  // Salva item no storage\r\n  async setItem(key, value) {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao salvar no localStorage:\", error);\r\n        throw error;\r\n      }\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([STORE_NAME], \"readwrite\");\r\n      const store = transaction.objectStore(STORE_NAME);\r\n      \r\n      const request = store.put({ id: key, data: value, timestamp: Date.now() });\r\n      \r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // Recupera item do storage\r\n  async getItem(key) {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      try {\r\n        const item = localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : null;\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao ler do localStorage:\", error);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([STORE_NAME], \"readonly\");\r\n      const store = transaction.objectStore(STORE_NAME);\r\n      \r\n      const request = store.get(key);\r\n      \r\n      request.onsuccess = () => {\r\n        const result = request.result;\r\n        resolve(result ? result.data : null);\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // Remove item do storage\r\n  async removeItem(key) {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      try {\r\n        localStorage.removeItem(key);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao remover do localStorage:\", error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([STORE_NAME], \"readwrite\");\r\n      const store = transaction.objectStore(STORE_NAME);\r\n      \r\n      const request = store.delete(key);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // Lista todos os itens\r\n  async getAllItems() {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      // No localStorage, retorna apenas o item da fila\r\n      try {\r\n        const queue = localStorage.getItem(\"deckmaster_pending_sync\");\r\n        return queue ? [{ id: \"deckmaster_pending_sync\", data: JSON.parse(queue) }] : [];\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao listar do localStorage:\", error);\r\n        return [];\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([STORE_NAME], \"readonly\");\r\n      const store = transaction.objectStore(STORE_NAME);\r\n      \r\n      const request = store.getAll();\r\n      \r\n      request.onsuccess = () => resolve(request.result || []);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // Limpa todo o storage\r\n  async clear() {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      try {\r\n        // Remove apenas itens relacionados ao DeckMaster\r\n        const keys = Object.keys(localStorage);\r\n        keys.forEach(key => {\r\n          if (key.startsWith('deckmaster_')) {\r\n            localStorage.removeItem(key);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao limpar localStorage:\", error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([STORE_NAME], \"readwrite\");\r\n      const store = transaction.objectStore(STORE_NAME);\r\n      \r\n      const request = store.clear();\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // Obt√©m estat√≠sticas de uso\r\n  async getStorageStats() {\r\n    await this.waitForReady();\r\n\r\n    if (this.fallbackToLocalStorage) {\r\n      let totalSize = 0;\r\n      const keys = Object.keys(localStorage);\r\n      \r\n      keys.forEach(key => {\r\n        if (key.startsWith('deckmaster_')) {\r\n          totalSize += localStorage.getItem(key).length;\r\n        }\r\n      });\r\n\r\n      return {\r\n        type: 'localStorage',\r\n        itemCount: keys.filter(k => k.startsWith('deckmaster_')).length,\r\n        estimatedSize: totalSize,\r\n        estimatedSizeMB: (totalSize / 1024 / 1024).toFixed(2),\r\n        maxSize: '5-10MB (limite do navegador)',\r\n      };\r\n    }\r\n\r\n    const items = await this.getAllItems();\r\n    let totalSize = 0;\r\n    \r\n    items.forEach(item => {\r\n      totalSize += JSON.stringify(item).length;\r\n    });\r\n\r\n    // Tenta obter quota do navegador (se dispon√≠vel)\r\n    let quota = null;\r\n    if (navigator.storage && navigator.storage.estimate) {\r\n      try {\r\n        const estimate = await navigator.storage.estimate();\r\n        quota = {\r\n          usage: estimate.usage,\r\n          quota: estimate.quota,\r\n          usageMB: (estimate.usage / 1024 / 1024).toFixed(2),\r\n          quotaMB: (estimate.quota / 1024 / 1024).toFixed(2),\r\n          percentUsed: ((estimate.usage / estimate.quota) * 100).toFixed(2),\r\n        };\r\n      } catch (error) {\r\n        console.warn(\"‚ö†Ô∏è N√£o foi poss√≠vel obter quota do storage\");\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'IndexedDB',\r\n      itemCount: items.length,\r\n      estimatedSize: totalSize,\r\n      estimatedSizeMB: (totalSize / 1024 / 1024).toFixed(2),\r\n      quota: quota,\r\n    };\r\n  }\r\n\r\n  // M√©todo para debug\r\n  async logStats() {\r\n    const stats = await this.getStorageStats();\r\n    \r\n    console.log(`\r\nüìä ESTAT√çSTICAS DE ARMAZENAMENTO:\r\n  üíæ Tipo: ${stats.type}\r\n  üì¶ Itens: ${stats.itemCount}\r\n  üíΩ Tamanho estimado: ${stats.estimatedSizeMB}MB\r\n  ${stats.quota ? `\r\n  üìà Quota do navegador:\r\n    ‚Ä¢ Usado: ${stats.quota.usageMB}MB\r\n    ‚Ä¢ Total: ${stats.quota.quotaMB}MB\r\n    ‚Ä¢ Ocupa√ß√£o: ${stats.quota.percentUsed}%\r\n  ` : `  üìè Limite: ${stats.maxSize || 'Desconhecido'}`}\r\n    `);\r\n  }\r\n}\r\n\r\n// Singleton\r\nconst storage = new IndexedDBStorage();\r\n\r\nexport default storage;\r\n\r\n// Exporta a inst√¢ncia tamb√©m como named export para compatibilidade\r\nexport const indexedDBStorage = storage;\r\n\r\n// Exporta m√©todos √∫teis\r\nexport const setItem = (key, value) => storage.setItem(key, value);\r\nexport const getItem = (key) => storage.getItem(key);\r\nexport const removeItem = (key) => storage.removeItem(key);\r\nexport const clear = () => storage.clear();\r\nexport const getStorageStats = () => storage.getStorageStats();\r\nexport const logStats = () => storage.logStats();\r\n\r\n// Exp√µe globalmente para debug\r\nif (typeof window !== 'undefined') {\r\n  window.storageManager = storage;\r\n  console.log(\"üí° Use window.storageManager.logStats() para ver estat√≠sticas de armazenamento\");\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}