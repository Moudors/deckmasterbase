{"ast":null,"code":"// src/hooks/useAuthState.js\nimport{useState,useEffect}from'react';import{supabase}from'../supabase';export function useAuthState(){const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);console.log('üîç useAuthState - Estado inicial:',{user:(user===null||user===void 0?void 0:user.email)||'null',loading});useEffect(()=>{console.log('üîÑ useAuthState - Configurando listener de auth...');// Verificar sess√£o atual primeiro\nconst checkSession=async()=>{try{const{data:{session},error}=await supabase.auth.getSession();if(error){console.error('‚ùå Erro ao verificar sess√£o:',error);setUser(null);}else if(session!==null&&session!==void 0&&session.user){console.log('‚úÖ Sess√£o encontrada:',session.user.email);setUser(session.user);}else{console.log('‚ÑπÔ∏è Nenhuma sess√£o ativa');setUser(null);}}catch(err){console.error('‚ùå Erro inesperado ao verificar sess√£o:',err);setUser(null);}finally{setLoading(false);}};// Configurar listener para mudan√ßas de auth\nconst{data:{subscription}}=supabase.auth.onAuthStateChange(async(event,session)=>{var _session$user;console.log('üë§ useAuthState - Auth state changed:',event,(session===null||session===void 0?void 0:(_session$user=session.user)===null||_session$user===void 0?void 0:_session$user.email)||'sem usu√°rio');if(session!==null&&session!==void 0&&session.user){setUser(session.user);}else{setUser(null);}setLoading(false);});// Verificar sess√£o atual\ncheckSession();// Cleanup\nreturn()=>{subscription===null||subscription===void 0?void 0:subscription.unsubscribe();};},[]);console.log('üîç useAuthState - Estado atual:',{user:(user===null||user===void 0?void 0:user.email)||'null',loading});return[user,loading];}","map":{"version":3,"names":["useState","useEffect","supabase","useAuthState","user","setUser","loading","setLoading","console","log","email","checkSession","data","session","error","auth","getSession","err","subscription","onAuthStateChange","event","_session$user","unsubscribe"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/hooks/useAuthState.js"],"sourcesContent":["// src/hooks/useAuthState.js\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabase';\r\n\r\nexport function useAuthState() {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  console.log('üîç useAuthState - Estado inicial:', { \r\n    user: user?.email || 'null', \r\n    loading\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('üîÑ useAuthState - Configurando listener de auth...');\r\n    \r\n    // Verificar sess√£o atual primeiro\r\n    const checkSession = async () => {\r\n      try {\r\n        const { data: { session }, error } = await supabase.auth.getSession();\r\n        if (error) {\r\n          console.error('‚ùå Erro ao verificar sess√£o:', error);\r\n          setUser(null);\r\n        } else if (session?.user) {\r\n          console.log('‚úÖ Sess√£o encontrada:', session.user.email);\r\n          setUser(session.user);\r\n        } else {\r\n          console.log('‚ÑπÔ∏è Nenhuma sess√£o ativa');\r\n          setUser(null);\r\n        }\r\n      } catch (err) {\r\n        console.error('‚ùå Erro inesperado ao verificar sess√£o:', err);\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Configurar listener para mudan√ßas de auth\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        console.log('üë§ useAuthState - Auth state changed:', event, session?.user?.email || 'sem usu√°rio');\r\n        \r\n        if (session?.user) {\r\n          setUser(session.user);\r\n        } else {\r\n          setUser(null);\r\n        }\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    // Verificar sess√£o atual\r\n    checkSession();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      subscription?.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  console.log('üîç useAuthState - Estado atual:', { user: user?.email || 'null', loading });\r\n\r\n  return [user, loading];\r\n}"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,QAAQ,KAAQ,aAAa,CAEtC,MAAO,SAAS,CAAAC,YAAYA,CAAA,CAAG,CAC7B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAE5CQ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAE,CAC/CL,IAAI,CAAE,CAAAA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,KAAK,GAAI,MAAM,CAC3BJ,OACF,CAAC,CAAC,CAEFL,SAAS,CAAC,IAAM,CACdO,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CAEjE;AACA,KAAM,CAAAE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAEC,IAAI,CAAE,CAAEC,OAAQ,CAAC,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAZ,QAAQ,CAACa,IAAI,CAACC,UAAU,CAAC,CAAC,CACrE,GAAIF,KAAK,CAAE,CACTN,OAAO,CAACM,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDT,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,IAAM,IAAIQ,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAET,IAAI,CAAE,CACxBI,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEI,OAAO,CAACT,IAAI,CAACM,KAAK,CAAC,CACvDL,OAAO,CAACQ,OAAO,CAACT,IAAI,CAAC,CACvB,CAAC,IAAM,CACLI,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCJ,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAE,MAAOY,GAAG,CAAE,CACZT,OAAO,CAACM,KAAK,CAAC,wCAAwC,CAAEG,GAAG,CAAC,CAC5DZ,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAEK,IAAI,CAAE,CAAEM,YAAa,CAAE,CAAC,CAAGhB,QAAQ,CAACa,IAAI,CAACI,iBAAiB,CAChE,MAAOC,KAAK,CAAEP,OAAO,GAAK,KAAAQ,aAAA,CACxBb,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAEW,KAAK,CAAE,CAAAP,OAAO,SAAPA,OAAO,kBAAAQ,aAAA,CAAPR,OAAO,CAAET,IAAI,UAAAiB,aAAA,iBAAbA,aAAA,CAAeX,KAAK,GAAI,aAAa,CAAC,CAElG,GAAIG,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAET,IAAI,CAAE,CACjBC,OAAO,CAACQ,OAAO,CAACT,IAAI,CAAC,CACvB,CAAC,IAAM,CACLC,OAAO,CAAC,IAAI,CAAC,CACf,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACAI,YAAY,CAAC,CAAC,CAEd;AACA,MAAO,IAAM,CACXO,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEI,WAAW,CAAC,CAAC,CAC7B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAENd,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAE,CAAEL,IAAI,CAAE,CAAAA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,KAAK,GAAI,MAAM,CAAEJ,OAAQ,CAAC,CAAC,CAExF,MAAO,CAACF,IAAI,CAAEE,OAAO,CAAC,CACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}