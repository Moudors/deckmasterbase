{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import{motion,AnimatePresence}from\"framer-motion\";import{X,Filter,Trash2}from\"lucide-react\";import{useAuthState}from\"../hooks/useAuthState\";import CardGridItem from\"../components/deck/CardGridItem\";import ArtSelector from\"../components/deck/ArtSelector\";import DeleteQuantityDialog from\"../components/deck/DeleteQuantityDialog\";import TradeModal from\"../components/deck/TradeModal\";import BuyRequestModal from\"../components/deck/BuyRequestModal\";import{Button}from\"../components/ui/button\";import{Alert,AlertDescription}from\"../components/ui/alert\";import{AlertCircle}from\"lucide-react\";import{useConnectivity}from\"../lib/connectivityManager\";import{useDecks,useDeckCards}from\"../lib/useUnifiedDecks\";import{Input}from\"../components/ui/input\";import{Search,Loader2}from\"lucide-react\";import{useQueryClient}from\"@tanstack/react-query\";import{deckCardOperations}from\"../lib/supabaseOperations\";import{supabase}from\"../supabase\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Trade=()=>{const navigate=useNavigate();const[user]=useAuthState();const{isOnline,canSaveData}=useConnectivity();const queryClient=useQueryClient();// Buscar o deck \"Trade\" ou \"Trades\" do usu√°rio\nconst{decks=[],isLoading:decksLoading}=useDecks();const tradeDeck=useMemo(()=>decks===null||decks===void 0?void 0:decks.find(deck=>deck.format===\"Trade\"||deck.format===\"Trades\"),[decks]);const deckId=tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.id;const{cards:deckCards=[],isLoading:cardsLoading,addCard,updateCard,deleteCard,canEdit}=useDeckCards(deckId);// Estados\nconst[showArtSelector,setShowArtSelector]=useState(false);const[selectedCardForArt,setSelectedCardForArt]=useState(null);const[error,setError]=useState(null);// Estados para deletar cartas\nconst[isSelectionMode,setIsSelectionMode]=useState(false);const[selectedCards,setSelectedCards]=useState([]);const[showDeleteDialog,setShowDeleteDialog]=useState(false);const[cardsToDelete,setCardsToDelete]=useState([]);// Estados da SearchBar\nconst[query,setQuery]=useState(\"\");const[suggestions,setSuggestions]=useState([]);const[showSuggestions,setShowSuggestions]=useState(false);const[isLoadingSuggestions,setIsLoadingSuggestions]=useState(false);const[isSearching,setIsSearching]=useState(false);const[selectedIndex,setSelectedIndex]=useState(-1);// üîÑ Estado do modo filtro (swipe)\nconst[isFilterMode,setIsFilterMode]=useState(false);// üîÅ Estados do Trade\nconst[friendsWantedCards,setFriendsWantedCards]=useState(new Map());// Map<scryfall_id, [{ userId, displayName }]>\nconst[showTradeModal,setShowTradeModal]=useState(false);const[selectedTradeCard,setSelectedTradeCard]=useState(null);// üõí Estados do BuyRequest (quando visualiza deck Trade de amigo)\nconst[showBuyRequestModal,setShowBuyRequestModal]=useState(false);const[selectedCardForBuy,setSelectedCardForBuy]=useState(null);const[deckOwnerName,setDeckOwnerName]=useState(\"\");// Refs\nconst searchRef=useRef(null);const inputRef=useRef(null);const touchStartX=useRef(0);const touchStartY=useRef(0);// Verifica se usu√°rio tem permiss√£o\nconst isViewOnly=!canEdit;// Verifica se est√° visualizando deck Trade de um amigo\nconst isFriendTradeDeck=useMemo(()=>{console.log(\"üîç Trade.jsx - tradeDeck completo:\",tradeDeck);// Usar user_id ao inv√©s de owner_id (formato correto do Supabase)\nconst deckOwnerId=(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.user_id)||(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.owner_id);const result=isViewOnly&&tradeDeck&&deckOwnerId!==(user===null||user===void 0?void 0:user.id);console.log(\"üîç Trade.jsx - isFriendTradeDeck:\",{result,isViewOnly,deckName:tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.deck_name,deckOwnerId,userId:user===null||user===void 0?void 0:user.id,comparison:\"\".concat(deckOwnerId,\" !== \").concat(user===null||user===void 0?void 0:user.id)});return result;},[isViewOnly,tradeDeck,user===null||user===void 0?void 0:user.id]);// Buscar nome do dono do deck se for deck de amigo\nuseEffect(()=>{const fetchOwnerName=async()=>{const deckOwnerId=(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.user_id)||(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.owner_id);if(deckOwnerId&&isFriendTradeDeck){try{const{data,error}=await supabase.from('users').select('display_name').eq('id',deckOwnerId).single();if(error)throw error;setDeckOwnerName((data===null||data===void 0?void 0:data.display_name)||\"Amigo\");}catch(err){console.error(\"Erro ao buscar nome do dono:\",err);setDeckOwnerName(\"Amigo\");}}};fetchOwnerName();},[tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.user_id,tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.owner_id,isFriendTradeDeck]);// Revalidar decks ao montar componente (para pegar nome atualizado)\nuseEffect(()=>{if(user!==null&&user!==void 0&&user.id){queryClient.invalidateQueries(['decks',user.id]);}},[user===null||user===void 0?void 0:user.id,queryClient]);// Debug: Log do estado dos decks\nuseEffect(()=>{// Log removido - n√£o essencial para Trade\n},[decks,decksLoading,tradeDeck]);// üîÅ Buscar cartas de amigos com is_transparent=true\nuseEffect(()=>{const fetchFriendsWantedCards=async()=>{if(!(user!==null&&user!==void 0&&user.id))return;if(deckCards.length===0){setFriendsWantedCards(new Map());return;}try{// 1. Buscar amigos do usu√°rio\nconst{data:friendships,error:friendsError}=await supabase.from('friendships').select('friend_id').eq('user_id',user.id).eq('status','accepted');if(friendsError)throw friendsError;if(!friendships||friendships.length===0)return;const friendIds=friendships.map(f=>f.friend_id);// 2. Buscar dados dos amigos (display_name)\nconst{data:friendsData,error:friendsDataError}=await supabase.from('users').select('id, display_name').in('id',friendIds);if(friendsDataError)throw friendsDataError;// 3. Buscar deck_cards dos amigos onde is_transparent=true\nconst{data:transparentCards,error:cardsError}=await supabase.from('deck_cards').select('scryfall_id, card_name, is_transparent, deck_id, decks!inner(owner_id)').in('decks.owner_id',friendIds).eq('is_transparent',true);if(cardsError)throw cardsError;// 4. Mapear cartas por scryfall_id\nconst wantedMap=new Map();transparentCards===null||transparentCards===void 0?void 0:transparentCards.forEach(tc=>{const scryfallId=tc.scryfall_id;const ownerId=tc.decks.owner_id;const ownerData=friendsData===null||friendsData===void 0?void 0:friendsData.find(f=>f.id===ownerId);const friendData={userId:ownerId,displayName:(ownerData===null||ownerData===void 0?void 0:ownerData.display_name)||'Amigo'};if(wantedMap.has(scryfallId)){wantedMap.get(scryfallId).push(friendData);}else{wantedMap.set(scryfallId,[friendData]);}});setFriendsWantedCards(wantedMap);}catch(error){console.error(\"‚ùå Erro ao buscar cartas de amigos:\",error);}};fetchFriendsWantedCards();},[user===null||user===void 0?void 0:user.id,deckCards.length]);// Redireciona se n√£o encontrar o deck Trade\nuseEffect(()=>{const timer=setTimeout(()=>{if(!decksLoading&&!tradeDeck){navigate(\"/\",{state:{message:\"Voc√™ precisa criar um deck Trade primeiro.\",type:\"warning\"}});}},3000);return()=>clearTimeout(timer);},[decksLoading,tradeDeck,navigate]);// Handler para sele√ß√£o de arte\nconst handleShowArtSelector=card=>{// Bloqueia apenas se for deck de amigo (qualquer deck)\n// Permite se for deck pr√≥prio (incluindo Trade e qualquer outro)\nif(isFriendTradeDeck){console.log(\"üö´ Bloqueado: deck de amigo, use BuyRequestModal\");return;}console.log(\"üé® Abrindo ArtSelector - deck pr√≥prio:\",card.card_name);setSelectedCardForArt(card);setShowArtSelector(true);};const handleSelectArt=async artData=>{console.log(\"üé® handleSelectArt chamado:\",{artData,selectedCard:selectedCardForArt===null||selectedCardForArt===void 0?void 0:selectedCardForArt.card_name,hasCardFaces:!!(selectedCardForArt!==null&&selectedCardForArt!==void 0&&selectedCardForArt.card_faces),isViewOnly});let updates=_objectSpread({},artData);if(selectedCardForArt.card_faces&&Array.isArray(selectedCardForArt.card_faces)){console.log(\"üé® Atualizando card_faces...\");const newCardFaces=selectedCardForArt.card_faces.map(face=>_objectSpread(_objectSpread({},face),{},{image_url:artData.image_url,image_uris:_objectSpread(_objectSpread({},face.image_uris),{},{normal:artData.image_url})}));updates.card_faces=newCardFaces;console.log(\"üé® Novos card_faces:\",newCardFaces);}console.log(\"üé® Updates finais:\",updates);if(selectedCardForArt&&!isViewOnly){try{console.log(\"üé® Chamando updateCard...\");await updateCard({cardId:selectedCardForArt.id,updates});console.log(\"üé® Update bem-sucedido!\");setShowArtSelector(false);setSelectedCardForArt(null);}catch(error){console.error(\"‚ùå Erro ao alterar arte:\",error);setError(\"Erro ao alterar arte da carta\");}}else{console.warn(\"‚ö†Ô∏è N√£o pode atualizar:\",{hasCard:!!selectedCardForArt,isViewOnly});}};// Toggle transpar√™ncia (adquirida/n√£o adquirida)\nconst handleToggleAcquired=async card=>{if(isViewOnly)return;try{await updateCard({cardId:card.id,updates:{acquired:!card.acquired}});}catch(error){console.error(\"Erro ao atualizar carta:\",error);}};// üîÅ Handler para clique duplo - abrir modal de trade\nconst handleDoubleClick=card=>{if(isViewOnly||!friendsWantedCards.has(card.scryfall_id))return;console.log(\"üîÅ Clique duplo na carta:\",card.card_name);setSelectedTradeCard(card);setShowTradeModal(true);};// Handlers para deletar cartas\nconst handleToggleSelect=cardId=>{setSelectedCards(prev=>prev.includes(cardId)?prev.filter(id=>id!==cardId):[...prev,cardId]);};const handleDeleteSelected=async()=>{console.log(\"üóëÔ∏è handleDeleteSelected chamado\",{selectedCardsCount:selectedCards.length,canEdit,selectedCards});if(selectedCards.length>0&&canEdit){const cardsToRemove=deckCards.filter(c=>selectedCards.includes(c.id));console.log(\"üóëÔ∏è Cartas a serem removidas:\",cardsToRemove);setCardsToDelete(cardsToRemove);setShowDeleteDialog(true);}else{console.log(\"‚ö†Ô∏è N√£o pode deletar:\",{hasSelectedCards:selectedCards.length>0,canEdit});}};const handleConfirmDelete=async quantities=>{console.log(\"üóëÔ∏è handleConfirmDelete chamado\",{quantities});try{const deletions=Object.entries(quantities).map(_ref=>{let[cardId,quantity]=_ref;return{cardId,quantityToDelete:quantity};});console.log(\"üóëÔ∏è Deletions array:\",deletions);for(const deletion of deletions){const card=deckCards.find(c=>c.id===deletion.cardId);console.log(\"üóëÔ∏è Processando carta:\",{cardId:deletion.cardId,card:card?{id:card.id,name:card.card_name,quantity:card.quantity}:null,quantityToDelete:deletion.quantityToDelete});if(card){if(deletion.quantityToDelete>=card.quantity){console.log(\"üóëÔ∏è Deletando carta completamente:\",card.id);await deleteCard(deletion.cardId);}else{const newQuantity=card.quantity-deletion.quantityToDelete;console.log(\"üóëÔ∏è Reduzindo quantidade:\",{oldQuantity:card.quantity,newQuantity});await updateCard({cardId:deletion.cardId,updates:{quantity:newQuantity}});}}}console.log(\"‚úÖ Dele√ß√µes conclu√≠das com sucesso\");setSelectedCards([]);setIsSelectionMode(false);setShowDeleteDialog(false);setCardsToDelete([]);}catch(error){console.error(\"‚ùå Erro ao remover cartas:\",error);setError(\"Erro ao remover cartas selecionadas\");}};// üîÑ Swipe na SearchBar para alternar modo filtro\nconst handleSearchBarTouchStart=e=>{touchStartX.current=e.touches[0].clientX;touchStartY.current=e.touches[0].clientY;};const handleSearchBarTouchEnd=e=>{const touchEndX=e.changedTouches[0].clientX;const touchEndY=e.changedTouches[0].clientY;const diffX=Math.abs(touchEndX-touchStartX.current);const diffY=Math.abs(touchEndY-touchStartY.current);if(diffX>80&&diffX>diffY){setIsFilterMode(prev=>!prev);console.log('[DEBUG] Modo filtro alternado:',!isFilterMode);}};// Buscar sugest√µes (API ou filtro local)\nuseEffect(()=>{const fetchSuggestions=async()=>{if(query.trim().length<2){setSuggestions([]);setShowSuggestions(false);return;}setIsLoadingSuggestions(true);try{if(isFilterMode){const filtered=deckCards.filter(card=>card.card_name.toLowerCase().includes(query.toLowerCase())).map(card=>card.card_name).slice(0,10);setSuggestions(filtered);setShowSuggestions(filtered.length>0);}else{const response=await fetch(\"https://api.scryfall.com/cards/autocomplete?q=\".concat(encodeURIComponent(query)));const data=await response.json();setSuggestions(data.data||[]);setShowSuggestions(true);}setSelectedIndex(-1);}catch(error){console.error(\"Erro ao buscar sugest√µes:\",error);setSuggestions([]);}finally{setIsLoadingSuggestions(false);}};const debounceTimer=setTimeout(fetchSuggestions,300);return()=>clearTimeout(debounceTimer);},[query,isFilterMode,deckCards]);// Adicionar carta ao deck Trade\nconst handleAddCard=async cardName=>{if(!deckId||isFilterMode)return;setIsSearching(true);try{var _cardData$image_uris,_cardData$card_faces,_cardData$card_faces$,_cardData$card_faces$2,_inputRef$current;const response=await fetch(\"https://api.scryfall.com/cards/named?exact=\".concat(encodeURIComponent(cardName)));const cardData=await response.json();const imageUrl=((_cardData$image_uris=cardData.image_uris)===null||_cardData$image_uris===void 0?void 0:_cardData$image_uris.normal)||((_cardData$card_faces=cardData.card_faces)===null||_cardData$card_faces===void 0?void 0:(_cardData$card_faces$=_cardData$card_faces[0])===null||_cardData$card_faces$===void 0?void 0:(_cardData$card_faces$2=_cardData$card_faces$.image_uris)===null||_cardData$card_faces$2===void 0?void 0:_cardData$card_faces$2.normal);const newCard={deck_id:deckId,card_name:cardData.name,scryfall_id:cardData.id,image_url:imageUrl,mana_cost:cardData.mana_cost||\"\",type_line:cardData.type_line||\"\",acquired:false,quantity:1,created_at:new Date(),card_faces:cardData.card_faces||null};const currentCards=queryClient.getQueryData([\"cards\",deckId])||[];const existing=currentCards.find(c=>c.scryfall_id===cardData.id);if(existing){const nextQty=(existing.quantity||1)+1;queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c.id===existing.id?_objectSpread(_objectSpread({},c),{},{quantity:nextQty}):c);});try{await deckCardOperations.updateDeckCard(existing.id,{quantity:nextQty});}catch(err){console.error(\"Erro ao incrementar:\",err);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c.id===existing.id?_objectSpread(_objectSpread({},c),{},{quantity:existing.quantity}):c);});}}else{const tempId=\"tmp-\".concat(Date.now());const tempCard=_objectSpread(_objectSpread({id:tempId},newCard),{},{__optimistic:true});queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return[tempCard,...old];});try{const docId=await deckCardOperations.addCardToDeck(deckId,newCard);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c&&c.id===tempId?_objectSpread({id:docId},newCard):c);});}catch(err){console.error(\"Erro ao adicionar:\",err);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.filter(c=>c.id!==tempId);});alert(\"Erro ao adicionar carta: \"+(err.message||\"Tente novamente\"));}}setQuery(\"\");setSuggestions([]);setShowSuggestions(false);(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}catch(error){console.error(\"Erro ao adicionar carta:\",error);}finally{setIsSearching(false);}};const handleSubmit=e=>{e.preventDefault();if(isFilterMode)return;if(selectedIndex>=0&&suggestions[selectedIndex]){handleAddCard(suggestions[selectedIndex]);}else if(query.trim()){handleAddCard(query.trim());}};const handleKeyDown=e=>{if(!showSuggestions||suggestions.length===0)return;if(e.key===\"ArrowDown\"){e.preventDefault();setSelectedIndex(prev=>prev<suggestions.length-1?prev+1:prev);}else if(e.key===\"ArrowUp\"){e.preventDefault();setSelectedIndex(prev=>prev>0?prev-1:-1);}else if(e.key===\"Escape\"){setShowSuggestions(false);setSelectedIndex(-1);}};const handleSuggestionClick=suggestion=>{if(isFilterMode){setQuery(suggestion);setShowSuggestions(false);}else{handleAddCard(suggestion);}};// Filtrar cartas exibidas\nconst displayedCards=useMemo(()=>{if(!isFilterMode||!query.trim()){return deckCards;}return deckCards.filter(card=>card.card_name.toLowerCase().includes(query.toLowerCase()));},[deckCards,isFilterMode,query]);const totalCards=displayedCards.reduce((sum,card)=>sum+(card.quantity||1),0);if(decksLoading||cardsLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black flex items-center justify-center\",children:/*#__PURE__*/_jsx(Loader2,{className:\"w-8 h-8 animate-spin text-orange-500\"})});}if(!tradeDeck){return null;}// Log para confirmar que est√° na p√°gina Trade\nconsole.log(\"üîÅ P√ÅGINA TRADE CARREGADA\",{deckId,totalCards:deckCards.length,friendsWantedSize:friendsWantedCards.size,friendsWantedCards:Array.from(friendsWantedCards.entries())});return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between px-4 py-3 border-b border-gray-800 bg-green-900/20\",children:[/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:()=>navigate(\"/\"),className:\"text-gray-400 hover:text-white\",children:/*#__PURE__*/_jsx(X,{className:\"w-6 h-6\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center flex-1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-lg font-bold text-white\",children:(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.deck_name)||\"Trade\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-400\",children:[totalCards,\" carta\",totalCards!==1?'s':'',\" \\u2022 \",friendsWantedCards.size,\" match\",friendsWantedCards.size!==1?'es':'']})]}),!isViewOnly&&/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:()=>{if(isSelectionMode&&selectedCards.length>0){handleDeleteSelected();}else{setIsSelectionMode(!isSelectionMode);setSelectedCards([]);}},className:\"\".concat(isSelectionMode&&selectedCards.length>0?\"text-red-500 hover:text-red-400\":\"text-gray-400 hover:text-white\"),children:/*#__PURE__*/_jsx(Trash2,{className:\"w-5 h-5\"})}),isViewOnly&&/*#__PURE__*/_jsx(\"div\",{className:\"w-10\"})]}),!isOnline&&/*#__PURE__*/_jsxs(Alert,{className:\"mx-4 mt-4 bg-yellow-500/10 border-yellow-500/50\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4 text-yellow-500\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-yellow-200\",children:\"Voc\\xEA est\\xE1 offline. As altera\\xE7\\xF5es ser\\xE3o sincronizadas quando voltar online.\"})]}),error&&/*#__PURE__*/_jsxs(Alert,{className:\"mx-4 mt-4 bg-red-500/10 border-red-500/50\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4 text-red-500\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-red-200\",children:error})]}),/*#__PURE__*/_jsxs(motion.div,{initial:{y:-20,opacity:0},animate:{y:0,opacity:1},className:\"sticky top-0 z-20 border-b border-gray-800 p-4 transition-colors duration-300 \".concat(isFilterMode?'bg-blue-900/40':'bg-gray-900'),onTouchStart:handleSearchBarTouchStart,onTouchEnd:handleSearchBarTouchEnd,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"flex gap-2 relative\",ref:searchRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex-1\",children:[isFilterMode?/*#__PURE__*/_jsx(Filter,{className:\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-blue-400 z-10\"}):/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400 z-10\"}),/*#__PURE__*/_jsx(Input,{ref:inputRef,value:query,onChange:e=>setQuery(e.target.value),onKeyDown:handleKeyDown,placeholder:isFilterMode?\"Filtrar no trade...\":\"Adicionar carta...\",className:\"pl-10 bg-gray-800 border-gray-700 text-white placeholder-gray-500 transition-colors \".concat(isFilterMode?'border-blue-600':''),disabled:isSearching||!canSaveData}),isLoadingSuggestions&&/*#__PURE__*/_jsx(Loader2,{className:\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 animate-spin text-gray-400\"})]}),!isFilterMode&&/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSearching||!query.trim()||!canSaveData,className:\"bg-orange-500 hover:bg-orange-600 disabled:bg-gray-700\",children:isSearching?/*#__PURE__*/_jsx(Loader2,{className:\"w-4 h-4 animate-spin\"}):/*#__PURE__*/_jsx(Search,{className:\"w-4 h-4\"})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-center mt-2 text-gray-400\",children:isFilterMode?/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-400\",children:\"\\uD83D\\uDD0D Modo Filtro - Deslize para voltar \\xE0 busca\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"\\uD83D\\uDD04 Deslize para filtrar seu trade\"})}),/*#__PURE__*/_jsx(AnimatePresence,{children:showSuggestions&&suggestions.length>0&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},exit:{opacity:0,y:-10},className:\"absolute left-4 right-4 top-full mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-h-60 overflow-y-auto z-30\",children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleSuggestionClick(suggestion),className:\"w-full text-left px-4 py-2 hover:bg-gray-700 transition-colors \".concat(index===selectedIndex?'bg-gray-700':'',\" \").concat(index===0?'rounded-t-lg':'',\" \").concat(index===suggestions.length-1?'rounded-b-lg':''),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white\",children:suggestion})},index))})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto px-4 py-6\",children:displayedCards.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-full text-gray-400\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg\",children:isFilterMode&&query.trim()?\"Nenhuma carta encontrada com esse nome\":\"Seu deck de trade est√° vazio\"}),!isFilterMode&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2\",children:\"Use a barra de busca para adicionar cartas\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-3 pb-20\",children:/*#__PURE__*/_jsx(AnimatePresence,{children:displayedCards.map(card=>{const isWantedByFriends=friendsWantedCards.has(card.scryfall_id);console.log(\"üé¥ Trade.jsx ANTES DE PASSAR PROP:\",{cardName:card.card_name,scryfallId:card.scryfall_id,isWantedByFriends,isWantedByFriendsType:typeof isWantedByFriends,mapSize:friendsWantedCards.size,mapHas:friendsWantedCards.has(card.scryfall_id)});const handleDoubleClickWrapper=()=>{if(isFriendTradeDeck){console.log(\"üñ±Ô∏è Duplo clique no deck de amigo - abrindo BuyRequestModal\");setSelectedCardForBuy(card);setShowBuyRequestModal(true);}else{handleDoubleClick(card);}};const handleLongPressWrapper=card=>{if(isFriendTradeDeck){console.log(\"‚è±Ô∏è Long press no deck de amigo - abrindo BuyRequestModal\");setSelectedCardForBuy(card);setShowBuyRequestModal(true);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CardGridItem,{card:card,onToggleAcquired:handleToggleAcquired,onShowArtSelector:handleShowArtSelector,isViewOnly:isViewOnly,currentUserId:user===null||user===void 0?void 0:user.id,deckOwnerId:(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.user_id)||(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.owner_id),isSelectionMode:isSelectionMode,isSelected:selectedCards.includes(card.id),onToggleSelect:()=>handleToggleSelect(card.id),onDoubleClick:handleDoubleClickWrapper,onLongPress:isFriendTradeDeck?handleLongPressWrapper:undefined,hasGreenBorder:isWantedByFriends})},\"\".concat(card.id,\"-\").concat(card.scryfall_id));})})})}),isSelectionMode&&!isViewOnly&&/*#__PURE__*/_jsx(motion.div,{initial:{y:100},animate:{y:0},exit:{y:100},className:\"fixed bottom-6 left-1/2 -translate-x-1/2 bg-gray-800 border border-gray-700 rounded-full px-6 py-3 shadow-2xl\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-white font-medium\",children:selectedCards.length>0?\"\".concat(selectedCards.length,\" carta\").concat(selectedCards.length>1?'s':'',\" selecionada\").concat(selectedCards.length>1?'s':''):\"Selecione cartas para remover\"})}),/*#__PURE__*/_jsx(DeleteQuantityDialog,{isOpen:showDeleteDialog,onClose:()=>{setShowDeleteDialog(false);setCardsToDelete([]);},cards:cardsToDelete,onConfirm:handleConfirmDelete}),/*#__PURE__*/_jsx(TradeModal,{isOpen:showTradeModal,onClose:()=>{setShowTradeModal(false);setSelectedTradeCard(null);},card:selectedTradeCard,friendsWhoWant:selectedTradeCard?friendsWantedCards.get(selectedTradeCard.scryfall_id)||[]:[]}),/*#__PURE__*/_jsx(BuyRequestModal,{isOpen:showBuyRequestModal,onClose:()=>{setShowBuyRequestModal(false);setSelectedCardForBuy(null);},card:selectedCardForBuy,deckOwnerId:(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.user_id)||(tradeDeck===null||tradeDeck===void 0?void 0:tradeDeck.owner_id),deckOwnerName:deckOwnerName||\"Amigo\"}),/*#__PURE__*/_jsx(ArtSelector,{isOpen:showArtSelector,onClose:()=>{setShowArtSelector(false);setSelectedCardForArt(null);},card:selectedCardForArt,onSelectArt:handleSelectArt,onAddCard:addCard,onUpdateCard:updateCard,deckId:deckId})]});};export default Trade;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useNavigate","motion","AnimatePresence","X","Filter","Trash2","useAuthState","CardGridItem","ArtSelector","DeleteQuantityDialog","TradeModal","BuyRequestModal","Button","Alert","AlertDescription","AlertCircle","useConnectivity","useDecks","useDeckCards","Input","Search","Loader2","useQueryClient","deckCardOperations","supabase","jsx","_jsx","jsxs","_jsxs","Trade","navigate","user","isOnline","canSaveData","queryClient","decks","isLoading","decksLoading","tradeDeck","find","deck","format","deckId","id","cards","deckCards","cardsLoading","addCard","updateCard","deleteCard","canEdit","showArtSelector","setShowArtSelector","selectedCardForArt","setSelectedCardForArt","error","setError","isSelectionMode","setIsSelectionMode","selectedCards","setSelectedCards","showDeleteDialog","setShowDeleteDialog","cardsToDelete","setCardsToDelete","query","setQuery","suggestions","setSuggestions","showSuggestions","setShowSuggestions","isLoadingSuggestions","setIsLoadingSuggestions","isSearching","setIsSearching","selectedIndex","setSelectedIndex","isFilterMode","setIsFilterMode","friendsWantedCards","setFriendsWantedCards","Map","showTradeModal","setShowTradeModal","selectedTradeCard","setSelectedTradeCard","showBuyRequestModal","setShowBuyRequestModal","selectedCardForBuy","setSelectedCardForBuy","deckOwnerName","setDeckOwnerName","searchRef","inputRef","touchStartX","touchStartY","isViewOnly","isFriendTradeDeck","console","log","deckOwnerId","user_id","owner_id","result","deckName","deck_name","userId","comparison","concat","fetchOwnerName","data","from","select","eq","single","display_name","err","invalidateQueries","fetchFriendsWantedCards","length","friendships","friendsError","friendIds","map","f","friend_id","friendsData","friendsDataError","in","transparentCards","cardsError","wantedMap","forEach","tc","scryfallId","scryfall_id","ownerId","ownerData","friendData","displayName","has","get","push","set","timer","setTimeout","state","message","type","clearTimeout","handleShowArtSelector","card","card_name","handleSelectArt","artData","selectedCard","hasCardFaces","card_faces","updates","_objectSpread","Array","isArray","newCardFaces","face","image_url","image_uris","normal","cardId","warn","hasCard","handleToggleAcquired","acquired","handleDoubleClick","handleToggleSelect","prev","includes","filter","handleDeleteSelected","selectedCardsCount","cardsToRemove","c","hasSelectedCards","handleConfirmDelete","quantities","deletions","Object","entries","_ref","quantity","quantityToDelete","deletion","name","newQuantity","oldQuantity","handleSearchBarTouchStart","e","current","touches","clientX","clientY","handleSearchBarTouchEnd","touchEndX","changedTouches","touchEndY","diffX","Math","abs","diffY","fetchSuggestions","trim","filtered","toLowerCase","slice","response","fetch","encodeURIComponent","json","debounceTimer","handleAddCard","cardName","_cardData$image_uris","_cardData$card_faces","_cardData$card_faces$","_cardData$card_faces$2","_inputRef$current","cardData","imageUrl","newCard","deck_id","mana_cost","type_line","created_at","Date","currentCards","getQueryData","existing","nextQty","setQueryData","old","arguments","undefined","updateDeckCard","tempId","now","tempCard","__optimistic","docId","addCardToDeck","alert","focus","handleSubmit","preventDefault","handleKeyDown","key","handleSuggestionClick","suggestion","displayedCards","totalCards","reduce","sum","className","children","friendsWantedSize","size","variant","onClick","div","initial","y","opacity","animate","onTouchStart","onTouchEnd","onSubmit","ref","value","onChange","target","onKeyDown","placeholder","disabled","exit","index","isWantedByFriends","isWantedByFriendsType","mapSize","mapHas","handleDoubleClickWrapper","handleLongPressWrapper","onToggleAcquired","onShowArtSelector","currentUserId","isSelected","onToggleSelect","onDoubleClick","onLongPress","hasGreenBorder","isOpen","onClose","onConfirm","friendsWhoWant","onSelectArt","onAddCard","onUpdateCard"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/pages/Trade.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { X, Filter, Trash2 } from \"lucide-react\";\r\nimport { useAuthState } from \"../hooks/useAuthState\";\r\nimport CardGridItem from \"../components/deck/CardGridItem\";\r\nimport ArtSelector from \"../components/deck/ArtSelector\";\r\nimport DeleteQuantityDialog from \"../components/deck/DeleteQuantityDialog\";\r\nimport TradeModal from \"../components/deck/TradeModal\";\r\nimport BuyRequestModal from \"../components/deck/BuyRequestModal\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { Alert, AlertDescription } from \"../components/ui/alert\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { useConnectivity } from \"../lib/connectivityManager\";\r\nimport { useDecks, useDeckCards } from \"../lib/useUnifiedDecks\";\r\nimport { Input } from \"../components/ui/input\";\r\nimport { Search, Loader2 } from \"lucide-react\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { deckCardOperations } from \"../lib/supabaseOperations\";\r\nimport { supabase } from \"../supabase\";\r\n\r\nconst Trade = () => {\r\n  const navigate = useNavigate();\r\n  const [user] = useAuthState();\r\n  const { isOnline, canSaveData } = useConnectivity();\r\n  const queryClient = useQueryClient();\r\n  \r\n  // Buscar o deck \"Trade\" ou \"Trades\" do usu√°rio\r\n  const { decks = [], isLoading: decksLoading } = useDecks();\r\n  const tradeDeck = useMemo(() => \r\n    decks?.find(deck => deck.format === \"Trade\" || deck.format === \"Trades\"), \r\n    [decks]\r\n  );\r\n  \r\n  const deckId = tradeDeck?.id;\r\n  \r\n  const { \r\n    cards: deckCards = [], \r\n    isLoading: cardsLoading,\r\n    addCard,\r\n    updateCard,\r\n    deleteCard,\r\n    canEdit \r\n  } = useDeckCards(deckId);\r\n\r\n  // Estados\r\n  const [showArtSelector, setShowArtSelector] = useState(false);\r\n  const [selectedCardForArt, setSelectedCardForArt] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Estados para deletar cartas\r\n  const [isSelectionMode, setIsSelectionMode] = useState(false);\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [cardsToDelete, setCardsToDelete] = useState([]);\r\n  \r\n  // Estados da SearchBar\r\n  const [query, setQuery] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [isLoadingSuggestions, setIsLoadingSuggestions] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n  \r\n  // üîÑ Estado do modo filtro (swipe)\r\n  const [isFilterMode, setIsFilterMode] = useState(false);\r\n  \r\n  // üîÅ Estados do Trade\r\n  const [friendsWantedCards, setFriendsWantedCards] = useState(new Map()); // Map<scryfall_id, [{ userId, displayName }]>\r\n  const [showTradeModal, setShowTradeModal] = useState(false);\r\n  const [selectedTradeCard, setSelectedTradeCard] = useState(null);\r\n  \r\n  // üõí Estados do BuyRequest (quando visualiza deck Trade de amigo)\r\n  const [showBuyRequestModal, setShowBuyRequestModal] = useState(false);\r\n  const [selectedCardForBuy, setSelectedCardForBuy] = useState(null);\r\n  const [deckOwnerName, setDeckOwnerName] = useState(\"\");\r\n  \r\n  // Refs\r\n  const searchRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const touchStartX = useRef(0);\r\n  const touchStartY = useRef(0);\r\n\r\n  // Verifica se usu√°rio tem permiss√£o\r\n  const isViewOnly = !canEdit;\r\n  \r\n  // Verifica se est√° visualizando deck Trade de um amigo\r\n  const isFriendTradeDeck = useMemo(() => {\r\n    console.log(\"üîç Trade.jsx - tradeDeck completo:\", tradeDeck);\r\n    // Usar user_id ao inv√©s de owner_id (formato correto do Supabase)\r\n    const deckOwnerId = tradeDeck?.user_id || tradeDeck?.owner_id;\r\n    const result = isViewOnly && tradeDeck && deckOwnerId !== user?.id;\r\n    console.log(\"üîç Trade.jsx - isFriendTradeDeck:\", {\r\n      result,\r\n      isViewOnly,\r\n      deckName: tradeDeck?.deck_name,\r\n      deckOwnerId,\r\n      userId: user?.id,\r\n      comparison: `${deckOwnerId} !== ${user?.id}`\r\n    });\r\n    return result;\r\n  }, [isViewOnly, tradeDeck, user?.id]);\r\n\r\n  // Buscar nome do dono do deck se for deck de amigo\r\n  useEffect(() => {\r\n    const fetchOwnerName = async () => {\r\n      const deckOwnerId = tradeDeck?.user_id || tradeDeck?.owner_id;\r\n      if (deckOwnerId && isFriendTradeDeck) {\r\n        try {\r\n          const { data, error } = await supabase\r\n            .from('users')\r\n            .select('display_name')\r\n            .eq('id', deckOwnerId)\r\n            .single();\r\n          \r\n          if (error) throw error;\r\n          setDeckOwnerName(data?.display_name || \"Amigo\");\r\n        } catch (err) {\r\n          console.error(\"Erro ao buscar nome do dono:\", err);\r\n          setDeckOwnerName(\"Amigo\");\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchOwnerName();\r\n  }, [tradeDeck?.user_id, tradeDeck?.owner_id, isFriendTradeDeck]);\r\n\r\n  // Revalidar decks ao montar componente (para pegar nome atualizado)\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      queryClient.invalidateQueries(['decks', user.id]);\r\n    }\r\n  }, [user?.id, queryClient]);\r\n\r\n  // Debug: Log do estado dos decks\r\n  useEffect(() => {\r\n    // Log removido - n√£o essencial para Trade\r\n  }, [decks, decksLoading, tradeDeck]);\r\n\r\n  // üîÅ Buscar cartas de amigos com is_transparent=true\r\n  useEffect(() => {\r\n    const fetchFriendsWantedCards = async () => {\r\n      if (!user?.id) return;\r\n      \r\n      if (deckCards.length === 0) {\r\n        setFriendsWantedCards(new Map());\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // 1. Buscar amigos do usu√°rio\r\n        const { data: friendships, error: friendsError } = await supabase\r\n          .from('friendships')\r\n          .select('friend_id')\r\n          .eq('user_id', user.id)\r\n          .eq('status', 'accepted');\r\n        \r\n        if (friendsError) throw friendsError;\r\n        if (!friendships || friendships.length === 0) return;\r\n        \r\n        const friendIds = friendships.map(f => f.friend_id);\r\n        \r\n        // 2. Buscar dados dos amigos (display_name)\r\n        const { data: friendsData, error: friendsDataError } = await supabase\r\n          .from('users')\r\n          .select('id, display_name')\r\n          .in('id', friendIds);\r\n        \r\n        if (friendsDataError) throw friendsDataError;\r\n        \r\n        // 3. Buscar deck_cards dos amigos onde is_transparent=true\r\n        const { data: transparentCards, error: cardsError } = await supabase\r\n          .from('deck_cards')\r\n          .select('scryfall_id, card_name, is_transparent, deck_id, decks!inner(owner_id)')\r\n          .in('decks.owner_id', friendIds)\r\n          .eq('is_transparent', true);\r\n        \r\n        if (cardsError) throw cardsError;\r\n        \r\n        // 4. Mapear cartas por scryfall_id\r\n        const wantedMap = new Map();\r\n        \r\n        transparentCards?.forEach(tc => {\r\n          const scryfallId = tc.scryfall_id;\r\n          const ownerId = tc.decks.owner_id;\r\n          const ownerData = friendsData?.find(f => f.id === ownerId);\r\n          \r\n          const friendData = {\r\n            userId: ownerId,\r\n            displayName: ownerData?.display_name || 'Amigo'\r\n          };\r\n          \r\n          if (wantedMap.has(scryfallId)) {\r\n            wantedMap.get(scryfallId).push(friendData);\r\n          } else {\r\n            wantedMap.set(scryfallId, [friendData]);\r\n          }\r\n        });\r\n        \r\n        setFriendsWantedCards(wantedMap);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao buscar cartas de amigos:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchFriendsWantedCards();\r\n  }, [user?.id, deckCards.length]);\r\n\r\n  // Redireciona se n√£o encontrar o deck Trade\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (!decksLoading && !tradeDeck) {\r\n        navigate(\"/\", { \r\n          state: { \r\n            message: \"Voc√™ precisa criar um deck Trade primeiro.\",\r\n            type: \"warning\"\r\n          } \r\n        });\r\n      }\r\n    }, 3000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [decksLoading, tradeDeck, navigate]);\r\n\r\n  // Handler para sele√ß√£o de arte\r\n  const handleShowArtSelector = (card) => {\r\n    // Bloqueia apenas se for deck de amigo (qualquer deck)\r\n    // Permite se for deck pr√≥prio (incluindo Trade e qualquer outro)\r\n    if (isFriendTradeDeck) {\r\n      console.log(\"üö´ Bloqueado: deck de amigo, use BuyRequestModal\");\r\n      return;\r\n    }\r\n    console.log(\"üé® Abrindo ArtSelector - deck pr√≥prio:\", card.card_name);\r\n    setSelectedCardForArt(card);\r\n    setShowArtSelector(true);\r\n  };\r\n\r\n  const handleSelectArt = async (artData) => {\r\n    console.log(\"üé® handleSelectArt chamado:\", {\r\n      artData,\r\n      selectedCard: selectedCardForArt?.card_name,\r\n      hasCardFaces: !!selectedCardForArt?.card_faces,\r\n      isViewOnly\r\n    });\r\n    \r\n    let updates = { ...artData };\r\n    if (selectedCardForArt.card_faces && Array.isArray(selectedCardForArt.card_faces)) {\r\n      console.log(\"üé® Atualizando card_faces...\");\r\n      const newCardFaces = selectedCardForArt.card_faces.map(face => ({\r\n        ...face,\r\n        image_url: artData.image_url,\r\n        image_uris: {\r\n          ...face.image_uris,\r\n          normal: artData.image_url\r\n        }\r\n      }));\r\n      updates.card_faces = newCardFaces;\r\n      console.log(\"üé® Novos card_faces:\", newCardFaces);\r\n    }\r\n    \r\n    console.log(\"üé® Updates finais:\", updates);\r\n    \r\n    if (selectedCardForArt && !isViewOnly) {\r\n      try {\r\n        console.log(\"üé® Chamando updateCard...\");\r\n        await updateCard({ cardId: selectedCardForArt.id, updates });\r\n        console.log(\"üé® Update bem-sucedido!\");\r\n        setShowArtSelector(false);\r\n        setSelectedCardForArt(null);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erro ao alterar arte:\", error);\r\n        setError(\"Erro ao alterar arte da carta\");\r\n      }\r\n    } else {\r\n      console.warn(\"‚ö†Ô∏è N√£o pode atualizar:\", { \r\n        hasCard: !!selectedCardForArt, \r\n        isViewOnly \r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle transpar√™ncia (adquirida/n√£o adquirida)\r\n  const handleToggleAcquired = async (card) => {\r\n    if (isViewOnly) return;\r\n    try {\r\n      await updateCard({ \r\n        cardId: card.id, \r\n        updates: { acquired: !card.acquired } \r\n      });\r\n    } catch (error) {\r\n      console.error(\"Erro ao atualizar carta:\", error);\r\n    }\r\n  };\r\n\r\n  // üîÅ Handler para clique duplo - abrir modal de trade\r\n  const handleDoubleClick = (card) => {\r\n    if (isViewOnly || !friendsWantedCards.has(card.scryfall_id)) return;\r\n    \r\n    console.log(\"üîÅ Clique duplo na carta:\", card.card_name);\r\n    setSelectedTradeCard(card);\r\n    setShowTradeModal(true);\r\n  };\r\n\r\n  // Handlers para deletar cartas\r\n  const handleToggleSelect = (cardId) => {\r\n    setSelectedCards((prev) =>\r\n      prev.includes(cardId)\r\n        ? prev.filter((id) => id !== cardId)\r\n        : [...prev, cardId]\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    console.log(\"üóëÔ∏è handleDeleteSelected chamado\", { \r\n      selectedCardsCount: selectedCards.length, \r\n      canEdit,\r\n      selectedCards \r\n    });\r\n    \r\n    if (selectedCards.length > 0 && canEdit) {\r\n      const cardsToRemove = deckCards.filter((c) => selectedCards.includes(c.id));\r\n      console.log(\"üóëÔ∏è Cartas a serem removidas:\", cardsToRemove);\r\n      setCardsToDelete(cardsToRemove);\r\n      setShowDeleteDialog(true);\r\n    } else {\r\n      console.log(\"‚ö†Ô∏è N√£o pode deletar:\", { \r\n        hasSelectedCards: selectedCards.length > 0, \r\n        canEdit \r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = async (quantities) => {\r\n    console.log(\"üóëÔ∏è handleConfirmDelete chamado\", { quantities });\r\n    \r\n    try {\r\n      const deletions = Object.entries(quantities).map(([cardId, quantity]) => ({\r\n        cardId,\r\n        quantityToDelete: quantity,\r\n      }));\r\n      \r\n      console.log(\"üóëÔ∏è Deletions array:\", deletions);\r\n      \r\n      for (const deletion of deletions) {\r\n        const card = deckCards.find(c => c.id === deletion.cardId);\r\n        console.log(\"üóëÔ∏è Processando carta:\", { \r\n          cardId: deletion.cardId, \r\n          card: card ? { id: card.id, name: card.card_name, quantity: card.quantity } : null,\r\n          quantityToDelete: deletion.quantityToDelete \r\n        });\r\n        \r\n        if (card) {\r\n          if (deletion.quantityToDelete >= card.quantity) {\r\n            console.log(\"üóëÔ∏è Deletando carta completamente:\", card.id);\r\n            await deleteCard(deletion.cardId);\r\n          } else {\r\n            const newQuantity = card.quantity - deletion.quantityToDelete;\r\n            console.log(\"üóëÔ∏è Reduzindo quantidade:\", { \r\n              oldQuantity: card.quantity, \r\n              newQuantity \r\n            });\r\n            await updateCard({ cardId: deletion.cardId, updates: { quantity: newQuantity } });\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(\"‚úÖ Dele√ß√µes conclu√≠das com sucesso\");\r\n      setSelectedCards([]);\r\n      setIsSelectionMode(false);\r\n      setShowDeleteDialog(false);\r\n      setCardsToDelete([]);\r\n    } catch (error) {\r\n      console.error(\"‚ùå Erro ao remover cartas:\", error);\r\n      setError(\"Erro ao remover cartas selecionadas\");\r\n    }\r\n  };\r\n\r\n  // üîÑ Swipe na SearchBar para alternar modo filtro\r\n  const handleSearchBarTouchStart = (e) => {\r\n    touchStartX.current = e.touches[0].clientX;\r\n    touchStartY.current = e.touches[0].clientY;\r\n  };\r\n\r\n  const handleSearchBarTouchEnd = (e) => {\r\n    const touchEndX = e.changedTouches[0].clientX;\r\n    const touchEndY = e.changedTouches[0].clientY;\r\n    const diffX = Math.abs(touchEndX - touchStartX.current);\r\n    const diffY = Math.abs(touchEndY - touchStartY.current);\r\n\r\n    if (diffX > 80 && diffX > diffY) {\r\n      setIsFilterMode(prev => !prev);\r\n      console.log('[DEBUG] Modo filtro alternado:', !isFilterMode);\r\n    }\r\n  };\r\n\r\n  // Buscar sugest√µes (API ou filtro local)\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      if (query.trim().length < 2) {\r\n        setSuggestions([]);\r\n        setShowSuggestions(false);\r\n        return;\r\n      }\r\n\r\n      setIsLoadingSuggestions(true);\r\n      \r\n      try {\r\n        if (isFilterMode) {\r\n          const filtered = deckCards\r\n            .filter(card => \r\n              card.card_name.toLowerCase().includes(query.toLowerCase())\r\n            )\r\n            .map(card => card.card_name)\r\n            .slice(0, 10);\r\n          \r\n          setSuggestions(filtered);\r\n          setShowSuggestions(filtered.length > 0);\r\n        } else {\r\n          const response = await fetch(\r\n            `https://api.scryfall.com/cards/autocomplete?q=${encodeURIComponent(query)}`\r\n          );\r\n          const data = await response.json();\r\n          setSuggestions(data.data || []);\r\n          setShowSuggestions(true);\r\n        }\r\n        setSelectedIndex(-1);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar sugest√µes:\", error);\r\n        setSuggestions([]);\r\n      } finally {\r\n        setIsLoadingSuggestions(false);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(fetchSuggestions, 300);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [query, isFilterMode, deckCards]);\r\n\r\n  // Adicionar carta ao deck Trade\r\n  const handleAddCard = async (cardName) => {\r\n    if (!deckId || isFilterMode) return;\r\n    setIsSearching(true);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.scryfall.com/cards/named?exact=${encodeURIComponent(cardName)}`\r\n      );\r\n      const cardData = await response.json();\r\n\r\n      const imageUrl =\r\n        cardData.image_uris?.normal || cardData.card_faces?.[0]?.image_uris?.normal;\r\n\r\n      const newCard = {\r\n        deck_id: deckId,\r\n        card_name: cardData.name,\r\n        scryfall_id: cardData.id,\r\n        image_url: imageUrl,\r\n        mana_cost: cardData.mana_cost || \"\",\r\n        type_line: cardData.type_line || \"\",\r\n        acquired: false,\r\n        quantity: 1,\r\n        created_at: new Date(),\r\n        card_faces: cardData.card_faces || null,\r\n      };\r\n\r\n      const currentCards = queryClient.getQueryData([\"cards\", deckId]) || [];\r\n      const existing = currentCards.find((c) => c.scryfall_id === cardData.id);\r\n\r\n      if (existing) {\r\n        const nextQty = (existing.quantity || 1) + 1;\r\n        queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n          old.map((c) => (c.id === existing.id ? { ...c, quantity: nextQty } : c))\r\n        );\r\n\r\n        try {\r\n          await deckCardOperations.updateDeckCard(existing.id, { quantity: nextQty });\r\n        } catch (err) {\r\n          console.error(\"Erro ao incrementar:\", err);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n            old.map((c) => (c.id === existing.id ? { ...c, quantity: existing.quantity } : c))\r\n          );\r\n        }\r\n      } else {\r\n        const tempId = `tmp-${Date.now()}`;\r\n        const tempCard = { id: tempId, ...newCard, __optimistic: true };\r\n        queryClient.setQueryData([\"cards\", deckId], (old = []) => [tempCard, ...old]);\r\n\r\n        try {\r\n          const docId = await deckCardOperations.addCardToDeck(deckId, newCard);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n            old.map((c) => (c && c.id === tempId ? { id: docId, ...newCard } : c))\r\n          );\r\n        } catch (err) {\r\n          console.error(\"Erro ao adicionar:\", err);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) => old.filter((c) => c.id !== tempId));\r\n          alert(\"Erro ao adicionar carta: \" + (err.message || \"Tente novamente\"));\r\n        }\r\n      }\r\n\r\n      setQuery(\"\");\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      inputRef.current?.focus();\r\n    } catch (error) {\r\n      console.error(\"Erro ao adicionar carta:\", error);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isFilterMode) return;\r\n    \r\n    if (selectedIndex >= 0 && suggestions[selectedIndex]) {\r\n      handleAddCard(suggestions[selectedIndex]);\r\n    } else if (query.trim()) {\r\n      handleAddCard(query.trim());\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (!showSuggestions || suggestions.length === 0) return;\r\n\r\n    if (e.key === \"ArrowDown\") {\r\n      e.preventDefault();\r\n      setSelectedIndex((prev) => (prev < suggestions.length - 1 ? prev + 1 : prev));\r\n    } else if (e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      setSelectedIndex((prev) => (prev > 0 ? prev - 1 : -1));\r\n    } else if (e.key === \"Escape\") {\r\n      setShowSuggestions(false);\r\n      setSelectedIndex(-1);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    if (isFilterMode) {\r\n      setQuery(suggestion);\r\n      setShowSuggestions(false);\r\n    } else {\r\n      handleAddCard(suggestion);\r\n    }\r\n  };\r\n\r\n  // Filtrar cartas exibidas\r\n  const displayedCards = useMemo(() => {\r\n    if (!isFilterMode || !query.trim()) {\r\n      return deckCards;\r\n    }\r\n    return deckCards.filter(card => \r\n      card.card_name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  }, [deckCards, isFilterMode, query]);\r\n\r\n  const totalCards = displayedCards.reduce((sum, card) => sum + (card.quantity || 1), 0);\r\n\r\n  if (decksLoading || cardsLoading) {\r\n    return (\r\n      <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black flex items-center justify-center\">\r\n        <Loader2 className=\"w-8 h-8 animate-spin text-orange-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!tradeDeck) {\r\n    return null;\r\n  }\r\n\r\n  // Log para confirmar que est√° na p√°gina Trade\r\n  console.log(\"üîÅ P√ÅGINA TRADE CARREGADA\", {\r\n    deckId,\r\n    totalCards: deckCards.length,\r\n    friendsWantedSize: friendsWantedCards.size,\r\n    friendsWantedCards: Array.from(friendsWantedCards.entries())\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-800 bg-green-900/20\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          onClick={() => navigate(\"/\")}\r\n          className=\"text-gray-400 hover:text-white\"\r\n        >\r\n          <X className=\"w-6 h-6\" />\r\n        </Button>\r\n\r\n        <div className=\"text-center flex-1\">\r\n          <h1 className=\"text-lg font-bold text-white\">\r\n            {tradeDeck?.deck_name || \"Trade\"}\r\n          </h1>\r\n          <p className=\"text-sm text-gray-400\">\r\n            {totalCards} carta{totalCards !== 1 ? 's' : ''} ‚Ä¢ {friendsWantedCards.size} match{friendsWantedCards.size !== 1 ? 'es' : ''}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Bot√£o de lixeira */}\r\n        {!isViewOnly && (\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={() => {\r\n              if (isSelectionMode && selectedCards.length > 0) {\r\n                handleDeleteSelected();\r\n              } else {\r\n                setIsSelectionMode(!isSelectionMode);\r\n                setSelectedCards([]);\r\n              }\r\n            }}\r\n            className={`${\r\n              isSelectionMode && selectedCards.length > 0\r\n                ? \"text-red-500 hover:text-red-400\"\r\n                : \"text-gray-400 hover:text-white\"\r\n            }`}\r\n          >\r\n            <Trash2 className=\"w-5 h-5\" />\r\n          </Button>\r\n        )}\r\n        {isViewOnly && <div className=\"w-10\" />}\r\n      </div>\r\n\r\n      {/* Alertas */}\r\n      {!isOnline && (\r\n        <Alert className=\"mx-4 mt-4 bg-yellow-500/10 border-yellow-500/50\">\r\n          <AlertCircle className=\"h-4 w-4 text-yellow-500\" />\r\n          <AlertDescription className=\"text-yellow-200\">\r\n            Voc√™ est√° offline. As altera√ß√µes ser√£o sincronizadas quando voltar online.\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert className=\"mx-4 mt-4 bg-red-500/10 border-red-500/50\">\r\n          <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n          <AlertDescription className=\"text-red-200\">{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* SearchBar com swipe */}\r\n      <motion.div\r\n        initial={{ y: -20, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        className={`sticky top-0 z-20 border-b border-gray-800 p-4 transition-colors duration-300 ${\r\n          isFilterMode \r\n            ? 'bg-blue-900/40'\r\n            : 'bg-gray-900'\r\n        }`}\r\n        onTouchStart={handleSearchBarTouchStart}\r\n        onTouchEnd={handleSearchBarTouchEnd}\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"flex gap-2 relative\" ref={searchRef}>\r\n          <div className=\"relative flex-1\">\r\n            {isFilterMode ? (\r\n              <Filter className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-blue-400 z-10\" />\r\n            ) : (\r\n              <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400 z-10\" />\r\n            )}\r\n            <Input\r\n              ref={inputRef}\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder={isFilterMode ? \"Filtrar no trade...\" : \"Adicionar carta...\"}\r\n              className={`pl-10 bg-gray-800 border-gray-700 text-white placeholder-gray-500 transition-colors ${\r\n                isFilterMode ? 'border-blue-600' : ''\r\n              }`}\r\n              disabled={isSearching || !canSaveData}\r\n            />\r\n            {isLoadingSuggestions && (\r\n              <Loader2 className=\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 animate-spin text-gray-400\" />\r\n            )}\r\n          </div>\r\n\r\n          {!isFilterMode && (\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={isSearching || !query.trim() || !canSaveData}\r\n              className=\"bg-orange-500 hover:bg-orange-600 disabled:bg-gray-700\"\r\n            >\r\n              {isSearching ? <Loader2 className=\"w-4 h-4 animate-spin\" /> : <Search className=\"w-4 h-4\" />}\r\n            </Button>\r\n          )}\r\n        </form>\r\n\r\n        {/* Indicador de modo */}\r\n        <p className=\"text-xs text-center mt-2 text-gray-400\">\r\n          {isFilterMode ? (\r\n            <span className=\"text-blue-400\">üîç Modo Filtro - Deslize para voltar √† busca</span>\r\n          ) : (\r\n            <span className=\"text-gray-400\">üîÑ Deslize para filtrar seu trade</span>\r\n          )}\r\n        </p>\r\n\r\n        {/* Sugest√µes */}\r\n        <AnimatePresence>\r\n          {showSuggestions && suggestions.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -10 }}\r\n              className=\"absolute left-4 right-4 top-full mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-h-60 overflow-y-auto z-30\"\r\n            >\r\n              {suggestions.map((suggestion, index) => (\r\n                <button\r\n                  key={index}\r\n                  type=\"button\"\r\n                  onClick={() => handleSuggestionClick(suggestion)}\r\n                  className={`w-full text-left px-4 py-2 hover:bg-gray-700 transition-colors ${\r\n                    index === selectedIndex ? 'bg-gray-700' : ''\r\n                  } ${index === 0 ? 'rounded-t-lg' : ''} ${\r\n                    index === suggestions.length - 1 ? 'rounded-b-lg' : ''\r\n                  }`}\r\n                >\r\n                  <span className=\"text-white\">{suggestion}</span>\r\n                </button>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n\r\n      {/* Grid de Cartas */}\r\n      <div className=\"flex-1 overflow-y-auto px-4 py-6\">\r\n        {displayedCards.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-400\">\r\n            <p className=\"text-lg\">\r\n              {isFilterMode && query.trim() \r\n                ? \"Nenhuma carta encontrada com esse nome\"\r\n                : \"Seu deck de trade est√° vazio\"\r\n              }\r\n            </p>\r\n            {!isFilterMode && (\r\n              <p className=\"text-sm mt-2\">Use a barra de busca para adicionar cartas</p>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 gap-3 pb-20\">\r\n            <AnimatePresence>\r\n              {displayedCards.map((card) => {\r\n                const isWantedByFriends = friendsWantedCards.has(card.scryfall_id);\r\n                \r\n                console.log(\"üé¥ Trade.jsx ANTES DE PASSAR PROP:\", {\r\n                  cardName: card.card_name,\r\n                  scryfallId: card.scryfall_id,\r\n                  isWantedByFriends,\r\n                  isWantedByFriendsType: typeof isWantedByFriends,\r\n                  mapSize: friendsWantedCards.size,\r\n                  mapHas: friendsWantedCards.has(card.scryfall_id)\r\n                });\r\n                \r\n                const handleDoubleClickWrapper = () => {\r\n                  if (isFriendTradeDeck) {\r\n                    console.log(\"üñ±Ô∏è Duplo clique no deck de amigo - abrindo BuyRequestModal\");\r\n                    setSelectedCardForBuy(card);\r\n                    setShowBuyRequestModal(true);\r\n                  } else {\r\n                    handleDoubleClick(card);\r\n                  }\r\n                };\r\n                \r\n                const handleLongPressWrapper = (card) => {\r\n                  if (isFriendTradeDeck) {\r\n                    console.log(\"‚è±Ô∏è Long press no deck de amigo - abrindo BuyRequestModal\");\r\n                    setSelectedCardForBuy(card);\r\n                    setShowBuyRequestModal(true);\r\n                  }\r\n                };\r\n                \r\n                return (\r\n                  <div key={`${card.id}-${card.scryfall_id}`}>\r\n                    <CardGridItem\r\n                      card={card}\r\n                      onToggleAcquired={handleToggleAcquired}\r\n                      onShowArtSelector={handleShowArtSelector}\r\n                      isViewOnly={isViewOnly}\r\n                      currentUserId={user?.id}\r\n                      deckOwnerId={tradeDeck?.user_id || tradeDeck?.owner_id}\r\n                      isSelectionMode={isSelectionMode}\r\n                      isSelected={selectedCards.includes(card.id)}\r\n                      onToggleSelect={() => handleToggleSelect(card.id)}\r\n                      onDoubleClick={handleDoubleClickWrapper}\r\n                      onLongPress={isFriendTradeDeck ? handleLongPressWrapper : undefined}\r\n                      hasGreenBorder={isWantedByFriends}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </AnimatePresence>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Barra inferior de sele√ß√£o */}\r\n      {isSelectionMode && !isViewOnly && (\r\n        <motion.div\r\n          initial={{ y: 100 }}\r\n          animate={{ y: 0 }}\r\n          exit={{ y: 100 }}\r\n          className=\"fixed bottom-6 left-1/2 -translate-x-1/2 bg-gray-800 border border-gray-700 rounded-full px-6 py-3 shadow-2xl\"\r\n        >\r\n          <p className=\"text-white font-medium\">\r\n            {selectedCards.length > 0\r\n              ? `${selectedCards.length} carta${selectedCards.length > 1 ? 's' : ''} selecionada${selectedCards.length > 1 ? 's' : ''}`\r\n              : \"Selecione cartas para remover\"}\r\n          </p>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Modal de confirma√ß√£o de dele√ß√£o */}\r\n      <DeleteQuantityDialog\r\n        isOpen={showDeleteDialog}\r\n        onClose={() => {\r\n          setShowDeleteDialog(false);\r\n          setCardsToDelete([]);\r\n        }}\r\n        cards={cardsToDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n\r\n      {/* Modal de Trade */}\r\n      <TradeModal\r\n        isOpen={showTradeModal}\r\n        onClose={() => {\r\n          setShowTradeModal(false);\r\n          setSelectedTradeCard(null);\r\n        }}\r\n        card={selectedTradeCard}\r\n        friendsWhoWant={selectedTradeCard ? friendsWantedCards.get(selectedTradeCard.scryfall_id) || [] : []}\r\n      />\r\n\r\n      {/* Modal de interesse em comprar (quando visualiza deck Trade de amigo) */}\r\n      <BuyRequestModal\r\n        isOpen={showBuyRequestModal}\r\n        onClose={() => {\r\n          setShowBuyRequestModal(false);\r\n          setSelectedCardForBuy(null);\r\n        }}\r\n        card={selectedCardForBuy}\r\n        deckOwnerId={tradeDeck?.user_id || tradeDeck?.owner_id}\r\n        deckOwnerName={deckOwnerName || \"Amigo\"}\r\n      />\r\n\r\n      {/* Modal de sele√ß√£o de arte */}\r\n      <ArtSelector\r\n        isOpen={showArtSelector}\r\n        onClose={() => {\r\n          setShowArtSelector(false);\r\n          setSelectedCardForArt(null);\r\n        }}\r\n        card={selectedCardForArt}\r\n        onSelectArt={handleSelectArt}\r\n        onAddCard={addCard}\r\n        onUpdateCard={updateCard}\r\n        deckId={deckId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trade;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}