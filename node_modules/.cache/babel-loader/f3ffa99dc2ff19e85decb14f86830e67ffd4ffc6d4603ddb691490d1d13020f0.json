{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// �️ Remove tradução específica do cache\nexport async function removeTranslation(cardId,cardName){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readwrite\");const store=tx.objectStore(STORE_NAME);const key=\"\".concat(cardId,\"_\").concat(cardName);await store.delete(key);console.log(\"\\uD83D\\uDDD1\\uFE0F Tradu\\xE7\\xE3o removida do cache: \".concat(cardName));return true;}catch(error){console.error(\"❌ Erro ao remover tradução:\",error);return false;}}// �🗣️ Cache de traduções no IndexedDB\n// Evita chamadas repetidas à Azure Translator API\nconst DB_NAME=\"deckmaster_translations\";const DB_VERSION=1;const STORE_NAME=\"translations\";// 📊 Estatísticas de cache\nlet stats={hits:0,misses:0,saves:0};// Inicializa o IndexedDB\nfunction openDB(){return new Promise((resolve,reject)=>{const request=indexedDB.open(DB_NAME,DB_VERSION);request.onerror=()=>reject(request.error);request.onsuccess=()=>resolve(request.result);request.onupgradeneeded=event=>{const db=event.target.result;// Cria store se não existir\nif(!db.objectStoreNames.contains(STORE_NAME)){const store=db.createObjectStore(STORE_NAME,{keyPath:\"key\"});// Índices para busca\nstore.createIndex(\"cardId\",\"cardId\",{unique:false});store.createIndex(\"timestamp\",\"timestamp\",{unique:false});console.log(\"✅ Store de traduções criado\");}};});}// 💾 Salva tradução no cache\nexport async function saveTranslation(cardId,cardName,translatedName,translatedText,faces){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readwrite\");const store=tx.objectStore(STORE_NAME);const cacheEntry={key:\"\".concat(cardId,\"_\").concat(cardName),// Chave única\ncardId,cardName,translatedName,translatedText,faces:faces||null,// Array de faces traduzidas (se houver)\ntimestamp:Date.now()};await store.put(cacheEntry);stats.saves++;console.log(\"\\uD83D\\uDCBE Tradu\\xE7\\xE3o salva: \".concat(cardName,\" \\u2192 \").concat(translatedName));return true;}catch(error){console.error(\"❌ Erro ao salvar tradução:\",error);return false;}}// 🔍 Busca tradução no cache\nexport async function getTranslation(cardId,cardName){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readonly\");const store=tx.objectStore(STORE_NAME);const key=\"\".concat(cardId,\"_\").concat(cardName);const result=await new Promise((resolve,reject)=>{const request=store.get(key);request.onsuccess=()=>resolve(request.result);request.onerror=()=>reject(request.error);});if(result){stats.hits++;console.log(\"\\u2705 Cache HIT: \".concat(cardName));return result;}stats.misses++;console.log(\"\\u274C Cache MISS: \".concat(cardName));return null;}catch(error){console.error(\"❌ Erro ao buscar tradução:\",error);stats.misses++;return null;}}// 🗑️ Remove traduções antigas (mais de 30 dias)\nexport async function cleanOldTranslations(){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readwrite\");const store=tx.objectStore(STORE_NAME);const index=store.index(\"timestamp\");const thirtyDaysAgo=Date.now()-30*24*60*60*1000;const range=IDBKeyRange.upperBound(thirtyDaysAgo);let deleted=0;const cursorRequest=index.openCursor(range);return new Promise((resolve,reject)=>{cursorRequest.onsuccess=event=>{const cursor=event.target.result;if(cursor){cursor.delete();deleted++;cursor.continue();}else{console.log(\"\\uD83E\\uDDF9 \".concat(deleted,\" tradu\\xE7\\xF5es antigas removidas\"));resolve(deleted);}};cursorRequest.onerror=()=>reject(cursorRequest.error);});}catch(error){console.error(\"❌ Erro ao limpar traduções:\",error);return 0;}}// 📊 Obtém estatísticas do cache\nexport function getStats(){return _objectSpread(_objectSpread({},stats),{},{hitRate:stats.hits+stats.misses>0?(stats.hits/(stats.hits+stats.misses)*100).toFixed(2)+'%':'0%'});}// 🔄 Reseta estatísticas\nexport function resetStats(){stats={hits:0,misses:0,saves:0};}// 🗑️ Limpa todo o cache (cuidado!)\nexport async function clearAllTranslations(){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readwrite\");const store=tx.objectStore(STORE_NAME);await store.clear();console.log(\"🗑️ Todas as traduções foram removidas\");return true;}catch(error){console.error(\"❌ Erro ao limpar cache:\",error);return false;}}// 📈 Conta total de traduções no cache\nexport async function countTranslations(){try{const db=await openDB();const tx=db.transaction(STORE_NAME,\"readonly\");const store=tx.objectStore(STORE_NAME);const count=await new Promise((resolve,reject)=>{const request=store.count();request.onsuccess=()=>resolve(request.result);request.onerror=()=>reject(request.error);});return count;}catch(error){console.error(\"❌ Erro ao contar traduções:\",error);return 0;}}// 🌍 Expõe no window para debug\nif(typeof window!=='undefined'){window.translationCache={getStats,resetStats,clearAll:clearAllTranslations,count:countTranslations,clean:cleanOldTranslations};console.log(\"🗣️ Translation Cache disponível em window.translationCache\");}export default{saveTranslation,getTranslation,cleanOldTranslations,getStats,resetStats,clearAllTranslations,countTranslations};","map":{"version":3,"names":["removeTranslation","cardId","cardName","db","openDB","tx","transaction","STORE_NAME","store","objectStore","key","concat","delete","console","log","error","DB_NAME","DB_VERSION","stats","hits","misses","saves","Promise","resolve","reject","request","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","event","target","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","saveTranslation","translatedName","translatedText","faces","cacheEntry","timestamp","Date","now","put","getTranslation","get","cleanOldTranslations","index","thirtyDaysAgo","range","IDBKeyRange","upperBound","deleted","cursorRequest","openCursor","cursor","continue","getStats","_objectSpread","hitRate","toFixed","resetStats","clearAllTranslations","clear","countTranslations","count","window","translationCache","clearAll","clean"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/lib/translationCache.js"],"sourcesContent":["// �️ Remove tradução específica do cache\r\nexport async function removeTranslation(cardId, cardName) {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readwrite\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const key = `${cardId}_${cardName}`;\r\n    await store.delete(key);\r\n    console.log(`🗑️ Tradução removida do cache: ${cardName}`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao remover tradução:\", error);\r\n    return false;\r\n  }\r\n}\r\n// �🗣️ Cache de traduções no IndexedDB\r\n// Evita chamadas repetidas à Azure Translator API\r\n\r\nconst DB_NAME = \"deckmaster_translations\";\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = \"translations\";\r\n\r\n// 📊 Estatísticas de cache\r\nlet stats = {\r\n  hits: 0,\r\n  misses: 0,\r\n  saves: 0\r\n};\r\n\r\n// Inicializa o IndexedDB\r\nfunction openDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n    request.onerror = () => reject(request.error);\r\n    request.onsuccess = () => resolve(request.result);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      \r\n      // Cria store se não existir\r\n      if (!db.objectStoreNames.contains(STORE_NAME)) {\r\n        const store = db.createObjectStore(STORE_NAME, { keyPath: \"key\" });\r\n        \r\n        // Índices para busca\r\n        store.createIndex(\"cardId\", \"cardId\", { unique: false });\r\n        store.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n        \r\n        console.log(\"✅ Store de traduções criado\");\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\n// 💾 Salva tradução no cache\r\nexport async function saveTranslation(cardId, cardName, translatedName, translatedText, faces) {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readwrite\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n\r\n    const cacheEntry = {\r\n      key: `${cardId}_${cardName}`, // Chave única\r\n      cardId,\r\n      cardName,\r\n      translatedName,\r\n      translatedText,\r\n      faces: faces || null, // Array de faces traduzidas (se houver)\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    await store.put(cacheEntry);\r\n    stats.saves++;\r\n    \r\n    console.log(`💾 Tradução salva: ${cardName} → ${translatedName}`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao salvar tradução:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// 🔍 Busca tradução no cache\r\nexport async function getTranslation(cardId, cardName) {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readonly\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n    \r\n    const key = `${cardId}_${cardName}`;\r\n    const result = await new Promise((resolve, reject) => {\r\n      const request = store.get(key);\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n\r\n    if (result) {\r\n      stats.hits++;\r\n      console.log(`✅ Cache HIT: ${cardName}`);\r\n      return result;\r\n    }\r\n\r\n    stats.misses++;\r\n    console.log(`❌ Cache MISS: ${cardName}`);\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao buscar tradução:\", error);\r\n    stats.misses++;\r\n    return null;\r\n  }\r\n}\r\n\r\n// 🗑️ Remove traduções antigas (mais de 30 dias)\r\nexport async function cleanOldTranslations() {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readwrite\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const index = store.index(\"timestamp\");\r\n\r\n    const thirtyDaysAgo = Date.now() - (30 * 24 * 60 * 60 * 1000);\r\n    const range = IDBKeyRange.upperBound(thirtyDaysAgo);\r\n\r\n    let deleted = 0;\r\n    const cursorRequest = index.openCursor(range);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      cursorRequest.onsuccess = (event) => {\r\n        const cursor = event.target.result;\r\n        if (cursor) {\r\n          cursor.delete();\r\n          deleted++;\r\n          cursor.continue();\r\n        } else {\r\n          console.log(`🧹 ${deleted} traduções antigas removidas`);\r\n          resolve(deleted);\r\n        }\r\n      };\r\n      cursorRequest.onerror = () => reject(cursorRequest.error);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao limpar traduções:\", error);\r\n    return 0;\r\n  }\r\n}\r\n\r\n// 📊 Obtém estatísticas do cache\r\nexport function getStats() {\r\n  return {\r\n    ...stats,\r\n    hitRate: stats.hits + stats.misses > 0 \r\n      ? ((stats.hits / (stats.hits + stats.misses)) * 100).toFixed(2) + '%'\r\n      : '0%'\r\n  };\r\n}\r\n\r\n// 🔄 Reseta estatísticas\r\nexport function resetStats() {\r\n  stats = { hits: 0, misses: 0, saves: 0 };\r\n}\r\n\r\n// 🗑️ Limpa todo o cache (cuidado!)\r\nexport async function clearAllTranslations() {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readwrite\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n    \r\n    await store.clear();\r\n    console.log(\"🗑️ Todas as traduções foram removidas\");\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao limpar cache:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// 📈 Conta total de traduções no cache\r\nexport async function countTranslations() {\r\n  try {\r\n    const db = await openDB();\r\n    const tx = db.transaction(STORE_NAME, \"readonly\");\r\n    const store = tx.objectStore(STORE_NAME);\r\n    \r\n    const count = await new Promise((resolve, reject) => {\r\n      const request = store.count();\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n\r\n    return count;\r\n  } catch (error) {\r\n    console.error(\"❌ Erro ao contar traduções:\", error);\r\n    return 0;\r\n  }\r\n}\r\n\r\n// 🌍 Expõe no window para debug\r\nif (typeof window !== 'undefined') {\r\n  window.translationCache = {\r\n    getStats,\r\n    resetStats,\r\n    clearAll: clearAllTranslations,\r\n    count: countTranslations,\r\n    clean: cleanOldTranslations,\r\n  };\r\n  console.log(\"🗣️ Translation Cache disponível em window.translationCache\");\r\n}\r\n\r\nexport default {\r\n  saveTranslation,\r\n  getTranslation,\r\n  cleanOldTranslations,\r\n  getStats,\r\n  resetStats,\r\n  clearAllTranslations,\r\n  countTranslations,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}