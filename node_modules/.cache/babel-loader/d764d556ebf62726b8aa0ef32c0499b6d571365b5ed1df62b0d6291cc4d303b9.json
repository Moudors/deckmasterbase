{"ast":null,"code":"import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nimport StorageAnalyticsApi from './packages/StorageAnalyticsApi';\nimport { StorageVectorsClient } from './lib/vectors';\nexport class StorageClient extends StorageBucketApi {\n  constructor(url) {\n    let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let fetch = arguments.length > 2 ? arguments[2] : undefined;\n    let opts = arguments.length > 3 ? arguments[3] : undefined;\n    super(url, headers, fetch, opts);\n  }\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id) {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch);\n  }\n  /**\n   * Access vector storage operations.\n   *\n   * @returns A StorageVectorsClient instance configured with the current storage settings.\n   */\n  get vectors() {\n    return new StorageVectorsClient(this.url + '/vector', {\n      headers: this.headers,\n      fetch: this.fetch\n    });\n  }\n  /**\n   * Access analytics storage operations using Iceberg tables.\n   *\n   * @returns A StorageAnalyticsApi instance configured with the current storage settings.\n   * @example\n   * ```typescript\n   * const client = createClient(url, key)\n   * const analytics = client.storage.analytics\n   *\n   * // Create an analytics bucket\n   * await analytics.createBucket('my-analytics-bucket')\n   *\n   * // List all analytics buckets\n   * const { data: buckets } = await analytics.listBuckets()\n   *\n   * // Delete an analytics bucket\n   * await analytics.deleteBucket('old-analytics-bucket')\n   * ```\n   */\n  get analytics() {\n    return new StorageAnalyticsApi(this.url + '/iceberg', this.headers, this.fetch);\n  }\n}","map":{"version":3,"names":["StorageFileApi","StorageBucketApi","StorageAnalyticsApi","StorageVectorsClient","StorageClient","constructor","url","headers","arguments","length","undefined","fetch","opts","from","id","vectors","analytics"],"sources":["C:\\Users\\Lucas Araujo\\Desktop\\supabase\\DeckMaster\\node_modules\\@supabase\\storage-js\\src\\StorageClient.ts"],"sourcesContent":["import StorageFileApi from './packages/StorageFileApi'\nimport StorageBucketApi from './packages/StorageBucketApi'\nimport StorageAnalyticsApi from './packages/StorageAnalyticsApi'\nimport { Fetch } from './lib/fetch'\nimport { StorageVectorsClient } from './lib/vectors'\n\nexport interface StorageClientOptions {\n  useNewHostname?: boolean\n}\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    fetch?: Fetch,\n    opts?: StorageClientOptions\n  ) {\n    super(url, headers, fetch, opts)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n\n  /**\n   * Access vector storage operations.\n   *\n   * @returns A StorageVectorsClient instance configured with the current storage settings.\n   */\n  get vectors(): StorageVectorsClient {\n    return new StorageVectorsClient(this.url + '/vector', {\n      headers: this.headers,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Access analytics storage operations using Iceberg tables.\n   *\n   * @returns A StorageAnalyticsApi instance configured with the current storage settings.\n   * @example\n   * ```typescript\n   * const client = createClient(url, key)\n   * const analytics = client.storage.analytics\n   *\n   * // Create an analytics bucket\n   * await analytics.createBucket('my-analytics-bucket')\n   *\n   * // List all analytics buckets\n   * const { data: buckets } = await analytics.listBuckets()\n   *\n   * // Delete an analytics bucket\n   * await analytics.deleteBucket('old-analytics-bucket')\n   * ```\n   */\n  get analytics(): StorageAnalyticsApi {\n    return new StorageAnalyticsApi(this.url + '/iceberg', this.headers, this.fetch)\n  }\n}\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;AACtD,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,mBAAmB,MAAM,gCAAgC;AAEhE,SAASC,oBAAoB,QAAQ,eAAe;AAMpD,OAAM,MAAOC,aAAc,SAAQH,gBAAgB;EACjDI,YACEC,GAAW,EAGgB;IAAA,IAF3BC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqC,EAAE;IAAA,IACvCG,KAAa,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACbE,IAA2B,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAE3B,KAAK,CAACJ,GAAG,EAAEC,OAAO,EAAEI,KAAK,EAAEC,IAAI,CAAC;EAClC;EAEA;;;;;EAKAC,IAAIA,CAACC,EAAU;IACb,OAAO,IAAId,cAAc,CAAC,IAAI,CAACM,GAAG,EAAE,IAAI,CAACC,OAAO,EAAEO,EAAE,EAAE,IAAI,CAACH,KAAK,CAAC;EACnE;EAEA;;;;;EAKA,IAAII,OAAOA,CAAA;IACT,OAAO,IAAIZ,oBAAoB,CAAC,IAAI,CAACG,GAAG,GAAG,SAAS,EAAE;MACpDC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,KAAK,EAAE,IAAI,CAACA;KACb,CAAC;EACJ;EAEA;;;;;;;;;;;;;;;;;;;EAmBA,IAAIK,SAASA,CAAA;IACX,OAAO,IAAId,mBAAmB,CAAC,IAAI,CAACI,GAAG,GAAG,UAAU,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACI,KAAK,CAAC;EACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}