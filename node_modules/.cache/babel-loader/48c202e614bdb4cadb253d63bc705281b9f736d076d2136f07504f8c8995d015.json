{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdvancedSearchForm(_ref){let{onSearch}=_ref;// Estados para cada campo\nconst[name,setName]=useState(\"\");const[text,setText]=useState(\"\");const[typeInput,setTypeInput]=useState(\"\");const[selectedTypes,setSelectedTypes]=useState([]);const[allowPartialTypes,setAllowPartialTypes]=useState(false);const[typeCategories,setTypeCategories]=useState({});const[filteredCategories,setFilteredCategories]=useState({});const[showTypeDropdown,setShowTypeDropdown]=useState(false);const[colors,setColors]=useState([]);const[colorMode,setColorMode]=useState(\"exact\");const[commanderColors,setCommanderColors]=useState([]);const typeInputRef=useRef(null);const typeDropdownRef=useRef(null);// Busca todas as categorias de tipos da API do Scryfall\nuseEffect(()=>{const catalogEndpoints=[{key:\"Card Types\",url:\"https://api.scryfall.com/catalog/card-types\"},{key:\"Supertypes\",url:\"https://api.scryfall.com/catalog/supertypes\"},{key:\"Artifact Types\",url:\"https://api.scryfall.com/catalog/artifact-types\"},{key:\"Battle Types\",url:\"https://api.scryfall.com/catalog/battle-types\"},{key:\"Creature Types\",url:\"https://api.scryfall.com/catalog/creature-types\"},{key:\"Enchantment Types\",url:\"https://api.scryfall.com/catalog/enchantment-types\"},{key:\"Land Types\",url:\"https://api.scryfall.com/catalog/land-types\"},{key:\"Planeswalker Types\",url:\"https://api.scryfall.com/catalog/planeswalker-types\"},{key:\"Spell Types\",url:\"https://api.scryfall.com/catalog/spell-types\"}];Promise.all(catalogEndpoints.map(endpoint=>fetch(endpoint.url).then(res=>res.json()).then(data=>({key:endpoint.key,data:data.data||[]})).catch(()=>({key:endpoint.key,data:[]})))).then(results=>{const categories={};results.forEach(result=>{if(result.data.length>0){categories[result.key]=result.data;}});setTypeCategories(categories);setFilteredCategories(categories);});},[]);// Filtra tipos baseado no input\nuseEffect(()=>{if(typeInput.trim()){const searchTerm=typeInput.toLowerCase();const filtered={};Object.entries(typeCategories).forEach(_ref2=>{let[category,types]=_ref2;const matchingTypes=types.filter(type=>type.toLowerCase().includes(searchTerm));if(matchingTypes.length>0){filtered[category]=matchingTypes;}});setFilteredCategories(filtered);}else{setFilteredCategories(typeCategories);}},[typeInput,typeCategories]);// Fecha dropdown ao clicar fora\nuseEffect(()=>{function handleClickOutside(event){if(typeDropdownRef.current&&!typeDropdownRef.current.contains(event.target)&&typeInputRef.current&&!typeInputRef.current.contains(event.target)){setShowTypeDropdown(false);}}document.addEventListener(\"mousedown\",handleClickOutside);return()=>document.removeEventListener(\"mousedown\",handleClickOutside);},[]);// Alterna seleção de cor\nfunction toggleColor(color){let isCommander=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(isCommander){setCommanderColors(prev=>prev.includes(color)?prev.filter(c=>c!==color):[...prev,color]);}else{setColors(prev=>prev.includes(color)?prev.filter(c=>c!==color):[...prev,color]);}}// Seleciona tipo da sugestão\nfunction selectType(type){var _typeInputRef$current;if(!selectedTypes.includes(type)){setSelectedTypes([...selectedTypes,type]);}setTypeInput(\"\");setShowTypeDropdown(false);(_typeInputRef$current=typeInputRef.current)===null||_typeInputRef$current===void 0?void 0:_typeInputRef$current.focus();}// Remove tipo selecionado\nfunction removeType(type){setSelectedTypes(selectedTypes.filter(t=>t!==type));}// Monta query final\nfunction buildQuery(){const parts=[];if(name)parts.push(\"name:\\\"\".concat(name,\"\\\"\"));if(text)parts.push(\"o:\\\"\".concat(text,\"\\\"\"));if(selectedTypes.length>0){if(allowPartialTypes){// Tipos parciais = OR (qualquer um dos tipos)\nconst typeQuery=selectedTypes.map(t=>\"t:\".concat(t)).join(\" OR \");parts.push(\"(\".concat(typeQuery,\")\"));}else{// Busca exata: carta deve ter TODOS os tipos juntos\n// Ex: t:legendary t:creature (carta que é tanto legendary quanto creature)\nselectedTypes.forEach(t=>parts.push(\"t:\".concat(t)));}}if(colors.length>0){const colorString=colors.join(\"\");switch(colorMode){case\"exact\":// Exatamente estas cores\nparts.push(\"color=\".concat(colorString));break;case\"including\":// Incluindo estas cores (pode ter mais)\nparts.push(\"color>=\".concat(colorString));break;case\"at-least-one\":// Ao menos uma das cores\nparts.push(\"color:\".concat(colorString));break;}}if(commanderColors.length>0)parts.push(\"id:\".concat(commanderColors.join(\"\")));return parts.join(\" \");}// Dispara busca\nfunction handleSubmit(e){e.preventDefault();const query=buildQuery();onSearch(query);}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"p-3 bg-gray-800 text-white space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-300 mb-1\",children:\"Nome da carta\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),placeholder:\"Ex: \\\"Fire\\\"\",className:\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-300 mb-1\",children:\"Texto da carta\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:text,onChange:e=>setText(e.target.value),placeholder:\"Ex: \\\"draw a card\\\"\",className:\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-300 mb-1\",children:\"Tipo\"}),selectedTypes.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1.5 mb-1.5\",children:selectedTypes.map(type=>/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center gap-1 px-1.5 py-0.5 bg-orange-500 text-white text-xs rounded\",children:[type,/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeType(type),className:\"hover:text-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-2.5 h-2.5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]},type))}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{ref:typeInputRef,type:\"text\",value:typeInput,onChange:e=>setTypeInput(e.target.value),onFocus:()=>setShowTypeDropdown(true),placeholder:\"Ex: Creature, Instant...\",className:\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 pr-8 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowTypeDropdown(!showTypeDropdown),className:\"absolute right-1.5 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-300 transition-colors\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-3.5 h-3.5 transition-transform \".concat(showTypeDropdown?'rotate-180':''),fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 9l-7 7-7-7\"})})})]}),showTypeDropdown&&/*#__PURE__*/_jsx(\"div\",{ref:typeDropdownRef,className:\"absolute z-10 w-full mt-1 max-h-80 overflow-y-auto bg-gray-800 border border-gray-600 rounded shadow-lg\",children:Object.keys(filteredCategories).length>0?Object.entries(filteredCategories).map(_ref3=>{let[category,types]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-700 last:border-b-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-2.5 py-1.5 bg-gray-900 text-xs font-semibold text-gray-400 uppercase tracking-wide sticky top-0\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"py-0.5\",children:types.map(type=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>selectType(type),className:\"w-full text-left px-3 py-1 text-sm text-gray-300 hover:bg-gray-700 transition-colors\",children:type},\"\".concat(category,\"-\").concat(type)))})]},category);}):/*#__PURE__*/_jsx(\"div\",{className:\"px-3 py-2 text-sm text-gray-500\",children:\"Nenhum tipo encontrado\"})}),selectedTypes.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1.5\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-1.5 text-xs text-gray-300 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:allowPartialTypes,onChange:e=>setAllowPartialTypes(e.target.checked),className:\"w-3.5 h-3.5 rounded border-gray-600 bg-gray-700 text-orange-500 focus:ring-2 focus:ring-orange-500 focus:ring-offset-0 cursor-pointer\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Permitir tipos parciais\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-0.5 ml-5\",children:allowPartialTypes?\"Mostra cartas que tenham pelo menos um dos tipos selecionados\":\"Mostra apenas cartas que tenham todos os tipos selecionados\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-300 mb-1\",children:\"Cores\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1.5\",children:[{symbol:\"W\",mana:\"w\"},{symbol:\"U\",mana:\"u\"},{symbol:\"B\",mana:\"b\"},{symbol:\"R\",mana:\"r\"},{symbol:\"G\",mana:\"g\"},{symbol:\"C\",mana:\"c\"}// Incolor\n].map(_ref4=>{let{symbol,mana}=_ref4;return/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>toggleColor(symbol),className:\"w-8 h-8 rounded-full border-2 transition-all flex items-center justify-center \".concat(colors.includes(symbol)?\"border-orange-500 scale-110\":\"border-gray-600 hover:border-gray-500\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"ms ms-\".concat(mana,\" ms-cost\")})},symbol);})}),colors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-400 mb-1\",children:\"Modo de busca\"}),/*#__PURE__*/_jsxs(\"select\",{value:colorMode,onChange:e=>setColorMode(e.target.value),className:\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white focus:outline-none focus:ring-2 focus:ring-orange-500 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"exact\",children:\"Exatamente estas cores\"}),/*#__PURE__*/_jsx(\"option\",{value:\"including\",children:\"Incluindo estas cores\"}),/*#__PURE__*/_jsx(\"option\",{value:\"at-least-one\",children:\"Ao menos uma das cores\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-0.5\",children:[colorMode===\"exact\"&&\"Apenas cartas com exatamente as cores selecionadas\",colorMode===\"including\"&&\"Cartas que incluem as cores selecionadas (pode ter outras)\",colorMode===\"at-least-one\"&&\"Cartas com pelo menos uma das cores selecionadas\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-300 mb-1\",children:\"Identidade de comandante\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1.5\",children:[{symbol:\"W\",mana:\"w\"},{symbol:\"U\",mana:\"u\"},{symbol:\"B\",mana:\"b\"},{symbol:\"R\",mana:\"r\"},{symbol:\"G\",mana:\"g\"},{symbol:\"C\",mana:\"c\"}// Incolor\n].map(_ref5=>{let{symbol,mana}=_ref5;return/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>toggleColor(symbol,true),className:\"w-8 h-8 rounded-full border-2 transition-all flex items-center justify-center \".concat(commanderColors.includes(symbol)?\"border-orange-500 scale-110\":\"border-gray-600 hover:border-gray-500\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"ms ms-\".concat(mana,\" ms-cost\")})},symbol);})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full py-2 bg-orange-500 text-white font-semibold rounded-lg hover:bg-orange-600 transition-colors text-sm\",children:\"Buscar\"})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","AdvancedSearchForm","_ref","onSearch","name","setName","text","setText","typeInput","setTypeInput","selectedTypes","setSelectedTypes","allowPartialTypes","setAllowPartialTypes","typeCategories","setTypeCategories","filteredCategories","setFilteredCategories","showTypeDropdown","setShowTypeDropdown","colors","setColors","colorMode","setColorMode","commanderColors","setCommanderColors","typeInputRef","typeDropdownRef","catalogEndpoints","key","url","Promise","all","map","endpoint","fetch","then","res","json","data","catch","results","categories","forEach","result","length","trim","searchTerm","toLowerCase","filtered","Object","entries","_ref2","category","types","matchingTypes","filter","type","includes","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","toggleColor","color","isCommander","arguments","undefined","prev","c","selectType","_typeInputRef$current","focus","removeType","t","buildQuery","parts","push","concat","typeQuery","join","colorString","handleSubmit","e","preventDefault","query","onSubmit","className","children","value","onChange","placeholder","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","onFocus","keys","_ref3","checked","symbol","mana","_ref4","_ref5"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/components/advanced-search/AdvancedSearchForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface AdvancedSearchFormProps {\r\n  onSearch: (query: string) => void;\r\n}\r\n\r\nexport default function AdvancedSearchForm({ onSearch }: AdvancedSearchFormProps) {\r\n  // Estados para cada campo\r\n  const [name, setName] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [typeInput, setTypeInput] = useState(\"\");\r\n  const [selectedTypes, setSelectedTypes] = useState<string[]>([]);\r\n  const [allowPartialTypes, setAllowPartialTypes] = useState(false);\r\n  const [typeCategories, setTypeCategories] = useState<Record<string, string[]>>({});\r\n  const [filteredCategories, setFilteredCategories] = useState<Record<string, string[]>>({});\r\n  const [showTypeDropdown, setShowTypeDropdown] = useState(false);\r\n  const [colors, setColors] = useState<string[]>([]);\r\n  const [colorMode, setColorMode] = useState<\"exact\" | \"including\" | \"at-least-one\">(\"exact\");\r\n  const [commanderColors, setCommanderColors] = useState<string[]>([]);\r\n  const typeInputRef = useRef<HTMLInputElement>(null);\r\n  const typeDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Busca todas as categorias de tipos da API do Scryfall\r\n  useEffect(() => {\r\n    const catalogEndpoints = [\r\n      { key: \"Card Types\", url: \"https://api.scryfall.com/catalog/card-types\" },\r\n      { key: \"Supertypes\", url: \"https://api.scryfall.com/catalog/supertypes\" },\r\n      { key: \"Artifact Types\", url: \"https://api.scryfall.com/catalog/artifact-types\" },\r\n      { key: \"Battle Types\", url: \"https://api.scryfall.com/catalog/battle-types\" },\r\n      { key: \"Creature Types\", url: \"https://api.scryfall.com/catalog/creature-types\" },\r\n      { key: \"Enchantment Types\", url: \"https://api.scryfall.com/catalog/enchantment-types\" },\r\n      { key: \"Land Types\", url: \"https://api.scryfall.com/catalog/land-types\" },\r\n      { key: \"Planeswalker Types\", url: \"https://api.scryfall.com/catalog/planeswalker-types\" },\r\n      { key: \"Spell Types\", url: \"https://api.scryfall.com/catalog/spell-types\" },\r\n    ];\r\n\r\n    Promise.all(\r\n      catalogEndpoints.map((endpoint) =>\r\n        fetch(endpoint.url)\r\n          .then((res) => res.json())\r\n          .then((data) => ({ key: endpoint.key, data: data.data || [] }))\r\n          .catch(() => ({ key: endpoint.key, data: [] }))\r\n      )\r\n    ).then((results) => {\r\n      const categories: Record<string, string[]> = {};\r\n      results.forEach((result) => {\r\n        if (result.data.length > 0) {\r\n          categories[result.key] = result.data;\r\n        }\r\n      });\r\n      setTypeCategories(categories);\r\n      setFilteredCategories(categories);\r\n    });\r\n  }, []);\r\n\r\n  // Filtra tipos baseado no input\r\n  useEffect(() => {\r\n    if (typeInput.trim()) {\r\n      const searchTerm = typeInput.toLowerCase();\r\n      const filtered: Record<string, string[]> = {};\r\n      \r\n      Object.entries(typeCategories).forEach(([category, types]) => {\r\n        const matchingTypes = types.filter((type) =>\r\n          type.toLowerCase().includes(searchTerm)\r\n        );\r\n        if (matchingTypes.length > 0) {\r\n          filtered[category] = matchingTypes;\r\n        }\r\n      });\r\n      \r\n      setFilteredCategories(filtered);\r\n    } else {\r\n      setFilteredCategories(typeCategories);\r\n    }\r\n  }, [typeInput, typeCategories]);\r\n\r\n  // Fecha dropdown ao clicar fora\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (\r\n        typeDropdownRef.current &&\r\n        !typeDropdownRef.current.contains(event.target as Node) &&\r\n        typeInputRef.current &&\r\n        !typeInputRef.current.contains(event.target as Node)\r\n      ) {\r\n        setShowTypeDropdown(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  // Alterna seleção de cor\r\n  function toggleColor(color: string, isCommander: boolean = false) {\r\n    if (isCommander) {\r\n      setCommanderColors((prev) =>\r\n        prev.includes(color) ? prev.filter((c) => c !== color) : [...prev, color]\r\n      );\r\n    } else {\r\n      setColors((prev) =>\r\n        prev.includes(color) ? prev.filter((c) => c !== color) : [...prev, color]\r\n      );\r\n    }\r\n  }\r\n\r\n  // Seleciona tipo da sugestão\r\n  function selectType(type: string) {\r\n    if (!selectedTypes.includes(type)) {\r\n      setSelectedTypes([...selectedTypes, type]);\r\n    }\r\n    setTypeInput(\"\");\r\n    setShowTypeDropdown(false);\r\n    typeInputRef.current?.focus();\r\n  }\r\n\r\n  // Remove tipo selecionado\r\n  function removeType(type: string) {\r\n    setSelectedTypes(selectedTypes.filter((t) => t !== type));\r\n  }\r\n\r\n  // Monta query final\r\n  function buildQuery() {\r\n    const parts: string[] = [];\r\n\r\n    if (name) parts.push(`name:\"${name}\"`);\r\n    if (text) parts.push(`o:\"${text}\"`);\r\n    if (selectedTypes.length > 0) {\r\n      if (allowPartialTypes) {\r\n        // Tipos parciais = OR (qualquer um dos tipos)\r\n        const typeQuery = selectedTypes.map(t => `t:${t}`).join(\" OR \");\r\n        parts.push(`(${typeQuery})`);\r\n      } else {\r\n        // Busca exata: carta deve ter TODOS os tipos juntos\r\n        // Ex: t:legendary t:creature (carta que é tanto legendary quanto creature)\r\n        selectedTypes.forEach(t => parts.push(`t:${t}`));\r\n      }\r\n    }\r\n    if (colors.length > 0) {\r\n      const colorString = colors.join(\"\");\r\n      switch (colorMode) {\r\n        case \"exact\":\r\n          // Exatamente estas cores\r\n          parts.push(`color=${colorString}`);\r\n          break;\r\n        case \"including\":\r\n          // Incluindo estas cores (pode ter mais)\r\n          parts.push(`color>=${colorString}`);\r\n          break;\r\n        case \"at-least-one\":\r\n          // Ao menos uma das cores\r\n          parts.push(`color:${colorString}`);\r\n          break;\r\n      }\r\n    }\r\n    if (commanderColors.length > 0) parts.push(`id:${commanderColors.join(\"\")}`);\r\n\r\n    return parts.join(\" \");\r\n  }\r\n\r\n  // Dispara busca\r\n  function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    const query = buildQuery();\r\n    onSearch(query);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"p-3 bg-gray-800 text-white space-y-3\">\r\n      {/* Nome */}\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-300 mb-1\">Nome da carta</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder='Ex: \"Fire\"'\r\n          className=\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n        />\r\n      </div>\r\n\r\n      {/* Texto */}\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-300 mb-1\">Texto da carta</label>\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder='Ex: \"draw a card\"'\r\n          className=\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tipo */}\r\n      <div className=\"relative\">\r\n        <label className=\"block text-xs font-medium text-gray-300 mb-1\">Tipo</label>\r\n        \r\n        {/* Tags dos tipos selecionados */}\r\n        {selectedTypes.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-1.5 mb-1.5\">\r\n            {selectedTypes.map((type) => (\r\n              <span\r\n                key={type}\r\n                className=\"inline-flex items-center gap-1 px-1.5 py-0.5 bg-orange-500 text-white text-xs rounded\"\r\n              >\r\n                {type}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeType(type)}\r\n                  className=\"hover:text-gray-200 transition-colors\"\r\n                >\r\n                  <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </span>\r\n            ))}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"relative\">\r\n          <input\r\n            ref={typeInputRef}\r\n            type=\"text\"\r\n            value={typeInput}\r\n            onChange={(e) => setTypeInput(e.target.value)}\r\n            onFocus={() => setShowTypeDropdown(true)}\r\n            placeholder=\"Ex: Creature, Instant...\"\r\n            className=\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 pr-8 text-sm text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n          {/* Botão para abrir/fechar dropdown */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowTypeDropdown(!showTypeDropdown)}\r\n            className=\"absolute right-1.5 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-300 transition-colors\"\r\n          >\r\n            <svg\r\n              className={`w-3.5 h-3.5 transition-transform ${showTypeDropdown ? 'rotate-180' : ''}`}\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Dropdown com todos os tipos organizados por categoria */}\r\n        {showTypeDropdown && (\r\n          <div \r\n            ref={typeDropdownRef}\r\n            className=\"absolute z-10 w-full mt-1 max-h-80 overflow-y-auto bg-gray-800 border border-gray-600 rounded shadow-lg\"\r\n          >\r\n            {Object.keys(filteredCategories).length > 0 ? (\r\n              Object.entries(filteredCategories).map(([category, types]) => (\r\n                <div key={category} className=\"border-b border-gray-700 last:border-b-0\">\r\n                  {/* Título da categoria */}\r\n                  <div className=\"px-2.5 py-1.5 bg-gray-900 text-xs font-semibold text-gray-400 uppercase tracking-wide sticky top-0\">\r\n                    {category}\r\n                  </div>\r\n                  {/* Lista de tipos */}\r\n                  <div className=\"py-0.5\">\r\n                    {types.map((type) => (\r\n                      <button\r\n                        type=\"button\"\r\n                        key={`${category}-${type}`}\r\n                        onClick={() => selectType(type)}\r\n                        className=\"w-full text-left px-3 py-1 text-sm text-gray-300 hover:bg-gray-700 transition-colors\"\r\n                      >\r\n                        {type}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"px-3 py-2 text-sm text-gray-500\">\r\n                Nenhum tipo encontrado\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Checkbox: Permitir tipos parciais */}\r\n        {selectedTypes.length > 1 && (\r\n          <div className=\"mt-1.5\">\r\n            <label className=\"flex items-center gap-1.5 text-xs text-gray-300 cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={allowPartialTypes}\r\n                onChange={(e) => setAllowPartialTypes(e.target.checked)}\r\n                className=\"w-3.5 h-3.5 rounded border-gray-600 bg-gray-700 text-orange-500 focus:ring-2 focus:ring-orange-500 focus:ring-offset-0 cursor-pointer\"\r\n              />\r\n              <span>Permitir tipos parciais</span>\r\n            </label>\r\n            <p className=\"text-xs text-gray-500 mt-0.5 ml-5\">\r\n              {allowPartialTypes \r\n                ? \"Mostra cartas que tenham pelo menos um dos tipos selecionados\" \r\n                : \"Mostra apenas cartas que tenham todos os tipos selecionados\"}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Cores */}\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-300 mb-1\">Cores</label>\r\n        <div className=\"flex gap-1.5\">\r\n          {[\r\n            { symbol: \"W\", mana: \"w\" },\r\n            { symbol: \"U\", mana: \"u\" },\r\n            { symbol: \"B\", mana: \"b\" },\r\n            { symbol: \"R\", mana: \"r\" },\r\n            { symbol: \"G\", mana: \"g\" },\r\n            { symbol: \"C\", mana: \"c\" } // Incolor\r\n          ].map(({ symbol, mana }) => (\r\n            <button\r\n              type=\"button\"\r\n              key={symbol}\r\n              onClick={() => toggleColor(symbol)}\r\n              className={`w-8 h-8 rounded-full border-2 transition-all flex items-center justify-center ${\r\n                colors.includes(symbol)\r\n                  ? \"border-orange-500 scale-110\"\r\n                  : \"border-gray-600 hover:border-gray-500\"\r\n              }`}\r\n            >\r\n              <i className={`ms ms-${mana} ms-cost`} />\r\n            </button>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Dropdown: Modo de cores */}\r\n        {colors.length > 0 && (\r\n          <div className=\"mt-2\">\r\n            <label className=\"block text-xs font-medium text-gray-400 mb-1\">Modo de busca</label>\r\n            <select\r\n              value={colorMode}\r\n              onChange={(e) => setColorMode(e.target.value as \"exact\" | \"including\" | \"at-least-one\")}\r\n              className=\"w-full border border-gray-600 rounded bg-gray-700 px-2.5 py-1.5 text-sm text-white focus:outline-none focus:ring-2 focus:ring-orange-500 cursor-pointer\"\r\n            >\r\n              <option value=\"exact\">Exatamente estas cores</option>\r\n              <option value=\"including\">Incluindo estas cores</option>\r\n              <option value=\"at-least-one\">Ao menos uma das cores</option>\r\n            </select>\r\n            <p className=\"text-xs text-gray-500 mt-0.5\">\r\n              {colorMode === \"exact\" && \"Apenas cartas com exatamente as cores selecionadas\"}\r\n              {colorMode === \"including\" && \"Cartas que incluem as cores selecionadas (pode ter outras)\"}\r\n              {colorMode === \"at-least-one\" && \"Cartas com pelo menos uma das cores selecionadas\"}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Identidade de comandante */}\r\n      <div>\r\n        <label className=\"block text-xs font-medium text-gray-300 mb-1\">Identidade de comandante</label>\r\n        <div className=\"flex gap-1.5\">\r\n          {[\r\n            { symbol: \"W\", mana: \"w\" },\r\n            { symbol: \"U\", mana: \"u\" },\r\n            { symbol: \"B\", mana: \"b\" },\r\n            { symbol: \"R\", mana: \"r\" },\r\n            { symbol: \"G\", mana: \"g\" },\r\n            { symbol: \"C\", mana: \"c\" } // Incolor\r\n          ].map(({ symbol, mana }) => (\r\n            <button\r\n              type=\"button\"\r\n              key={symbol}\r\n              onClick={() => toggleColor(symbol, true)}\r\n              className={`w-8 h-8 rounded-full border-2 transition-all flex items-center justify-center ${\r\n                commanderColors.includes(symbol)\r\n                  ? \"border-orange-500 scale-110\"\r\n                  : \"border-gray-600 hover:border-gray-500\"\r\n              }`}\r\n            >\r\n              <i className={`ms ms-${mana} ms-cost`} />\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botão de busca */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-2 bg-orange-500 text-white font-semibold rounded-lg hover:bg-orange-600 transition-colors text-sm\"\r\n      >\r\n        Buscar\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}