{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom/client\";import\"./index.css\";import App from\"./App\";import reportWebVitals from\"./reportWebVitals\";import\"mana-font/css/mana.min.css\";import{BrowserRouter}from\"react-router-dom\";import{QueryClient,QueryClientProvider}from\"@tanstack/react-query\";import{ReactQueryDevtools}from\"@tanstack/react-query-devtools\";// üîÑ Migra√ß√£o autom√°tica para IndexedDB\nimport{migrateToIndexedDB}from\"./lib/storageMigration\";// üßπ Sistema de gerenciamento de cache\nimport\"./lib/cacheManager\";// Apenas importa para executar (side effect)\n// ‚úÖ Importar e expor Supabase globalmente\nimport{supabase}from\"./supabase\";// üßπ Limpar localStorage se estiver corrompido (one-time fix)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";try{const testKey='_firestore_test';localStorage.setItem(testKey,'test');localStorage.removeItem(testKey);// Migra dados do localStorage para IndexedDB automaticamente\nmigrateToIndexedDB().catch(err=>{console.error(\"Erro na migra√ß√£o:\",err);});}catch(e){console.warn('localStorage cheio, limpando dados antigos...');localStorage.clear();window.location.reload();}// üî• Configura√ß√£o OTIMIZADA para economizar quota do Firebase\n// Prioriza cache local e minimiza requisi√ß√µes ao servidor\nconst queryClient=new QueryClient({defaultOptions:{queries:{staleTime:5*60*1000,// Cache v√°lido por 5 minutos (era Infinity)\ngcTime:10*60*1000,// Mant√©m cache por 10 minutos (era 24h - muito tempo!)\nrefetchOnWindowFocus:false,// N√£o refetch ao focar janela\nrefetchOnReconnect:false,// N√£o refetch ao reconectar internet\nrefetchOnMount:false,// N√£o refetch ao montar componente\nretry:1,// Apenas 1 retry em caso de erro (reduz requisi√ß√µes)\nretryDelay:3000// 3 segundos entre retries\n}}});// Torna queryClient acess√≠vel globalmente para o cacheManager\nif(typeof window!=='undefined'){window.queryClient=queryClient;// ‚úÖ Expor Supabase globalmente para debug\nwindow.supabase=supabase;console.log('‚úÖ Supabase exposto globalmente para debug');}const root=ReactDOM.createRoot(document.getElementById(\"root\"));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsxs(QueryClientProvider,{client:queryClient,children:[/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})}),/*#__PURE__*/_jsx(ReactQueryDevtools,{initialIsOpen:false})]})}));// Medi√ß√£o de performance\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","QueryClient","QueryClientProvider","ReactQueryDevtools","migrateToIndexedDB","supabase","jsx","_jsx","jsxs","_jsxs","testKey","localStorage","setItem","removeItem","catch","err","console","error","e","warn","clear","window","location","reload","queryClient","defaultOptions","queries","staleTime","gcTime","refetchOnWindowFocus","refetchOnReconnect","refetchOnMount","retry","retryDelay","log","root","createRoot","document","getElementById","render","StrictMode","children","client","initialIsOpen"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"mana-font/css/mana.min.css\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\r\n\r\n// üîÑ Migra√ß√£o autom√°tica para IndexedDB\r\nimport { migrateToIndexedDB } from \"./lib/storageMigration\";\r\n\r\n// üßπ Sistema de gerenciamento de cache\r\nimport \"./lib/cacheManager\"; // Apenas importa para executar (side effect)\r\n\r\n// ‚úÖ Importar e expor Supabase globalmente\r\nimport { supabase } from \"./supabase\";\r\n\r\n// üßπ Limpar localStorage se estiver corrompido (one-time fix)\r\ntry {\r\n  const testKey = '_firestore_test';\r\n  localStorage.setItem(testKey, 'test');\r\n  localStorage.removeItem(testKey);\r\n  \r\n  // Migra dados do localStorage para IndexedDB automaticamente\r\n  migrateToIndexedDB().catch(err => {\r\n    console.error(\"Erro na migra√ß√£o:\", err);\r\n  });\r\n} catch (e) {\r\n  console.warn('localStorage cheio, limpando dados antigos...');\r\n  localStorage.clear();\r\n  window.location.reload();\r\n}\r\n\r\n// üî• Configura√ß√£o OTIMIZADA para economizar quota do Firebase\r\n// Prioriza cache local e minimiza requisi√ß√µes ao servidor\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // Cache v√°lido por 5 minutos (era Infinity)\r\n      gcTime: 10 * 60 * 1000, // Mant√©m cache por 10 minutos (era 24h - muito tempo!)\r\n      refetchOnWindowFocus: false, // N√£o refetch ao focar janela\r\n      refetchOnReconnect: false, // N√£o refetch ao reconectar internet\r\n      refetchOnMount: false, // N√£o refetch ao montar componente\r\n      retry: 1, // Apenas 1 retry em caso de erro (reduz requisi√ß√µes)\r\n      retryDelay: 3000, // 3 segundos entre retries\r\n    },\r\n  },\r\n});\r\n\r\n// Torna queryClient acess√≠vel globalmente para o cacheManager\r\nif (typeof window !== 'undefined') {\r\n  window.queryClient = queryClient;\r\n  // ‚úÖ Expor Supabase globalmente para debug\r\n  window.supabase = supabase;\r\n  console.log('‚úÖ Supabase exposto globalmente para debug');\r\n}\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      {/* Ferramenta de debug do React Query */}\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n    </QueryClientProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// Medi√ß√£o de performance\r\nreportWebVitals();\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,4BAA4B,CAEnC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAASC,WAAW,CAAEC,mBAAmB,KAAQ,uBAAuB,CACxE,OAASC,kBAAkB,KAAQ,gCAAgC,CAEnE;AACA,OAASC,kBAAkB,KAAQ,wBAAwB,CAE3D;AACA,MAAO,oBAAoB,CAAE;AAE7B;AACA,OAASC,QAAQ,KAAQ,YAAY,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,GAAI,CACF,KAAM,CAAAC,OAAO,CAAG,iBAAiB,CACjCC,YAAY,CAACC,OAAO,CAACF,OAAO,CAAE,MAAM,CAAC,CACrCC,YAAY,CAACE,UAAU,CAACH,OAAO,CAAC,CAEhC;AACAN,kBAAkB,CAAC,CAAC,CAACU,KAAK,CAACC,GAAG,EAAI,CAChCC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAEF,GAAG,CAAC,CACzC,CAAC,CAAC,CACJ,CAAE,MAAOG,CAAC,CAAE,CACVF,OAAO,CAACG,IAAI,CAAC,+CAA+C,CAAC,CAC7DR,YAAY,CAACS,KAAK,CAAC,CAAC,CACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAEA;AACA;AACA,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAvB,WAAW,CAAC,CAClCwB,cAAc,CAAE,CACdC,OAAO,CAAE,CACPC,SAAS,CAAE,CAAC,CAAG,EAAE,CAAG,IAAI,CAAE;AAC1BC,MAAM,CAAE,EAAE,CAAG,EAAE,CAAG,IAAI,CAAE;AACxBC,oBAAoB,CAAE,KAAK,CAAE;AAC7BC,kBAAkB,CAAE,KAAK,CAAE;AAC3BC,cAAc,CAAE,KAAK,CAAE;AACvBC,KAAK,CAAE,CAAC,CAAE;AACVC,UAAU,CAAE,IAAM;AACpB,CACF,CACF,CAAC,CAAC,CAEF;AACA,GAAI,MAAO,CAAAZ,MAAM,GAAK,WAAW,CAAE,CACjCA,MAAM,CAACG,WAAW,CAAGA,WAAW,CAChC;AACAH,MAAM,CAAChB,QAAQ,CAAGA,QAAQ,CAC1BW,OAAO,CAACkB,GAAG,CAAC,2CAA2C,CAAC,CAC1D,CAEA,KAAM,CAAAC,IAAI,CAAGtC,QAAQ,CAACuC,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC,CAEDH,IAAI,CAACI,MAAM,cACThC,IAAA,CAACX,KAAK,CAAC4C,UAAU,EAAAC,QAAA,cACfhC,KAAA,CAACP,mBAAmB,EAACwC,MAAM,CAAElB,WAAY,CAAAiB,QAAA,eACvClC,IAAA,CAACP,aAAa,EAAAyC,QAAA,cACZlC,IAAA,CAACT,GAAG,GAAE,CAAC,CACM,CAAC,cAEhBS,IAAA,CAACJ,kBAAkB,EAACwC,aAAa,CAAE,KAAM,CAAE,CAAC,EACzB,CAAC,CACN,CACpB,CAAC,CAED;AACA5C,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}