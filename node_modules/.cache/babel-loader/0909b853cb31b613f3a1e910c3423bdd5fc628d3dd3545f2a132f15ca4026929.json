{"ast":null,"code":"import React from\"react\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useQuery,useQueryClient}from\"@tanstack/react-query\";import{deckOperations,deckCardOperations}from\"@/lib/supabaseOperations\";import{useAuthState}from\"../../hooks/useAuthState\";import AdvancedSearchForm from\"./AdvancedSearchForm\";import SearchResultsGrid from\"./SearchResultsGrid\";import CardZoomModal from\"./CardZoomModal\";import{X}from\"lucide-react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdvancedSearchPage(_ref){let{onClose}=_ref;const navigate=useNavigate();const queryClient=useQueryClient();const[user]=useAuthState();const[cards,setCards]=useState([]);const[selectedCard,setSelectedCard]=useState(null);const[showDeckSelector,setShowDeckSelector]=useState(false);const[selectedCardForDeck,setSelectedCardForDeck]=useState(null);const[selectedDeckId,setSelectedDeckId]=useState(null);const[newDeckName,setNewDeckName]=useState(\"\");const[isCreatingDeck,setIsCreatingDeck]=useState(false);const[isFilterOpen,setIsFilterOpen]=useState(true);// 🔧 Normaliza o formato removendo caracteres estranhos\nconst normalizeFormat=format=>{if(!format)return\"Casual\";const normalized=format.replace(/[^\\x20-\\x7E]/g,'')// Remove caracteres não-ASCII\n.trim();const formatMap={'Standard':'Standard','Modern':'Modern','Commander':'Commander','Commander 300':'Commander 300','Commander 500':'Commander 500','Legacy':'Legacy','Vintage':'Vintage','Pioneer':'Pioneer','Pauper':'Pauper','Historic':'Historic','Casual':'Casual'};return formatMap[normalized]||normalized||'Casual';};// Busca decks do usuário\nconst{data:decks}=useQuery({queryKey:[\"decks\",user===null||user===void 0?void 0:user.id],queryFn:async()=>{if(!user)return[];return await deckOperations.getUserDecks(user.id);},enabled:!!user});async function handleSearch(query){try{const res=await fetch(\"https://api.scryfall.com/cards/search?q=\".concat(encodeURIComponent(query)));const data=await res.json();setCards(data.data||[]);setIsFilterOpen(false);// Fecha o filtro após buscar\n}catch(err){console.error(\"Erro ao buscar cartas:\",err);}}function handleAddToDeckClick(card){setSelectedCardForDeck(card);setSelectedDeckId(null);setShowDeckSelector(true);setSelectedCard(null);}async function handleAddToExistingDeck(){if(!selectedDeckId){return;}console.log(\"🔍 Redirecionando para deck:\",selectedDeckId);console.log(\"🎴 Carta a ser adicionada:\",selectedCardForDeck===null||selectedCardForDeck===void 0?void 0:selectedCardForDeck.name);if(!selectedCardForDeck){console.warn(\"⚠️ Nenhuma carta selecionada!\");return;}// Fecha modais\nsetShowDeckSelector(false);onClose();// Fecha a página de busca avançada\n// Redireciona para o deck com a carta no estado\nnavigate(\"/deckbuilder/\".concat(selectedDeckId),{state:{addCard:{id:selectedCardForDeck.id,name:selectedCardForDeck.name,image_uris:selectedCardForDeck.image_uris,card_faces:selectedCardForDeck.card_faces,mana_cost:selectedCardForDeck.mana_cost||\"\",type_line:selectedCardForDeck.type_line||\"\",oracle_text:selectedCardForDeck.oracle_text||\"\"}}});}async function handleCreateNewDeck(){if(!newDeckName.trim()||!user||!selectedCardForDeck)return;console.log(\"🎴 Criando novo deck:\",newDeckName,\"com carta:\",selectedCardForDeck.name);setIsCreatingDeck(true);try{var _selectedCardForDeck$,_selectedCardForDeck$2,_selectedCardForDeck$3,_selectedCardForDeck$4;const deckId=await deckOperations.createDeck({ownerId:user.id,name:newDeckName.trim(),format:\"Commander\",cards:[],createdAt:new Date().toISOString()});console.log(\"✅ Deck criado com ID:\",deckId);// Adiciona a carta ao deck recém-criado\nconst cardId=await deckCardOperations.addCardToDeck(deckId,{card_name:selectedCardForDeck.name,scryfall_id:selectedCardForDeck.id,image_url:((_selectedCardForDeck$=selectedCardForDeck.image_uris)===null||_selectedCardForDeck$===void 0?void 0:_selectedCardForDeck$.normal)||((_selectedCardForDeck$2=selectedCardForDeck.card_faces)===null||_selectedCardForDeck$2===void 0?void 0:(_selectedCardForDeck$3=_selectedCardForDeck$2[0])===null||_selectedCardForDeck$3===void 0?void 0:(_selectedCardForDeck$4=_selectedCardForDeck$3.image_uris)===null||_selectedCardForDeck$4===void 0?void 0:_selectedCardForDeck$4.normal),quantity:1,mana_cost:selectedCardForDeck.mana_cost||\"\",type_line:selectedCardForDeck.type_line||\"\",oracle_text:selectedCardForDeck.oracle_text||\"\"});console.log(\"✅ Carta adicionada ao deck com ID:\",cardId);alert(\"Deck criado e carta adicionada!\");setShowDeckSelector(false);setSelectedCardForDeck(null);setNewDeckName(\"\");}catch(err){console.error(\"❌ Erro ao criar deck:\",err);alert(\"Erro ao criar deck: \"+((err===null||err===void 0?void 0:err.message)||\"Erro desconhecido\"));}finally{setIsCreatingDeck(false);}}// 🆕 Redireciona para página de criação de deck com a carta selecionada\nfunction handleGoToCreateDeck(){var _selectedCardForDeck$5,_selectedCardForDeck$6,_selectedCardForDeck$7,_selectedCardForDeck$8;if(!selectedCardForDeck)return;console.log(\"🎯 Redirecionando para criar deck com carta:\",selectedCardForDeck.name);// Fecha o modal de seleção de deck\nsetShowDeckSelector(false);// Fecha a busca avançada\nonClose();// Navega para a página de criação de deck com a carta no state\nnavigate(\"/create\",{state:{cardToAdd:{card_name:selectedCardForDeck.name,scryfall_id:selectedCardForDeck.id,image_url:((_selectedCardForDeck$5=selectedCardForDeck.image_uris)===null||_selectedCardForDeck$5===void 0?void 0:_selectedCardForDeck$5.normal)||((_selectedCardForDeck$6=selectedCardForDeck.card_faces)===null||_selectedCardForDeck$6===void 0?void 0:(_selectedCardForDeck$7=_selectedCardForDeck$6[0])===null||_selectedCardForDeck$7===void 0?void 0:(_selectedCardForDeck$8=_selectedCardForDeck$7.image_uris)===null||_selectedCardForDeck$8===void 0?void 0:_selectedCardForDeck$8.normal),quantity:1,mana_cost:selectedCardForDeck.mana_cost||\"\",type_line:selectedCardForDeck.type_line||\"\",oracle_text:selectedCardForDeck.oracle_text||\"\"}}});}return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed inset-0 bg-gray-900 z-50 flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"h-16 bg-gray-800 border-b border-gray-700 flex items-center justify-between px-6 flex-shrink-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-white\",children:\"Busca Avan\\xE7ada\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:onClose,className:\"flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-700 hover:bg-gray-600 text-white transition-colors\",children:[/*#__PURE__*/_jsx(X,{className:\"w-5 h-5\"}),\"Fechar\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-800 border-b border-gray-700 transition-all duration-300 ease-in-out overflow-hidden \".concat(isFilterOpen?'max-h-[500px]':'max-h-0'),children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto max-h-[500px]\",children:/*#__PURE__*/_jsx(AdvancedSearchForm,{onSearch:handleSearch})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-800 border-b border-gray-700 flex justify-center py-2 cursor-pointer hover:bg-gray-750\",onClick:()=>setIsFilterOpen(!isFilterOpen),children:/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-1 bg-white rounded-full\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto bg-gray-900\",children:cards.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Use os filtros acima para buscar cartas\"})}):/*#__PURE__*/_jsx(SearchResultsGrid,{cards:cards,onCardLongPress:card=>setSelectedCard(card)})})]}),selectedCard&&/*#__PURE__*/_jsx(CardZoomModal,{card:selectedCard,onClose:()=>setSelectedCard(null),onAddToDeck:()=>handleAddToDeckClick(selectedCard)}),showDeckSelector&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl max-h-[80vh] overflow-y-auto\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-gray-100\",children:\"Adicionar ao Deck\"}),decks&&decks.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-300 mb-3\",children:\"Selecione um Deck\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-2 mb-4\",children:decks.map(deck=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{console.log(\"🖱️ Deck selecionado:\",deck.name,\"ID:\",deck.id);setSelectedDeckId(deck.id);},className:\"w-full rounded-lg px-4 py-3 text-gray-100 transition-all text-left \".concat(selectedDeckId===deck.id?'bg-blue-600 border-2 border-blue-400 shadow-lg shadow-blue-500/50':'bg-gray-700 border-2 border-transparent hover:bg-gray-600'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:deck.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-300\",children:normalizeFormat(deck.format)})]},deck.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddToExistingDeck,disabled:!selectedDeckId,className:\"w-full rounded-lg px-4 py-3 font-medium transition-colors mb-4 \".concat(selectedDeckId?'bg-green-600 hover:bg-green-700 text-white':'bg-gray-600 text-gray-400 cursor-not-allowed'),children:selectedDeckId?'Adicionar ao Deck Selecionado':'Selecione um Deck Primeiro'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGoToCreateDeck,className:\"w-full rounded-lg bg-orange-500 px-4 py-3 text-white font-medium hover:bg-orange-600 transition-colors mb-4\",children:\"Criar novo deck\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowDeckSelector(false);setSelectedCardForDeck(null);setSelectedDeckId(null);setNewDeckName(\"\");},className:\"w-full rounded-lg bg-gray-700 px-4 py-2 text-gray-200 hover:bg-gray-600 transition-colors\",children:\"Cancelar\"})]})})]});}","map":{"version":3,"names":["React","useState","useNavigate","useQuery","useQueryClient","deckOperations","deckCardOperations","useAuthState","AdvancedSearchForm","SearchResultsGrid","CardZoomModal","X","jsx","_jsx","jsxs","_jsxs","AdvancedSearchPage","_ref","onClose","navigate","queryClient","user","cards","setCards","selectedCard","setSelectedCard","showDeckSelector","setShowDeckSelector","selectedCardForDeck","setSelectedCardForDeck","selectedDeckId","setSelectedDeckId","newDeckName","setNewDeckName","isCreatingDeck","setIsCreatingDeck","isFilterOpen","setIsFilterOpen","normalizeFormat","format","normalized","replace","trim","formatMap","data","decks","queryKey","id","queryFn","getUserDecks","enabled","handleSearch","query","res","fetch","concat","encodeURIComponent","json","err","console","error","handleAddToDeckClick","card","handleAddToExistingDeck","log","name","warn","state","addCard","image_uris","card_faces","mana_cost","type_line","oracle_text","handleCreateNewDeck","_selectedCardForDeck$","_selectedCardForDeck$2","_selectedCardForDeck$3","_selectedCardForDeck$4","deckId","createDeck","ownerId","createdAt","Date","toISOString","cardId","addCardToDeck","card_name","scryfall_id","image_url","normal","quantity","alert","message","handleGoToCreateDeck","_selectedCardForDeck$5","_selectedCardForDeck$6","_selectedCardForDeck$7","_selectedCardForDeck$8","cardToAdd","className","children","onClick","onSearch","length","onCardLongPress","onAddToDeck","map","deck","disabled"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/components/advanced-search/AdvancedSearchPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { deckOperations, deckCardOperations } from \"@/lib/supabaseOperations\";\r\nimport { auth } from \"@/supabase\";\r\nimport { useAuthState } from \"../../hooks/useAuthState\";\r\nimport AdvancedSearchForm from \"./AdvancedSearchForm\";\r\nimport SearchResultsGrid from \"./SearchResultsGrid\";\r\nimport CardZoomModal from \"./CardZoomModal\";\r\nimport { X } from \"lucide-react\";\r\n\r\ninterface AdvancedSearchPageProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function AdvancedSearchPage({ onClose }: AdvancedSearchPageProps) {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const [user] = useAuthState();\r\n  const [cards, setCards] = useState<any[]>([]);\r\n  const [selectedCard, setSelectedCard] = useState<any | null>(null);\r\n  const [showDeckSelector, setShowDeckSelector] = useState(false);\r\n  const [selectedCardForDeck, setSelectedCardForDeck] = useState<any | null>(null);\r\n  const [selectedDeckId, setSelectedDeckId] = useState<string | null>(null);\r\n  const [newDeckName, setNewDeckName] = useState(\"\");\r\n  const [isCreatingDeck, setIsCreatingDeck] = useState(false);\r\n  const [isFilterOpen, setIsFilterOpen] = useState(true);\r\n\r\n  // 🔧 Normaliza o formato removendo caracteres estranhos\r\n  const normalizeFormat = (format: string) => {\r\n    if (!format) return \"Casual\";\r\n    \r\n    const normalized = format\r\n      .replace(/[^\\x20-\\x7E]/g, '') // Remove caracteres não-ASCII\r\n      .trim();\r\n    \r\n    const formatMap: { [key: string]: string } = {\r\n      'Standard': 'Standard',\r\n      'Modern': 'Modern',\r\n      'Commander': 'Commander',\r\n      'Commander 300': 'Commander 300',\r\n      'Commander 500': 'Commander 500',\r\n      'Legacy': 'Legacy',\r\n      'Vintage': 'Vintage',\r\n      'Pioneer': 'Pioneer',\r\n      'Pauper': 'Pauper',\r\n      'Historic': 'Historic',\r\n      'Casual': 'Casual'\r\n    };\r\n    \r\n    return formatMap[normalized] || normalized || 'Casual';\r\n  };\r\n\r\n  // Busca decks do usuário\r\n  const { data: decks } = useQuery({\r\n    queryKey: [\"decks\", user?.id],\r\n    queryFn: async () => {\r\n      if (!user) return [];\r\n      return await deckOperations.getUserDecks(user.id);\r\n    },\r\n    enabled: !!user,\r\n  });\r\n\r\n  async function handleSearch(query: string) {\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.scryfall.com/cards/search?q=${encodeURIComponent(query)}`\r\n      );\r\n      const data = await res.json();\r\n      setCards(data.data || []);\r\n      setIsFilterOpen(false); // Fecha o filtro após buscar\r\n    } catch (err) {\r\n      console.error(\"Erro ao buscar cartas:\", err);\r\n    }\r\n  }\r\n\r\n  function handleAddToDeckClick(card: any) {\r\n    setSelectedCardForDeck(card);\r\n    setSelectedDeckId(null);\r\n    setShowDeckSelector(true);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  async function handleAddToExistingDeck() {\r\n    if (!selectedDeckId) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔍 Redirecionando para deck:\", selectedDeckId);\r\n    console.log(\"🎴 Carta a ser adicionada:\", selectedCardForDeck?.name);\r\n    \r\n    if (!selectedCardForDeck) {\r\n      console.warn(\"⚠️ Nenhuma carta selecionada!\");\r\n      return;\r\n    }\r\n\r\n    // Fecha modais\r\n    setShowDeckSelector(false);\r\n    onClose(); // Fecha a página de busca avançada\r\n    \r\n    // Redireciona para o deck com a carta no estado\r\n    navigate(`/deckbuilder/${selectedDeckId}`, {\r\n      state: {\r\n        addCard: {\r\n          id: selectedCardForDeck.id,\r\n          name: selectedCardForDeck.name,\r\n          image_uris: selectedCardForDeck.image_uris,\r\n          card_faces: selectedCardForDeck.card_faces,\r\n          mana_cost: selectedCardForDeck.mana_cost || \"\",\r\n          type_line: selectedCardForDeck.type_line || \"\",\r\n          oracle_text: selectedCardForDeck.oracle_text || \"\",\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async function handleCreateNewDeck() {\r\n    if (!newDeckName.trim() || !user || !selectedCardForDeck) return;\r\n\r\n    console.log(\"🎴 Criando novo deck:\", newDeckName, \"com carta:\", selectedCardForDeck.name);\r\n    \r\n    setIsCreatingDeck(true);\r\n    try {\r\n      const deckId = await deckOperations.createDeck({\r\n        ownerId: user.id,\r\n        name: newDeckName.trim(),\r\n        format: \"Commander\",\r\n        cards: [],\r\n        createdAt: new Date().toISOString(),\r\n      });\r\n\r\n      console.log(\"✅ Deck criado com ID:\", deckId);\r\n\r\n      // Adiciona a carta ao deck recém-criado\r\n      const cardId = await deckCardOperations.addCardToDeck(deckId, {\r\n        card_name: selectedCardForDeck.name,\r\n        scryfall_id: selectedCardForDeck.id,\r\n        image_url: selectedCardForDeck.image_uris?.normal || selectedCardForDeck.card_faces?.[0]?.image_uris?.normal,\r\n        quantity: 1,\r\n        mana_cost: selectedCardForDeck.mana_cost || \"\",\r\n        type_line: selectedCardForDeck.type_line || \"\",\r\n        oracle_text: selectedCardForDeck.oracle_text || \"\",\r\n      });\r\n\r\n      console.log(\"✅ Carta adicionada ao deck com ID:\", cardId);\r\n      alert(\"Deck criado e carta adicionada!\");\r\n      setShowDeckSelector(false);\r\n      setSelectedCardForDeck(null);\r\n      setNewDeckName(\"\");\r\n    } catch (err: any) {\r\n      console.error(\"❌ Erro ao criar deck:\", err);\r\n      alert(\"Erro ao criar deck: \" + (err?.message || \"Erro desconhecido\"));\r\n    } finally {\r\n      setIsCreatingDeck(false);\r\n    }\r\n  }\r\n\r\n  // 🆕 Redireciona para página de criação de deck com a carta selecionada\r\n  function handleGoToCreateDeck() {\r\n    if (!selectedCardForDeck) return;\r\n    \r\n    console.log(\"🎯 Redirecionando para criar deck com carta:\", selectedCardForDeck.name);\r\n    \r\n    // Fecha o modal de seleção de deck\r\n    setShowDeckSelector(false);\r\n    \r\n    // Fecha a busca avançada\r\n    onClose();\r\n    \r\n    // Navega para a página de criação de deck com a carta no state\r\n    navigate(\"/create\", { \r\n      state: { \r\n        cardToAdd: {\r\n          card_name: selectedCardForDeck.name,\r\n          scryfall_id: selectedCardForDeck.id,\r\n          image_url: selectedCardForDeck.image_uris?.normal || selectedCardForDeck.card_faces?.[0]?.image_uris?.normal,\r\n          quantity: 1,\r\n          mana_cost: selectedCardForDeck.mana_cost || \"\",\r\n          type_line: selectedCardForDeck.type_line || \"\",\r\n          oracle_text: selectedCardForDeck.oracle_text || \"\",\r\n        }\r\n      } \r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-900 z-50 flex flex-col\">\r\n      {/* Header fixo */}\r\n      <div className=\"h-16 bg-gray-800 border-b border-gray-700 flex items-center justify-between px-6 flex-shrink-0\">\r\n        <h1 className=\"text-2xl font-bold text-white\">Busca Avançada</h1>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-700 hover:bg-gray-600 text-white transition-colors\"\r\n        >\r\n          <X className=\"w-5 h-5\" />\r\n          Fechar\r\n        </button>\r\n      </div>\r\n\r\n      {/* Container principal */}\r\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n        {/* Painel de filtros expansível */}\r\n        <div \r\n          className={`bg-gray-800 border-b border-gray-700 transition-all duration-300 ease-in-out overflow-hidden ${\r\n            isFilterOpen ? 'max-h-[500px]' : 'max-h-0'\r\n          }`}\r\n        >\r\n          <div className=\"overflow-y-auto max-h-[500px]\">\r\n            <AdvancedSearchForm onSearch={handleSearch} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Barra de toggle (barrinha branca) */}\r\n        <div className=\"bg-gray-800 border-b border-gray-700 flex justify-center py-2 cursor-pointer hover:bg-gray-750\"\r\n          onClick={() => setIsFilterOpen(!isFilterOpen)}\r\n        >\r\n          <div className=\"w-16 h-1 bg-white rounded-full\"></div>\r\n        </div>\r\n\r\n        {/* Grid de resultados */}\r\n        <div className=\"flex-1 overflow-y-auto bg-gray-900\">\r\n          {cards.length === 0 ? (\r\n            <div className=\"flex items-center justify-center h-full text-gray-400\">\r\n              <p>Use os filtros acima para buscar cartas</p>\r\n            </div>\r\n          ) : (\r\n            <SearchResultsGrid\r\n              cards={cards}\r\n              onCardLongPress={(card: any) => setSelectedCard(card)}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de zoom da carta */}\r\n      {selectedCard && (\r\n        <CardZoomModal\r\n          card={selectedCard}\r\n          onClose={() => setSelectedCard(null)}\r\n          onAddToDeck={() => handleAddToDeckClick(selectedCard)}\r\n        />\r\n      )}\r\n\r\n      {/* Modal de seleção de deck */}\r\n      {showDeckSelector && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl max-h-[80vh] overflow-y-auto\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-gray-100\">\r\n              Adicionar ao Deck\r\n            </h2>\r\n\r\n            {/* Lista de decks existentes */}\r\n            {decks && decks.length > 0 && (\r\n              <div className=\"mb-6\">\r\n                <h3 className=\"text-sm font-medium text-gray-300 mb-3\">\r\n                  Selecione um Deck\r\n                </h3>\r\n                <div className=\"flex flex-col gap-2 mb-4\">\r\n                  {decks.map((deck: any) => (\r\n                    <button\r\n                      key={deck.id}\r\n                      onClick={() => {\r\n                        console.log(\"🖱️ Deck selecionado:\", deck.name, \"ID:\", deck.id);\r\n                        setSelectedDeckId(deck.id);\r\n                      }}\r\n                      className={`w-full rounded-lg px-4 py-3 text-gray-100 transition-all text-left ${\r\n                        selectedDeckId === deck.id \r\n                          ? 'bg-blue-600 border-2 border-blue-400 shadow-lg shadow-blue-500/50' \r\n                          : 'bg-gray-700 border-2 border-transparent hover:bg-gray-600'\r\n                      }`}\r\n                    >\r\n                      <div className=\"font-medium\">{deck.name}</div>\r\n                      <div className=\"text-sm text-gray-300\">{normalizeFormat(deck.format)}</div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Botão Adicionar */}\r\n                <button\r\n                  onClick={handleAddToExistingDeck}\r\n                  disabled={!selectedDeckId}\r\n                  className={`w-full rounded-lg px-4 py-3 font-medium transition-colors mb-4 ${\r\n                    selectedDeckId\r\n                      ? 'bg-green-600 hover:bg-green-700 text-white'\r\n                      : 'bg-gray-600 text-gray-400 cursor-not-allowed'\r\n                  }`}\r\n                >\r\n                  {selectedDeckId ? 'Adicionar ao Deck Selecionado' : 'Selecione um Deck Primeiro'}\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Botão de criar novo deck */}\r\n            <button\r\n              onClick={handleGoToCreateDeck}\r\n              className=\"w-full rounded-lg bg-orange-500 px-4 py-3 text-white font-medium hover:bg-orange-600 transition-colors mb-4\"\r\n            >\r\n              Criar novo deck\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => {\r\n                setShowDeckSelector(false);\r\n                setSelectedCardForDeck(null);\r\n                setSelectedDeckId(null);\r\n                setNewDeckName(\"\");\r\n              }}\r\n              className=\"w-full rounded-lg bg-gray-700 px-4 py-2 text-gray-200 hover:bg-gray-600 transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}