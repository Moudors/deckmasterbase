{"ast":null,"code":"// Hook React para monitorar e gerenciar cache\nimport{useState,useEffect}from'react';export function useCacheStatus(){const[status,setStatus]=useState({storageUsed:0,storageQuota:0,percentUsed:0,warning:false,pendingSync:0,reactQueryQueries:0});useEffect(()=>{const updateStatus=async()=>{try{// Verifica uso de storage\nif('storage'in navigator&&'estimate'in navigator.storage){const estimate=await navigator.storage.estimate();const usage=estimate.usage||0;const quota=estimate.quota||0;const percentUsed=(usage/quota*100).toFixed(2);// Conta queries do React Query\nlet queryCount=0;if(window.queryClient){const queryCache=window.queryClient.getQueryCache();queryCount=queryCache.getAll().length;}// Conta operações pendentes\nlet pendingCount=0;if(window.offlineSyncManager){pendingCount=window.offlineSyncManager.getPendingCount();}setStatus({storageUsed:usage,storageQuota:quota,percentUsed:parseFloat(percentUsed),warning:parseFloat(percentUsed)>80,pendingSync:pendingCount,reactQueryQueries:queryCount});}}catch(error){console.error('Erro ao verificar status do cache:',error);}};// Atualiza imediatamente\nupdateStatus();// Atualiza a cada 30 segundos\nconst interval=setInterval(updateStatus,30000);return()=>clearInterval(interval);},[]);return status;}// Hook para forçar limpeza de cache\nexport function useCacheClear(){const[isClearing,setIsClearing]=useState(false);const clearCache=async()=>{setIsClearing(true);try{if(window.cacheManager){await window.cacheManager.forceClean();}}catch(error){console.error('Erro ao limpar cache:',error);}finally{setIsClearing(false);}};return{clearCache,isClearing};}","map":{"version":3,"names":["useState","useEffect","useCacheStatus","status","setStatus","storageUsed","storageQuota","percentUsed","warning","pendingSync","reactQueryQueries","updateStatus","navigator","storage","estimate","usage","quota","toFixed","queryCount","window","queryClient","queryCache","getQueryCache","getAll","length","pendingCount","offlineSyncManager","getPendingCount","parseFloat","error","console","interval","setInterval","clearInterval","useCacheClear","isClearing","setIsClearing","clearCache","cacheManager","forceClean"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/lib/useCacheHooks.js"],"sourcesContent":["// Hook React para monitorar e gerenciar cache\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function useCacheStatus() {\r\n  const [status, setStatus] = useState({\r\n    storageUsed: 0,\r\n    storageQuota: 0,\r\n    percentUsed: 0,\r\n    warning: false,\r\n    pendingSync: 0,\r\n    reactQueryQueries: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateStatus = async () => {\r\n      try {\r\n        // Verifica uso de storage\r\n        if ('storage' in navigator && 'estimate' in navigator.storage) {\r\n          const estimate = await navigator.storage.estimate();\r\n          const usage = estimate.usage || 0;\r\n          const quota = estimate.quota || 0;\r\n          const percentUsed = ((usage / quota) * 100).toFixed(2);\r\n\r\n          // Conta queries do React Query\r\n          let queryCount = 0;\r\n          if (window.queryClient) {\r\n            const queryCache = window.queryClient.getQueryCache();\r\n            queryCount = queryCache.getAll().length;\r\n          }\r\n\r\n          // Conta operações pendentes\r\n          let pendingCount = 0;\r\n          if (window.offlineSyncManager) {\r\n            pendingCount = window.offlineSyncManager.getPendingCount();\r\n          }\r\n\r\n          setStatus({\r\n            storageUsed: usage,\r\n            storageQuota: quota,\r\n            percentUsed: parseFloat(percentUsed),\r\n            warning: parseFloat(percentUsed) > 80,\r\n            pendingSync: pendingCount,\r\n            reactQueryQueries: queryCount,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao verificar status do cache:', error);\r\n      }\r\n    };\r\n\r\n    // Atualiza imediatamente\r\n    updateStatus();\r\n\r\n    // Atualiza a cada 30 segundos\r\n    const interval = setInterval(updateStatus, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return status;\r\n}\r\n\r\n// Hook para forçar limpeza de cache\r\nexport function useCacheClear() {\r\n  const [isClearing, setIsClearing] = useState(false);\r\n\r\n  const clearCache = async () => {\r\n    setIsClearing(true);\r\n    try {\r\n      if (window.cacheManager) {\r\n        await window.cacheManager.forceClean();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao limpar cache:', error);\r\n    } finally {\r\n      setIsClearing(false);\r\n    }\r\n  };\r\n\r\n  return { clearCache, isClearing };\r\n}\r\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,SAAS,CAAAC,cAAcA,CAAA,CAAG,CAC/B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGJ,QAAQ,CAAC,CACnCK,WAAW,CAAE,CAAC,CACdC,YAAY,CAAE,CAAC,CACfC,WAAW,CAAE,CAAC,CACdC,OAAO,CAAE,KAAK,CACdC,WAAW,CAAE,CAAC,CACdC,iBAAiB,CAAE,CACrB,CAAC,CAAC,CAEFT,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF;AACA,GAAI,SAAS,EAAI,CAAAC,SAAS,EAAI,UAAU,EAAI,CAAAA,SAAS,CAACC,OAAO,CAAE,CAC7D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,SAAS,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CACnD,KAAM,CAAAC,KAAK,CAAGD,QAAQ,CAACC,KAAK,EAAI,CAAC,CACjC,KAAM,CAAAC,KAAK,CAAGF,QAAQ,CAACE,KAAK,EAAI,CAAC,CACjC,KAAM,CAAAT,WAAW,CAAG,CAAEQ,KAAK,CAAGC,KAAK,CAAI,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAEtD;AACA,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAIC,MAAM,CAACC,WAAW,CAAE,CACtB,KAAM,CAAAC,UAAU,CAAGF,MAAM,CAACC,WAAW,CAACE,aAAa,CAAC,CAAC,CACrDJ,UAAU,CAAGG,UAAU,CAACE,MAAM,CAAC,CAAC,CAACC,MAAM,CACzC,CAEA;AACA,GAAI,CAAAC,YAAY,CAAG,CAAC,CACpB,GAAIN,MAAM,CAACO,kBAAkB,CAAE,CAC7BD,YAAY,CAAGN,MAAM,CAACO,kBAAkB,CAACC,eAAe,CAAC,CAAC,CAC5D,CAEAvB,SAAS,CAAC,CACRC,WAAW,CAAEU,KAAK,CAClBT,YAAY,CAAEU,KAAK,CACnBT,WAAW,CAAEqB,UAAU,CAACrB,WAAW,CAAC,CACpCC,OAAO,CAAEoB,UAAU,CAACrB,WAAW,CAAC,CAAG,EAAE,CACrCE,WAAW,CAAEgB,YAAY,CACzBf,iBAAiB,CAAEQ,UACrB,CAAC,CAAC,CACJ,CACF,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC5D,CACF,CAAC,CAED;AACAlB,YAAY,CAAC,CAAC,CAEd;AACA,KAAM,CAAAoB,QAAQ,CAAGC,WAAW,CAACrB,YAAY,CAAE,KAAK,CAAC,CAEjD,MAAO,IAAMsB,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAA5B,MAAM,CACf,CAEA;AACA,MAAO,SAAS,CAAA+B,aAAaA,CAAA,CAAG,CAC9B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGpC,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAqC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7BD,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF,GAAIjB,MAAM,CAACmB,YAAY,CAAE,CACvB,KAAM,CAAAnB,MAAM,CAACmB,YAAY,CAACC,UAAU,CAAC,CAAC,CACxC,CACF,CAAE,MAAOV,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,OAAS,CACRO,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,MAAO,CAAEC,UAAU,CAAEF,UAAW,CAAC,CACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}