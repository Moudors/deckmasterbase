{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import{motion,AnimatePresence}from\"framer-motion\";import{X,Filter,Trash2}from\"lucide-react\";import{useAuthState}from\"../hooks/useAuthState\";import CardGridItem from\"../components/deck/CardGridItem\";import ArtSelector from\"../components/deck/ArtSelector\";import DeleteQuantityDialog from\"../components/deck/DeleteQuantityDialog\";import{Button}from\"../components/ui/button\";import{Alert,AlertDescription}from\"../components/ui/alert\";import{AlertCircle}from\"lucide-react\";import{useConnectivity}from\"../lib/connectivityManager\";import{useDecks,useDeckCards}from\"../lib/useUnifiedDecks\";import{Input}from\"../components/ui/input\";import{Search,Loader2}from\"lucide-react\";import{useQueryClient}from\"@tanstack/react-query\";import{deckCardOperations}from\"../lib/supabaseOperations\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Collection=()=>{const navigate=useNavigate();const[user]=useAuthState();const{isOnline,canSaveData}=useConnectivity();const queryClient=useQueryClient();// Buscar o deck \"Coleção de cartas\" do usuário\nconst{decks=[],isLoading:decksLoading}=useDecks();const collectionDeck=useMemo(()=>decks===null||decks===void 0?void 0:decks.find(deck=>deck.format===\"Coleção de cartas\"),[decks]);const deckId=collectionDeck===null||collectionDeck===void 0?void 0:collectionDeck.id;const{cards:deckCards=[],isLoading:cardsLoading,addCard,updateCard,deleteCard,canEdit}=useDeckCards(deckId);// Estados\nconst[showArtSelector,setShowArtSelector]=useState(false);const[selectedCardForArt,setSelectedCardForArt]=useState(null);const[error,setError]=useState(null);// Estados para deletar cartas\nconst[isSelectionMode,setIsSelectionMode]=useState(false);const[selectedCards,setSelectedCards]=useState([]);const[showDeleteDialog,setShowDeleteDialog]=useState(false);const[cardsToDelete,setCardsToDelete]=useState([]);// Estados da SearchBar\nconst[query,setQuery]=useState(\"\");const[suggestions,setSuggestions]=useState([]);const[showSuggestions,setShowSuggestions]=useState(false);const[isLoadingSuggestions,setIsLoadingSuggestions]=useState(false);const[isSearching,setIsSearching]=useState(false);const[selectedIndex,setSelectedIndex]=useState(-1);// 🔄 Estado do modo filtro (swipe)\nconst[isFilterMode,setIsFilterMode]=useState(false);// Refs\nconst searchRef=useRef(null);const inputRef=useRef(null);const touchStartX=useRef(0);const touchStartY=useRef(0);// Verifica se usuário tem permissão\nconst isViewOnly=!canEdit;// Debug: Log do estado dos decks\nuseEffect(()=>{console.log(\"📚 Collection - Estado dos decks:\",{decksLoading,decksCount:decks===null||decks===void 0?void 0:decks.length,collectionDeck:collectionDeck?{id:collectionDeck.id,name:collectionDeck.name,format:collectionDeck.format}:null,allDecks:decks===null||decks===void 0?void 0:decks.map(d=>({id:d.id,name:d.name,format:d.format}))});},[decks,decksLoading,collectionDeck]);// Redireciona se não encontrar a coleção (mas só após o carregamento terminar)\nuseEffect(()=>{// Aguarda mais tempo para dar tempo do cache atualizar após criação\nconst timer=setTimeout(()=>{console.log(\"📚 Collection - Verificando redirecionamento:\",{decksLoading,collectionDeck:!!collectionDeck});if(!decksLoading&&!collectionDeck){console.log(\"⚠️ Collection - Nenhuma coleção encontrada, redirecionando...\");navigate(\"/\",{state:{message:\"Você precisa criar uma Coleção de cartas primeiro.\",type:\"warning\"}});}},3000);// Aumentado para 3 segundos\nreturn()=>clearTimeout(timer);},[decksLoading,collectionDeck,navigate]);// Handler para seleção de arte\nconst handleShowArtSelector=card=>{if(isViewOnly)return;setSelectedCardForArt(card);setShowArtSelector(true);};const handleSelectArt=async artData=>{let updates=_objectSpread({},artData);if(selectedCardForArt.card_faces&&Array.isArray(selectedCardForArt.card_faces)){const newCardFaces=selectedCardForArt.card_faces.map(face=>_objectSpread(_objectSpread({},face),{},{image_url:artData.image_url,image_uris:_objectSpread(_objectSpread({},face.image_uris),{},{normal:artData.image_url})}));updates.card_faces=newCardFaces;}if(selectedCardForArt&&!isViewOnly){try{await updateCard({cardId:selectedCardForArt.id,updates});setShowArtSelector(false);setSelectedCardForArt(null);}catch(error){setError(\"Erro ao alterar arte da carta\");}}};// Toggle transparência (adquirida/não adquirida)\nconst handleToggleAcquired=async card=>{if(isViewOnly)return;try{await updateCard({cardId:card.id,updates:{acquired:!card.acquired}});}catch(error){console.error(\"Erro ao atualizar carta:\",error);}};// Handlers para deletar cartas\nconst handleToggleSelect=cardId=>{setSelectedCards(prev=>prev.includes(cardId)?prev.filter(id=>id!==cardId):[...prev,cardId]);};const handleDeleteSelected=async()=>{console.log(\"🗑️ handleDeleteSelected chamado\",{selectedCardsCount:selectedCards.length,canEdit,selectedCards});if(selectedCards.length>0&&canEdit){const cardsToRemove=deckCards.filter(c=>selectedCards.includes(c.id));console.log(\"🗑️ Cartas a serem removidas:\",cardsToRemove);setCardsToDelete(cardsToRemove);setShowDeleteDialog(true);}else{console.log(\"⚠️ Não pode deletar:\",{hasSelectedCards:selectedCards.length>0,canEdit});}};const handleConfirmDelete=async quantities=>{console.log(\"🗑️ handleConfirmDelete chamado\",{quantities});try{const deletions=Object.entries(quantities).map(_ref=>{let[cardId,quantity]=_ref;return{cardId,quantityToDelete:quantity};});console.log(\"🗑️ Deletions array:\",deletions);for(const deletion of deletions){const card=deckCards.find(c=>c.id===deletion.cardId);console.log(\"🗑️ Processando carta:\",{cardId:deletion.cardId,card:card?{id:card.id,name:card.card_name,quantity:card.quantity}:null,quantityToDelete:deletion.quantityToDelete});if(card){if(deletion.quantityToDelete>=card.quantity){// Deletar carta completamente\nconsole.log(\"🗑️ Deletando carta completamente:\",card.id);await deleteCard(deletion.cardId);}else{// Reduzir quantidade\nconst newQuantity=card.quantity-deletion.quantityToDelete;console.log(\"🗑️ Reduzindo quantidade:\",{oldQuantity:card.quantity,newQuantity});await updateCard({cardId:deletion.cardId,updates:{quantity:newQuantity}});}}}console.log(\"✅ Deleções concluídas com sucesso\");setSelectedCards([]);setIsSelectionMode(false);setShowDeleteDialog(false);setCardsToDelete([]);}catch(error){console.error(\"❌ Erro ao remover cartas:\",error);setError(\"Erro ao remover cartas selecionadas\");}};// 🔄 Swipe na SearchBar para alternar modo filtro\nconst handleSearchBarTouchStart=e=>{touchStartX.current=e.touches[0].clientX;touchStartY.current=e.touches[0].clientY;};const handleSearchBarTouchEnd=e=>{const touchEndX=e.changedTouches[0].clientX;const touchEndY=e.changedTouches[0].clientY;const diffX=Math.abs(touchEndX-touchStartX.current);const diffY=Math.abs(touchEndY-touchStartY.current);// Swipe horizontal (mais horizontal que vertical)\nif(diffX>80&&diffX>diffY){setIsFilterMode(prev=>!prev);console.log('[DEBUG] Modo filtro alternado:',!isFilterMode);}};// Buscar sugestões (API ou filtro local)\nuseEffect(()=>{const fetchSuggestions=async()=>{if(query.trim().length<2){setSuggestions([]);setShowSuggestions(false);return;}setIsLoadingSuggestions(true);try{if(isFilterMode){// 🔍 Modo filtro: busca apenas nas cartas da coleção\nconst filtered=deckCards.filter(card=>card.card_name.toLowerCase().includes(query.toLowerCase())).map(card=>card.card_name).slice(0,10);// Limita a 10 resultados\nsetSuggestions(filtered);setShowSuggestions(filtered.length>0);}else{// 🌐 Modo busca: API Scryfall\nconst response=await fetch(\"https://api.scryfall.com/cards/autocomplete?q=\".concat(encodeURIComponent(query)));const data=await response.json();setSuggestions(data.data||[]);setShowSuggestions(true);}setSelectedIndex(-1);}catch(error){console.error(\"Erro ao buscar sugestões:\",error);setSuggestions([]);}finally{setIsLoadingSuggestions(false);}};const debounceTimer=setTimeout(fetchSuggestions,300);return()=>clearTimeout(debounceTimer);},[query,isFilterMode,deckCards]);// Adicionar carta à coleção\nconst handleAddCard=async cardName=>{if(!deckId||isFilterMode)return;// Não adiciona em modo filtro\nsetIsSearching(true);try{var _cardData$image_uris,_cardData$card_faces,_cardData$card_faces$,_cardData$card_faces$2,_inputRef$current;const response=await fetch(\"https://api.scryfall.com/cards/named?exact=\".concat(encodeURIComponent(cardName)));const cardData=await response.json();const imageUrl=((_cardData$image_uris=cardData.image_uris)===null||_cardData$image_uris===void 0?void 0:_cardData$image_uris.normal)||((_cardData$card_faces=cardData.card_faces)===null||_cardData$card_faces===void 0?void 0:(_cardData$card_faces$=_cardData$card_faces[0])===null||_cardData$card_faces$===void 0?void 0:(_cardData$card_faces$2=_cardData$card_faces$.image_uris)===null||_cardData$card_faces$2===void 0?void 0:_cardData$card_faces$2.normal);const newCard={deck_id:deckId,card_name:cardData.name,scryfall_id:cardData.id,image_url:imageUrl,mana_cost:cardData.mana_cost||\"\",type_line:cardData.type_line||\"\",acquired:false,quantity:1,created_at:new Date(),card_faces:cardData.card_faces||null};const currentCards=queryClient.getQueryData([\"cards\",deckId])||[];const existing=currentCards.find(c=>c.scryfall_id===cardData.id);if(existing){const nextQty=(existing.quantity||1)+1;queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c.id===existing.id?_objectSpread(_objectSpread({},c),{},{quantity:nextQty}):c);});try{await deckCardOperations.updateDeckCard(existing.id,{quantity:nextQty});}catch(err){console.error(\"Erro ao incrementar:\",err);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c.id===existing.id?_objectSpread(_objectSpread({},c),{},{quantity:existing.quantity}):c);});}}else{const tempId=\"tmp-\".concat(Date.now());const tempCard=_objectSpread(_objectSpread({id:tempId},newCard),{},{__optimistic:true});queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return[tempCard,...old];});try{const docId=await deckCardOperations.addCardToDeck(deckId,newCard);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.map(c=>c&&c.id===tempId?_objectSpread({id:docId},newCard):c);});}catch(err){console.error(\"Erro ao adicionar:\",err);queryClient.setQueryData([\"cards\",deckId],function(){let old=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return old.filter(c=>c.id!==tempId);});alert(\"Erro ao adicionar carta: \"+(err.message||\"Tente novamente\"));}}setQuery(\"\");setSuggestions([]);setShowSuggestions(false);(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}catch(error){console.error(\"Erro ao adicionar carta:\",error);}finally{setIsSearching(false);}};const handleSubmit=e=>{e.preventDefault();if(isFilterMode)return;// Não adiciona em modo filtro\nif(selectedIndex>=0&&suggestions[selectedIndex]){handleAddCard(suggestions[selectedIndex]);}else if(query.trim()){handleAddCard(query.trim());}};const handleKeyDown=e=>{if(!showSuggestions||suggestions.length===0)return;if(e.key===\"ArrowDown\"){e.preventDefault();setSelectedIndex(prev=>prev<suggestions.length-1?prev+1:prev);}else if(e.key===\"ArrowUp\"){e.preventDefault();setSelectedIndex(prev=>prev>0?prev-1:-1);}else if(e.key===\"Escape\"){setShowSuggestions(false);setSelectedIndex(-1);}};const handleSuggestionClick=suggestion=>{if(isFilterMode){// Em modo filtro, apenas filtra visualmente\nsetQuery(suggestion);setShowSuggestions(false);}else{handleAddCard(suggestion);}};// Filtrar cartas exibidas (quando em modo filtro com query)\nconst displayedCards=useMemo(()=>{if(!isFilterMode||!query.trim()){return deckCards;}return deckCards.filter(card=>card.card_name.toLowerCase().includes(query.toLowerCase()));},[deckCards,isFilterMode,query]);const totalCards=displayedCards.reduce((sum,card)=>sum+(card.quantity||1),0);if(decksLoading||cardsLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black flex items-center justify-center\",children:/*#__PURE__*/_jsx(Loader2,{className:\"w-8 h-8 animate-spin text-orange-500\"})});}if(!collectionDeck){return null;// Redireciona via useEffect\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between px-4 py-3 border-b border-gray-800\",children:[/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:()=>navigate(\"/\"),className:\"text-gray-400 hover:text-white\",children:/*#__PURE__*/_jsx(X,{className:\"w-6 h-6\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center gap-2\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-lg font-bold text-white\",children:\"Cole\\xE7\\xE3o de Cartas\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-400\",children:[totalCards,\" carta\",totalCards!==1?'s':'']})]}),!isViewOnly&&/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:()=>{if(isSelectionMode&&selectedCards.length>0){handleDeleteSelected();}else{setIsSelectionMode(!isSelectionMode);setSelectedCards([]);}},className:\"\".concat(isSelectionMode&&selectedCards.length>0?\"text-red-500 hover:text-red-400\":\"text-gray-400 hover:text-white\"),children:/*#__PURE__*/_jsx(Trash2,{className:\"w-5 h-5\"})}),isViewOnly&&/*#__PURE__*/_jsx(\"div\",{className:\"w-10\"})]}),!isOnline&&/*#__PURE__*/_jsxs(Alert,{className:\"mx-4 mt-4 bg-yellow-500/10 border-yellow-500/50\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4 text-yellow-500\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-yellow-200\",children:\"Voc\\xEA est\\xE1 offline. As altera\\xE7\\xF5es ser\\xE3o sincronizadas quando voltar online.\"})]}),error&&/*#__PURE__*/_jsxs(Alert,{className:\"mx-4 mt-4 bg-red-500/10 border-red-500/50\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4 text-red-500\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-red-200\",children:error})]}),/*#__PURE__*/_jsxs(motion.div,{initial:{y:-20,opacity:0},animate:{y:0,opacity:1},className:\"sticky top-0 z-20 border-b border-gray-800 p-4 transition-colors duration-300 \".concat(isFilterMode?'bg-blue-900/40'// Azul acinzentado em modo filtro\n:'bg-gray-900'),onTouchStart:handleSearchBarTouchStart,onTouchEnd:handleSearchBarTouchEnd,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"flex gap-2 relative\",ref:searchRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex-1\",children:[isFilterMode?/*#__PURE__*/_jsx(Filter,{className:\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-blue-400 z-10\"}):/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400 z-10\"}),/*#__PURE__*/_jsx(Input,{ref:inputRef,value:query,onChange:e=>setQuery(e.target.value),onKeyDown:handleKeyDown,placeholder:isFilterMode?\"Filtrar na coleção...\":\"Adicionar carta...\",className:\"pl-10 bg-gray-800 border-gray-700 text-white placeholder-gray-500 transition-colors \".concat(isFilterMode?'border-blue-600':''),disabled:isSearching||!canSaveData}),isLoadingSuggestions&&/*#__PURE__*/_jsx(Loader2,{className:\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 animate-spin text-gray-400\"})]}),!isFilterMode&&/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSearching||!query.trim()||!canSaveData,className:\"bg-orange-500 hover:bg-orange-600 disabled:bg-gray-700\",children:isSearching?/*#__PURE__*/_jsx(Loader2,{className:\"w-4 h-4 animate-spin\"}):/*#__PURE__*/_jsx(Search,{className:\"w-4 h-4\"})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-center mt-2 text-gray-400\",children:isFilterMode?/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-400\",children:\"\\uD83D\\uDD0D Modo Filtro - Deslize para voltar \\xE0 busca\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"\\uD83D\\uDD04 Deslize para filtrar sua cole\\xE7\\xE3o\"})}),/*#__PURE__*/_jsx(AnimatePresence,{children:showSuggestions&&suggestions.length>0&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},exit:{opacity:0,y:-10},className:\"absolute left-4 right-4 top-full mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-h-60 overflow-y-auto z-30\",children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleSuggestionClick(suggestion),className:\"w-full text-left px-4 py-2 hover:bg-gray-700 transition-colors \".concat(index===selectedIndex?'bg-gray-700':'',\" \").concat(index===0?'rounded-t-lg':'',\" \").concat(index===suggestions.length-1?'rounded-b-lg':''),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white\",children:suggestion})},index))})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto px-4 py-6\",children:displayedCards.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-full text-gray-400\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg\",children:isFilterMode&&query.trim()?\"Nenhuma carta encontrada com esse nome\":\"Sua coleção está vazia\"}),!isFilterMode&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2\",children:\"Use a barra de busca para adicionar cartas\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-3 pb-20\",children:/*#__PURE__*/_jsx(AnimatePresence,{children:displayedCards.map(card=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CardGridItem,{card:card,onToggleAcquired:handleToggleAcquired,onShowArtSelector:handleShowArtSelector,isViewOnly:isViewOnly,currentUserId:user===null||user===void 0?void 0:user.id,deckOwnerId:collectionDeck===null||collectionDeck===void 0?void 0:collectionDeck.user_id,isSelectionMode:isSelectionMode,isSelected:selectedCards.includes(card.id),onToggleSelect:()=>handleToggleSelect(card.id)})},card.id))})})}),isSelectionMode&&!isViewOnly&&/*#__PURE__*/_jsx(motion.div,{initial:{y:100},animate:{y:0},exit:{y:100},className:\"fixed bottom-6 left-1/2 -translate-x-1/2 bg-gray-800 border border-gray-700 rounded-full px-6 py-3 shadow-2xl\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-white font-medium\",children:selectedCards.length>0?\"\".concat(selectedCards.length,\" carta\").concat(selectedCards.length>1?'s':'',\" selecionada\").concat(selectedCards.length>1?'s':''):\"Selecione cartas para remover\"})}),/*#__PURE__*/_jsx(DeleteQuantityDialog,{isOpen:showDeleteDialog,onClose:()=>{setShowDeleteDialog(false);setCardsToDelete([]);},cards:cardsToDelete,onConfirm:handleConfirmDelete}),/*#__PURE__*/_jsx(ArtSelector,{isOpen:showArtSelector,onClose:()=>{setShowArtSelector(false);setSelectedCardForArt(null);},card:selectedCardForArt,onSelectArt:handleSelectArt,onAddCard:addCard,onUpdateCard:updateCard,deckId:deckId})]});};export default Collection;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useNavigate","motion","AnimatePresence","X","Filter","Trash2","useAuthState","CardGridItem","ArtSelector","DeleteQuantityDialog","Button","Alert","AlertDescription","AlertCircle","useConnectivity","useDecks","useDeckCards","Input","Search","Loader2","useQueryClient","deckCardOperations","jsx","_jsx","jsxs","_jsxs","Collection","navigate","user","isOnline","canSaveData","queryClient","decks","isLoading","decksLoading","collectionDeck","find","deck","format","deckId","id","cards","deckCards","cardsLoading","addCard","updateCard","deleteCard","canEdit","showArtSelector","setShowArtSelector","selectedCardForArt","setSelectedCardForArt","error","setError","isSelectionMode","setIsSelectionMode","selectedCards","setSelectedCards","showDeleteDialog","setShowDeleteDialog","cardsToDelete","setCardsToDelete","query","setQuery","suggestions","setSuggestions","showSuggestions","setShowSuggestions","isLoadingSuggestions","setIsLoadingSuggestions","isSearching","setIsSearching","selectedIndex","setSelectedIndex","isFilterMode","setIsFilterMode","searchRef","inputRef","touchStartX","touchStartY","isViewOnly","console","log","decksCount","length","name","allDecks","map","d","timer","setTimeout","state","message","type","clearTimeout","handleShowArtSelector","card","handleSelectArt","artData","updates","_objectSpread","card_faces","Array","isArray","newCardFaces","face","image_url","image_uris","normal","cardId","handleToggleAcquired","acquired","handleToggleSelect","prev","includes","filter","handleDeleteSelected","selectedCardsCount","cardsToRemove","c","hasSelectedCards","handleConfirmDelete","quantities","deletions","Object","entries","_ref","quantity","quantityToDelete","deletion","card_name","newQuantity","oldQuantity","handleSearchBarTouchStart","e","current","touches","clientX","clientY","handleSearchBarTouchEnd","touchEndX","changedTouches","touchEndY","diffX","Math","abs","diffY","fetchSuggestions","trim","filtered","toLowerCase","slice","response","fetch","concat","encodeURIComponent","data","json","debounceTimer","handleAddCard","cardName","_cardData$image_uris","_cardData$card_faces","_cardData$card_faces$","_cardData$card_faces$2","_inputRef$current","cardData","imageUrl","newCard","deck_id","scryfall_id","mana_cost","type_line","created_at","Date","currentCards","getQueryData","existing","nextQty","setQueryData","old","arguments","undefined","updateDeckCard","err","tempId","now","tempCard","__optimistic","docId","addCardToDeck","alert","focus","handleSubmit","preventDefault","handleKeyDown","key","handleSuggestionClick","suggestion","displayedCards","totalCards","reduce","sum","className","children","variant","size","onClick","div","initial","y","opacity","animate","onTouchStart","onTouchEnd","onSubmit","ref","value","onChange","target","onKeyDown","placeholder","disabled","exit","index","onToggleAcquired","onShowArtSelector","currentUserId","deckOwnerId","user_id","isSelected","onToggleSelect","isOpen","onClose","onConfirm","onSelectArt","onAddCard","onUpdateCard"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/pages/Collection.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { X, Filter, Trash2 } from \"lucide-react\";\r\nimport { useAuthState } from \"../hooks/useAuthState\";\r\nimport CardGridItem from \"../components/deck/CardGridItem\";\r\nimport ArtSelector from \"../components/deck/ArtSelector\";\r\nimport DeleteQuantityDialog from \"../components/deck/DeleteQuantityDialog\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { Alert, AlertDescription } from \"../components/ui/alert\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { useConnectivity } from \"../lib/connectivityManager\";\r\nimport { useDecks, useDeckCards } from \"../lib/useUnifiedDecks\";\r\nimport { Input } from \"../components/ui/input\";\r\nimport { Search, Loader2 } from \"lucide-react\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { deckCardOperations } from \"../lib/supabaseOperations\";\r\n\r\nconst Collection = () => {\r\n  const navigate = useNavigate();\r\n  const [user] = useAuthState();\r\n  const { isOnline, canSaveData } = useConnectivity();\r\n  const queryClient = useQueryClient();\r\n  \r\n  // Buscar o deck \"Coleção de cartas\" do usuário\r\n  const { decks = [], isLoading: decksLoading } = useDecks();\r\n  const collectionDeck = useMemo(() => \r\n    decks?.find(deck => deck.format === \"Coleção de cartas\"), \r\n    [decks]\r\n  );\r\n  \r\n  const deckId = collectionDeck?.id;\r\n  \r\n  const { \r\n    cards: deckCards = [], \r\n    isLoading: cardsLoading,\r\n    addCard,\r\n    updateCard,\r\n    deleteCard,\r\n    canEdit \r\n  } = useDeckCards(deckId);\r\n\r\n  // Estados\r\n  const [showArtSelector, setShowArtSelector] = useState(false);\r\n  const [selectedCardForArt, setSelectedCardForArt] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Estados para deletar cartas\r\n  const [isSelectionMode, setIsSelectionMode] = useState(false);\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [cardsToDelete, setCardsToDelete] = useState([]);\r\n  \r\n  // Estados da SearchBar\r\n  const [query, setQuery] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [isLoadingSuggestions, setIsLoadingSuggestions] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n  \r\n  // 🔄 Estado do modo filtro (swipe)\r\n  const [isFilterMode, setIsFilterMode] = useState(false);\r\n  \r\n  // Refs\r\n  const searchRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const touchStartX = useRef(0);\r\n  const touchStartY = useRef(0);\r\n\r\n  // Verifica se usuário tem permissão\r\n  const isViewOnly = !canEdit;\r\n\r\n  // Debug: Log do estado dos decks\r\n  useEffect(() => {\r\n    console.log(\"📚 Collection - Estado dos decks:\", {\r\n      decksLoading,\r\n      decksCount: decks?.length,\r\n      collectionDeck: collectionDeck ? { id: collectionDeck.id, name: collectionDeck.name, format: collectionDeck.format } : null,\r\n      allDecks: decks?.map(d => ({ id: d.id, name: d.name, format: d.format }))\r\n    });\r\n  }, [decks, decksLoading, collectionDeck]);\r\n\r\n  // Redireciona se não encontrar a coleção (mas só após o carregamento terminar)\r\n  useEffect(() => {\r\n    // Aguarda mais tempo para dar tempo do cache atualizar após criação\r\n    const timer = setTimeout(() => {\r\n      console.log(\"📚 Collection - Verificando redirecionamento:\", { decksLoading, collectionDeck: !!collectionDeck });\r\n      if (!decksLoading && !collectionDeck) {\r\n        console.log(\"⚠️ Collection - Nenhuma coleção encontrada, redirecionando...\");\r\n        navigate(\"/\", { \r\n          state: { \r\n            message: \"Você precisa criar uma Coleção de cartas primeiro.\",\r\n            type: \"warning\"\r\n          } \r\n        });\r\n      }\r\n    }, 3000); // Aumentado para 3 segundos\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [decksLoading, collectionDeck, navigate]);\r\n\r\n  // Handler para seleção de arte\r\n  const handleShowArtSelector = (card) => {\r\n    if (isViewOnly) return;\r\n    setSelectedCardForArt(card);\r\n    setShowArtSelector(true);\r\n  };\r\n\r\n  const handleSelectArt = async (artData) => {\r\n    let updates = { ...artData };\r\n    if (selectedCardForArt.card_faces && Array.isArray(selectedCardForArt.card_faces)) {\r\n      const newCardFaces = selectedCardForArt.card_faces.map(face => ({\r\n        ...face,\r\n        image_url: artData.image_url,\r\n        image_uris: {\r\n          ...face.image_uris,\r\n          normal: artData.image_url\r\n        }\r\n      }));\r\n      updates.card_faces = newCardFaces;\r\n    }\r\n    \r\n    if (selectedCardForArt && !isViewOnly) {\r\n      try {\r\n        await updateCard({ cardId: selectedCardForArt.id, updates });\r\n        setShowArtSelector(false);\r\n        setSelectedCardForArt(null);\r\n      } catch (error) {\r\n        setError(\"Erro ao alterar arte da carta\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Toggle transparência (adquirida/não adquirida)\r\n  const handleToggleAcquired = async (card) => {\r\n    if (isViewOnly) return;\r\n    try {\r\n      await updateCard({ \r\n        cardId: card.id, \r\n        updates: { acquired: !card.acquired } \r\n      });\r\n    } catch (error) {\r\n      console.error(\"Erro ao atualizar carta:\", error);\r\n    }\r\n  };\r\n\r\n  // Handlers para deletar cartas\r\n  const handleToggleSelect = (cardId) => {\r\n    setSelectedCards((prev) =>\r\n      prev.includes(cardId)\r\n        ? prev.filter((id) => id !== cardId)\r\n        : [...prev, cardId]\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    console.log(\"🗑️ handleDeleteSelected chamado\", { \r\n      selectedCardsCount: selectedCards.length, \r\n      canEdit,\r\n      selectedCards \r\n    });\r\n    \r\n    if (selectedCards.length > 0 && canEdit) {\r\n      const cardsToRemove = deckCards.filter((c) => selectedCards.includes(c.id));\r\n      console.log(\"🗑️ Cartas a serem removidas:\", cardsToRemove);\r\n      setCardsToDelete(cardsToRemove);\r\n      setShowDeleteDialog(true);\r\n    } else {\r\n      console.log(\"⚠️ Não pode deletar:\", { \r\n        hasSelectedCards: selectedCards.length > 0, \r\n        canEdit \r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = async (quantities) => {\r\n    console.log(\"🗑️ handleConfirmDelete chamado\", { quantities });\r\n    \r\n    try {\r\n      const deletions = Object.entries(quantities).map(([cardId, quantity]) => ({\r\n        cardId,\r\n        quantityToDelete: quantity,\r\n      }));\r\n      \r\n      console.log(\"🗑️ Deletions array:\", deletions);\r\n      \r\n      for (const deletion of deletions) {\r\n        const card = deckCards.find(c => c.id === deletion.cardId);\r\n        console.log(\"🗑️ Processando carta:\", { \r\n          cardId: deletion.cardId, \r\n          card: card ? { id: card.id, name: card.card_name, quantity: card.quantity } : null,\r\n          quantityToDelete: deletion.quantityToDelete \r\n        });\r\n        \r\n        if (card) {\r\n          if (deletion.quantityToDelete >= card.quantity) {\r\n            // Deletar carta completamente\r\n            console.log(\"🗑️ Deletando carta completamente:\", card.id);\r\n            await deleteCard(deletion.cardId);\r\n          } else {\r\n            // Reduzir quantidade\r\n            const newQuantity = card.quantity - deletion.quantityToDelete;\r\n            console.log(\"🗑️ Reduzindo quantidade:\", { \r\n              oldQuantity: card.quantity, \r\n              newQuantity \r\n            });\r\n            await updateCard({ cardId: deletion.cardId, updates: { quantity: newQuantity } });\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(\"✅ Deleções concluídas com sucesso\");\r\n      setSelectedCards([]);\r\n      setIsSelectionMode(false);\r\n      setShowDeleteDialog(false);\r\n      setCardsToDelete([]);\r\n    } catch (error) {\r\n      console.error(\"❌ Erro ao remover cartas:\", error);\r\n      setError(\"Erro ao remover cartas selecionadas\");\r\n    }\r\n  };\r\n\r\n  // 🔄 Swipe na SearchBar para alternar modo filtro\r\n  const handleSearchBarTouchStart = (e) => {\r\n    touchStartX.current = e.touches[0].clientX;\r\n    touchStartY.current = e.touches[0].clientY;\r\n  };\r\n\r\n  const handleSearchBarTouchEnd = (e) => {\r\n    const touchEndX = e.changedTouches[0].clientX;\r\n    const touchEndY = e.changedTouches[0].clientY;\r\n    const diffX = Math.abs(touchEndX - touchStartX.current);\r\n    const diffY = Math.abs(touchEndY - touchStartY.current);\r\n\r\n    // Swipe horizontal (mais horizontal que vertical)\r\n    if (diffX > 80 && diffX > diffY) {\r\n      setIsFilterMode(prev => !prev);\r\n      console.log('[DEBUG] Modo filtro alternado:', !isFilterMode);\r\n    }\r\n  };\r\n\r\n  // Buscar sugestões (API ou filtro local)\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      if (query.trim().length < 2) {\r\n        setSuggestions([]);\r\n        setShowSuggestions(false);\r\n        return;\r\n      }\r\n\r\n      setIsLoadingSuggestions(true);\r\n      \r\n      try {\r\n        if (isFilterMode) {\r\n          // 🔍 Modo filtro: busca apenas nas cartas da coleção\r\n          const filtered = deckCards\r\n            .filter(card => \r\n              card.card_name.toLowerCase().includes(query.toLowerCase())\r\n            )\r\n            .map(card => card.card_name)\r\n            .slice(0, 10); // Limita a 10 resultados\r\n          \r\n          setSuggestions(filtered);\r\n          setShowSuggestions(filtered.length > 0);\r\n        } else {\r\n          // 🌐 Modo busca: API Scryfall\r\n          const response = await fetch(\r\n            `https://api.scryfall.com/cards/autocomplete?q=${encodeURIComponent(query)}`\r\n          );\r\n          const data = await response.json();\r\n          setSuggestions(data.data || []);\r\n          setShowSuggestions(true);\r\n        }\r\n        setSelectedIndex(-1);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar sugestões:\", error);\r\n        setSuggestions([]);\r\n      } finally {\r\n        setIsLoadingSuggestions(false);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(fetchSuggestions, 300);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [query, isFilterMode, deckCards]);\r\n\r\n  // Adicionar carta à coleção\r\n  const handleAddCard = async (cardName) => {\r\n    if (!deckId || isFilterMode) return; // Não adiciona em modo filtro\r\n    setIsSearching(true);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.scryfall.com/cards/named?exact=${encodeURIComponent(cardName)}`\r\n      );\r\n      const cardData = await response.json();\r\n\r\n      const imageUrl =\r\n        cardData.image_uris?.normal || cardData.card_faces?.[0]?.image_uris?.normal;\r\n\r\n      const newCard = {\r\n        deck_id: deckId,\r\n        card_name: cardData.name,\r\n        scryfall_id: cardData.id,\r\n        image_url: imageUrl,\r\n        mana_cost: cardData.mana_cost || \"\",\r\n        type_line: cardData.type_line || \"\",\r\n        acquired: false,\r\n        quantity: 1,\r\n        created_at: new Date(),\r\n        card_faces: cardData.card_faces || null,\r\n      };\r\n\r\n      const currentCards = queryClient.getQueryData([\"cards\", deckId]) || [];\r\n      const existing = currentCards.find((c) => c.scryfall_id === cardData.id);\r\n\r\n      if (existing) {\r\n        const nextQty = (existing.quantity || 1) + 1;\r\n        queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n          old.map((c) => (c.id === existing.id ? { ...c, quantity: nextQty } : c))\r\n        );\r\n\r\n        try {\r\n          await deckCardOperations.updateDeckCard(existing.id, { quantity: nextQty });\r\n        } catch (err) {\r\n          console.error(\"Erro ao incrementar:\", err);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n            old.map((c) => (c.id === existing.id ? { ...c, quantity: existing.quantity } : c))\r\n          );\r\n        }\r\n      } else {\r\n        const tempId = `tmp-${Date.now()}`;\r\n        const tempCard = { id: tempId, ...newCard, __optimistic: true };\r\n        queryClient.setQueryData([\"cards\", deckId], (old = []) => [tempCard, ...old]);\r\n\r\n        try {\r\n          const docId = await deckCardOperations.addCardToDeck(deckId, newCard);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) =>\r\n            old.map((c) => (c && c.id === tempId ? { id: docId, ...newCard } : c))\r\n          );\r\n        } catch (err) {\r\n          console.error(\"Erro ao adicionar:\", err);\r\n          queryClient.setQueryData([\"cards\", deckId], (old = []) => old.filter((c) => c.id !== tempId));\r\n          alert(\"Erro ao adicionar carta: \" + (err.message || \"Tente novamente\"));\r\n        }\r\n      }\r\n\r\n      setQuery(\"\");\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      inputRef.current?.focus();\r\n    } catch (error) {\r\n      console.error(\"Erro ao adicionar carta:\", error);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isFilterMode) return; // Não adiciona em modo filtro\r\n    \r\n    if (selectedIndex >= 0 && suggestions[selectedIndex]) {\r\n      handleAddCard(suggestions[selectedIndex]);\r\n    } else if (query.trim()) {\r\n      handleAddCard(query.trim());\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (!showSuggestions || suggestions.length === 0) return;\r\n\r\n    if (e.key === \"ArrowDown\") {\r\n      e.preventDefault();\r\n      setSelectedIndex((prev) => (prev < suggestions.length - 1 ? prev + 1 : prev));\r\n    } else if (e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      setSelectedIndex((prev) => (prev > 0 ? prev - 1 : -1));\r\n    } else if (e.key === \"Escape\") {\r\n      setShowSuggestions(false);\r\n      setSelectedIndex(-1);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    if (isFilterMode) {\r\n      // Em modo filtro, apenas filtra visualmente\r\n      setQuery(suggestion);\r\n      setShowSuggestions(false);\r\n    } else {\r\n      handleAddCard(suggestion);\r\n    }\r\n  };\r\n\r\n  // Filtrar cartas exibidas (quando em modo filtro com query)\r\n  const displayedCards = useMemo(() => {\r\n    if (!isFilterMode || !query.trim()) {\r\n      return deckCards;\r\n    }\r\n    return deckCards.filter(card => \r\n      card.card_name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  }, [deckCards, isFilterMode, query]);\r\n\r\n  const totalCards = displayedCards.reduce((sum, card) => sum + (card.quantity || 1), 0);\r\n\r\n  if (decksLoading || cardsLoading) {\r\n    return (\r\n      <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black flex items-center justify-center\">\r\n        <Loader2 className=\"w-8 h-8 animate-spin text-orange-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!collectionDeck) {\r\n    return null; // Redireciona via useEffect\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-800\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          onClick={() => navigate(\"/\")}\r\n          className=\"text-gray-400 hover:text-white\"\r\n        >\r\n          <X className=\"w-6 h-6\" />\r\n        </Button>\r\n\r\n        <div className=\"text-center flex-1\">\r\n          <div className=\"flex items-center justify-center gap-2\">\r\n            <h1 className=\"text-lg font-bold text-white\">Coleção de Cartas</h1>\r\n          </div>\r\n          <p className=\"text-sm text-gray-400\">\r\n            {totalCards} carta{totalCards !== 1 ? 's' : ''}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Botão de lixeira */}\r\n        {!isViewOnly && (\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={() => {\r\n              if (isSelectionMode && selectedCards.length > 0) {\r\n                handleDeleteSelected();\r\n              } else {\r\n                setIsSelectionMode(!isSelectionMode);\r\n                setSelectedCards([]);\r\n              }\r\n            }}\r\n            className={`${\r\n              isSelectionMode && selectedCards.length > 0\r\n                ? \"text-red-500 hover:text-red-400\"\r\n                : \"text-gray-400 hover:text-white\"\r\n            }`}\r\n          >\r\n            <Trash2 className=\"w-5 h-5\" />\r\n          </Button>\r\n        )}\r\n        {isViewOnly && <div className=\"w-10\" />}\r\n      </div>\r\n\r\n      {/* Alertas */}\r\n      {!isOnline && (\r\n        <Alert className=\"mx-4 mt-4 bg-yellow-500/10 border-yellow-500/50\">\r\n          <AlertCircle className=\"h-4 w-4 text-yellow-500\" />\r\n          <AlertDescription className=\"text-yellow-200\">\r\n            Você está offline. As alterações serão sincronizadas quando voltar online.\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert className=\"mx-4 mt-4 bg-red-500/10 border-red-500/50\">\r\n          <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n          <AlertDescription className=\"text-red-200\">{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* SearchBar com swipe */}\r\n      <motion.div\r\n        initial={{ y: -20, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        className={`sticky top-0 z-20 border-b border-gray-800 p-4 transition-colors duration-300 ${\r\n          isFilterMode \r\n            ? 'bg-blue-900/40' // Azul acinzentado em modo filtro\r\n            : 'bg-gray-900'\r\n        }`}\r\n        onTouchStart={handleSearchBarTouchStart}\r\n        onTouchEnd={handleSearchBarTouchEnd}\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"flex gap-2 relative\" ref={searchRef}>\r\n          <div className=\"relative flex-1\">\r\n            {isFilterMode ? (\r\n              <Filter className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-blue-400 z-10\" />\r\n            ) : (\r\n              <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400 z-10\" />\r\n            )}\r\n            <Input\r\n              ref={inputRef}\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder={isFilterMode ? \"Filtrar na coleção...\" : \"Adicionar carta...\"}\r\n              className={`pl-10 bg-gray-800 border-gray-700 text-white placeholder-gray-500 transition-colors ${\r\n                isFilterMode ? 'border-blue-600' : ''\r\n              }`}\r\n              disabled={isSearching || !canSaveData}\r\n            />\r\n            {isLoadingSuggestions && (\r\n              <Loader2 className=\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 animate-spin text-gray-400\" />\r\n            )}\r\n          </div>\r\n\r\n          {!isFilterMode && (\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={isSearching || !query.trim() || !canSaveData}\r\n              className=\"bg-orange-500 hover:bg-orange-600 disabled:bg-gray-700\"\r\n            >\r\n              {isSearching ? <Loader2 className=\"w-4 h-4 animate-spin\" /> : <Search className=\"w-4 h-4\" />}\r\n            </Button>\r\n          )}\r\n        </form>\r\n\r\n        {/* Indicador de modo */}\r\n        <p className=\"text-xs text-center mt-2 text-gray-400\">\r\n          {isFilterMode ? (\r\n            <span className=\"text-blue-400\">🔍 Modo Filtro - Deslize para voltar à busca</span>\r\n          ) : (\r\n            <span className=\"text-gray-400\">🔄 Deslize para filtrar sua coleção</span>\r\n          )}\r\n        </p>\r\n\r\n        {/* Sugestões */}\r\n        <AnimatePresence>\r\n          {showSuggestions && suggestions.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -10 }}\r\n              className=\"absolute left-4 right-4 top-full mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-h-60 overflow-y-auto z-30\"\r\n            >\r\n              {suggestions.map((suggestion, index) => (\r\n                <button\r\n                  key={index}\r\n                  type=\"button\"\r\n                  onClick={() => handleSuggestionClick(suggestion)}\r\n                  className={`w-full text-left px-4 py-2 hover:bg-gray-700 transition-colors ${\r\n                    index === selectedIndex ? 'bg-gray-700' : ''\r\n                  } ${index === 0 ? 'rounded-t-lg' : ''} ${\r\n                    index === suggestions.length - 1 ? 'rounded-b-lg' : ''\r\n                  }`}\r\n                >\r\n                  <span className=\"text-white\">{suggestion}</span>\r\n                </button>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n\r\n      {/* Grid de Cartas */}\r\n      <div className=\"flex-1 overflow-y-auto px-4 py-6\">\r\n        {displayedCards.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-400\">\r\n            <p className=\"text-lg\">\r\n              {isFilterMode && query.trim() \r\n                ? \"Nenhuma carta encontrada com esse nome\"\r\n                : \"Sua coleção está vazia\"\r\n              }\r\n            </p>\r\n            {!isFilterMode && (\r\n              <p className=\"text-sm mt-2\">Use a barra de busca para adicionar cartas</p>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 gap-3 pb-20\">\r\n            <AnimatePresence>\r\n              {displayedCards.map((card) => (\r\n                <div key={card.id}>\r\n                  <CardGridItem\r\n                    card={card}\r\n                    onToggleAcquired={handleToggleAcquired}\r\n                    onShowArtSelector={handleShowArtSelector}\r\n                    isViewOnly={isViewOnly}\r\n                    currentUserId={user?.id}\r\n                    deckOwnerId={collectionDeck?.user_id}\r\n                    isSelectionMode={isSelectionMode}\r\n                    isSelected={selectedCards.includes(card.id)}\r\n                    onToggleSelect={() => handleToggleSelect(card.id)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </AnimatePresence>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Barra inferior de seleção */}\r\n      {isSelectionMode && !isViewOnly && (\r\n        <motion.div\r\n          initial={{ y: 100 }}\r\n          animate={{ y: 0 }}\r\n          exit={{ y: 100 }}\r\n          className=\"fixed bottom-6 left-1/2 -translate-x-1/2 bg-gray-800 border border-gray-700 rounded-full px-6 py-3 shadow-2xl\"\r\n        >\r\n          <p className=\"text-white font-medium\">\r\n            {selectedCards.length > 0\r\n              ? `${selectedCards.length} carta${selectedCards.length > 1 ? 's' : ''} selecionada${selectedCards.length > 1 ? 's' : ''}`\r\n              : \"Selecione cartas para remover\"}\r\n          </p>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Modal de confirmação de deleção */}\r\n      <DeleteQuantityDialog\r\n        isOpen={showDeleteDialog}\r\n        onClose={() => {\r\n          setShowDeleteDialog(false);\r\n          setCardsToDelete([]);\r\n        }}\r\n        cards={cardsToDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n\r\n      {/* Modal de seleção de arte */}\r\n      <ArtSelector\r\n        isOpen={showArtSelector}\r\n        onClose={() => {\r\n          setShowArtSelector(false);\r\n          setSelectedCardForArt(null);\r\n        }}\r\n        card={selectedCardForArt}\r\n        onSelectArt={handleSelectArt}\r\n        onAddCard={addCard}\r\n        onUpdateCard={updateCard}\r\n        deckId={deckId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}