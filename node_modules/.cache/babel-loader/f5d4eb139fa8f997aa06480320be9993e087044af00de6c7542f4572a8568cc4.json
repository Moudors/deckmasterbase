{"ast":null,"code":"// src/pages/CreateDeck.tsx - Online-First Version\nimport React,{useState,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import{useAuthState}from\"../hooks/useAuthState\";import{useConnectivity}from\"@/lib/connectivityManager\";import{deckOperations}from\"@/lib/supabaseOperations\";import{supabase}from\"@/supabase\";import{useQueryClient}from\"@tanstack/react-query\";import{Select,SelectContent,SelectItem,SelectTrigger,SelectValue}from\"@/components/ui/select\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateDeck=()=>{var _location$state;const navigate=useNavigate();const location=useLocation();const[user]=useAuthState();const{isOnline,canSaveData}=useConnectivity();const queryClient=useQueryClient();const[deckName,setDeckName]=useState(\"\");const[format,setFormat]=useState(\"commander\");const[error,setError]=useState(\"\");const[isCreating,setIsCreating]=useState(false);const cardToAdd=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.cardToAdd;// 🎨 Helper para converter URL para art_crop (arte sem frame)\nconst getArtCropUrl=imageUrl=>{if(!imageUrl)return null;if(imageUrl.includes(\"/normal/\")){return imageUrl.replace(\"/normal/\",\"/art_crop/\");}return imageUrl;};// Bloqueia criação de deck se estiver offline\nuseEffect(()=>{if(!canSaveData){setError(\"Criação de decks não disponível offline. Conecte-se à internet.\");}else{setError(\"\");}},[canSaveData]);// Monitora o erro da criação\nuseEffect(()=>{if(error){console.error(\"❌ Erro na criação:\",error);}},[error]);const handleSubmit=async e=>{e.preventDefault();if(!deckName||!format)return;if(!canSaveData){setError(\"Não é possível criar decks offline. Conecte-se à internet.\");return;}setIsCreating(true);setError(\"\");try{console.log(\"🔧 Criando deck online...\");// 🔍 Obter o usuário autenticado do Supabase\nconst{data:{user:supabaseUser},error:authError}=await supabase.auth.getUser();if(authError||!supabaseUser){throw new Error(\"Usuário não autenticado no Supabase. Faça login novamente.\");}console.log(\"👤 Usuário autenticado:\",supabaseUser.email,\"ID:\",supabaseUser.id);// 🔒 Verificação de formatos especiais (apenas um por usuário)\nif(format===\"Coleção de cartas\"||format===\"Trades\"){console.log(\"🔍 Verificando duplicata de formato especial:\",format);const{data:existingDecks,error:queryError}=await supabase.from(\"decks\").select(\"id, name, format\").eq(\"owner_id\",supabaseUser.id).eq(\"format\",format);if(queryError){console.error(\"❌ Erro ao verificar duplicata:\",queryError);}if(existingDecks&&existingDecks.length>0){const message=format===\"Coleção de cartas\"?\"Você já tem uma Coleção de cartas criada\":\"Você já tem um deck de Trades criado\";console.log(\"⚠️ Formato especial duplicado detectado:\",existingDecks[0]);navigate(\"/\",{state:{message,type:\"warning\"}});return;}}// 🎯 Cria o deck ONLINE diretamente\nconst newDeck=await deckOperations.createDeck({name:deckName,format,owner_id:supabaseUser.id,// Usar o ID do Supabase Auth\n// 🎨 Define a capa como art_crop (arte sem frame) da primeira carta\ncover_image_url:getArtCropUrl(cardToAdd===null||cardToAdd===void 0?void 0:cardToAdd.image_url)||\"\"});console.log(\"✅ Deck criado online com sucesso:\");console.log(\"   ID:\",newDeck.id);console.log(\"   Nome:\",newDeck.name);console.log(\"   Formato:\",newDeck.format);console.log(\"   Owner ID:\",newDeck.owner_id);console.log(\"   Deck completo:\",newDeck);if(cardToAdd!==null&&cardToAdd!==void 0&&cardToAdd.image_url){console.log(\"🎨 Capa do deck definida:\",cardToAdd.image_url);}// Invalida o cache de decks para forçar atualização\nawait queryClient.invalidateQueries({queryKey:[\"decks\"]});console.log(\"🔄 Cache de decks invalidado\");// Força o refetch dos decks\nawait queryClient.refetchQueries({queryKey:[\"decks\"]});console.log(\"🔄 Decks recarregados\");// 🎴 Se for Coleção de cartas, redireciona para a página Collection\nif(format===\"Coleção de cartas\"){console.log(\"📚 Redirecionando para página Collection\");// Aguarda mais tempo para garantir que o deck está carregado\nawait new Promise(resolve=>setTimeout(resolve,2000));navigate(\"/collection\");return;}// 🎴 Se há uma carta para adicionar, redireciona com a carta no state\nif(cardToAdd&&newDeck.id){console.log(\"🎯 Redirecionando para deck com carta:\",cardToAdd.card_name);// Prepara os dados da carta no formato que o Deckbuilder espera\nconst cardForDeckbuilder={id:cardToAdd.scryfall_id,name:cardToAdd.card_name,image_uris:cardToAdd.image_url?{normal:cardToAdd.image_url}:undefined,card_faces:cardToAdd.card_faces||undefined,mana_cost:cardToAdd.mana_cost||\"\",type_line:cardToAdd.type_line||\"\",oracle_text:cardToAdd.oracle_text||\"\"};console.log(\"📤 Dados enviados para Deckbuilder:\",cardForDeckbuilder);// Redireciona para o Deckbuilder com a carta no state\nnavigate(\"/deckbuilder/\".concat(newDeck.id),{state:{addCard:cardForDeckbuilder}});}else{// Se não há carta, apenas navega para o deck vazio\nnavigate(\"/deckbuilder/\".concat(newDeck.id));}}catch(error){console.error(\"❌ Erro ao criar deck:\",error);setError(error.message||\"Erro ao criar deck. Tente novamente.\");}finally{setIsCreating(false);}};// Se não há usuário logado, verifica pelo Supabase Auth\nconst[authChecked,setAuthChecked]=useState(false);const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{const checkAuth=async()=>{const{data:{user}}=await supabase.auth.getUser();setIsLoggedIn(!!user);setAuthChecked(true);};checkAuth();},[]);if(!authChecked){return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Verificando autentica\\xE7\\xE3o...\"})]})});}if(!isLoggedIn){return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 mb-4\",children:\"Voc\\xEA precisa estar logado para criar decks\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),className:\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\",children:\"Voltar para Home\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between gap-2 p-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),className:\"text-orange-500 hover:text-orange-400\",children:\"\\u2190 Voltar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full \".concat(isOnline?'bg-green-400':'bg-red-400')}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:isOnline?'Online':'Offline'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center text-center px-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Criar Novo Deck\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 mt-1\",children:\"Preencha as informa\\xE7\\xF5es do seu deck\"}),cardToAdd&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 bg-orange-500/20 border border-orange-500 rounded-lg px-4 py-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-orange-300\",children:[\"\\uD83C\\uDFB4 A carta \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:cardToAdd.card_name}),\" ser\\xE1 adicionada ao deck\"]})}),!canSaveData&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 bg-red-500/20 border border-red-500 rounded-lg px-4 py-2\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-300\",children:\"\\u26A0\\uFE0F Cria\\xE7\\xE3o de decks indispon\\xEDvel offline. Conecte-se \\xE0 internet.\"})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 bg-red-900/50 border border-red-500 text-red-200 px-4 py-3 rounded\",children:error})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center px-6\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"w-full max-w-md space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Nome do Deck\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:deckName,onChange:e=>setDeckName(e.target.value),className:\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\",placeholder:\"Digite o nome do deck...\",required:true,disabled:!canSaveData||isCreating})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Formato\"}),/*#__PURE__*/_jsxs(Select,{value:format,onValueChange:setFormat,disabled:!canSaveData||isCreating,children:[/*#__PURE__*/_jsx(SelectTrigger,{className:\"w-full bg-gray-800 border-gray-600\",children:/*#__PURE__*/_jsx(SelectValue,{placeholder:\"Selecione o formato\"})}),/*#__PURE__*/_jsxs(SelectContent,{className:\"bg-gray-800 border-gray-600 max-h-[300px] overflow-y-auto\",position:\"popper\",side:\"bottom\",align:\"start\",sideOffset:5,avoidCollisions:false,children:[/*#__PURE__*/_jsx(SelectItem,{value:\"commander\",children:\"Commander\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"commander 300\",children:\"Commander 300\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"commander 500\",children:\"Commander 500\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"standard\",children:\"Standard\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"modern\",children:\"Modern\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"legacy\",children:\"Legacy\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"vintage\",children:\"Vintage\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"pauper\",children:\"Pauper\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"historic\",children:\"Historic\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"pioneer\",children:\"Pioneer\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"alchemy\",children:\"Alchemy\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"brawl\",children:\"Brawl\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"casual\",children:\"Casual\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"Cole\\xE7\\xE3o de cartas\",children:\"Cole\\xE7\\xE3o de cartas\"}),/*#__PURE__*/_jsx(SelectItem,{value:\"Trades\",children:\"Trades\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!deckName||!format||!canSaveData||isCreating,className:\"w-full bg-orange-600 hover:bg-orange-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white py-2 px-4 rounded-md font-medium transition-colors\",children:isCreating?\"Criando...\":\"Criar Deck\"})]})})]});};export default CreateDeck;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","useAuthState","useConnectivity","deckOperations","supabase","useQueryClient","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","jsx","_jsx","jsxs","_jsxs","CreateDeck","_location$state","navigate","location","user","isOnline","canSaveData","queryClient","deckName","setDeckName","format","setFormat","error","setError","isCreating","setIsCreating","cardToAdd","state","getArtCropUrl","imageUrl","includes","replace","console","handleSubmit","e","preventDefault","log","data","supabaseUser","authError","auth","getUser","Error","email","id","existingDecks","queryError","from","select","eq","length","message","type","newDeck","createDeck","name","owner_id","cover_image_url","image_url","invalidateQueries","queryKey","refetchQueries","Promise","resolve","setTimeout","card_name","cardForDeckbuilder","scryfall_id","image_uris","normal","undefined","card_faces","mana_cost","type_line","oracle_text","concat","addCard","authChecked","setAuthChecked","isLoggedIn","setIsLoggedIn","checkAuth","className","children","onClick","onSubmit","value","onChange","target","placeholder","required","disabled","onValueChange","position","side","align","sideOffset","avoidCollisions"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/pages/CreateDeck.tsx"],"sourcesContent":["// src/pages/CreateDeck.tsx - Online-First Version\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useAuthState } from \"../hooks/useAuthState\";\r\nimport { useConnectivity } from \"@/lib/connectivityManager\";\r\nimport { deckOperations } from \"@/lib/supabaseOperations\";\r\nimport { supabase } from \"@/supabase\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\n\r\ninterface CardToAdd {\r\n  card_name: string;\r\n  scryfall_id: string;\r\n  image_url: string;\r\n  mana_cost?: string;\r\n  type_line?: string;\r\n  oracle_text?: string;\r\n  card_faces?: any;\r\n}\r\n\r\ninterface LocationState {\r\n  cardToAdd?: CardToAdd;\r\n}\r\n\r\nconst CreateDeck = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [user] = useAuthState();\r\n  const { isOnline, canSaveData } = useConnectivity();\r\n  const queryClient = useQueryClient();\r\n\r\n  const [deckName, setDeckName] = useState(\"\");\r\n  const [format, setFormat] = useState(\"commander\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  const cardToAdd = (location.state as LocationState)?.cardToAdd;\r\n\r\n  // 🎨 Helper para converter URL para art_crop (arte sem frame)\r\n  const getArtCropUrl = (imageUrl: string | undefined) => {\r\n    if (!imageUrl) return null;\r\n    if (imageUrl.includes(\"/normal/\")) {\r\n      return imageUrl.replace(\"/normal/\", \"/art_crop/\");\r\n    }\r\n    return imageUrl;\r\n  };\r\n\r\n  // Bloqueia criação de deck se estiver offline\r\n  useEffect(() => {\r\n    if (!canSaveData) {\r\n      setError(\"Criação de decks não disponível offline. Conecte-se à internet.\");\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n  }, [canSaveData]);\r\n\r\n  // Monitora o erro da criação\r\n  useEffect(() => {\r\n    if (error) {\r\n      console.error(\"❌ Erro na criação:\", error);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!deckName || !format) return;\r\n\r\n    if (!canSaveData) {\r\n      setError(\"Não é possível criar decks offline. Conecte-se à internet.\");\r\n      return;\r\n    }\r\n\r\n    setIsCreating(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      console.log(\"🔧 Criando deck online...\");\r\n      \r\n      // 🔍 Obter o usuário autenticado do Supabase\r\n      const { data: { user: supabaseUser }, error: authError } = await supabase.auth.getUser();\r\n      \r\n      if (authError || !supabaseUser) {\r\n        throw new Error(\"Usuário não autenticado no Supabase. Faça login novamente.\");\r\n      }\r\n      \r\n      console.log(\"👤 Usuário autenticado:\", supabaseUser.email, \"ID:\", supabaseUser.id);\r\n      \r\n      // 🔒 Verificação de formatos especiais (apenas um por usuário)\r\n      if (format === \"Coleção de cartas\" || format === \"Trades\") {\r\n        console.log(\"🔍 Verificando duplicata de formato especial:\", format);\r\n        \r\n        const { data: existingDecks, error: queryError } = await supabase\r\n          .from(\"decks\")\r\n          .select(\"id, name, format\")\r\n          .eq(\"owner_id\", supabaseUser.id)\r\n          .eq(\"format\", format);\r\n        \r\n        if (queryError) {\r\n          console.error(\"❌ Erro ao verificar duplicata:\", queryError);\r\n        }\r\n        \r\n        if (existingDecks && existingDecks.length > 0) {\r\n          const message = format === \"Coleção de cartas\" \r\n            ? \"Você já tem uma Coleção de cartas criada\" \r\n            : \"Você já tem um deck de Trades criado\";\r\n          \r\n          console.log(\"⚠️ Formato especial duplicado detectado:\", existingDecks[0]);\r\n          navigate(\"/\", { state: { message, type: \"warning\" } });\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // 🎯 Cria o deck ONLINE diretamente\r\n      const newDeck = await deckOperations.createDeck({\r\n        name: deckName,\r\n        format,\r\n        owner_id: supabaseUser.id, // Usar o ID do Supabase Auth\r\n        // 🎨 Define a capa como art_crop (arte sem frame) da primeira carta\r\n        cover_image_url: getArtCropUrl(cardToAdd?.image_url) || \"\",\r\n      });\r\n\r\n      console.log(\"✅ Deck criado online com sucesso:\");\r\n      console.log(\"   ID:\", newDeck.id);\r\n      console.log(\"   Nome:\", newDeck.name);\r\n      console.log(\"   Formato:\", newDeck.format);\r\n      console.log(\"   Owner ID:\", newDeck.owner_id);\r\n      console.log(\"   Deck completo:\", newDeck);\r\n      \r\n      if (cardToAdd?.image_url) {\r\n        console.log(\"🎨 Capa do deck definida:\", cardToAdd.image_url);\r\n      }\r\n\r\n      // Invalida o cache de decks para forçar atualização\r\n      await queryClient.invalidateQueries({ queryKey: [\"decks\"] });\r\n      console.log(\"🔄 Cache de decks invalidado\");\r\n      \r\n      // Força o refetch dos decks\r\n      await queryClient.refetchQueries({ queryKey: [\"decks\"] });\r\n      console.log(\"🔄 Decks recarregados\");\r\n\r\n      // 🎴 Se for Coleção de cartas, redireciona para a página Collection\r\n      if (format === \"Coleção de cartas\") {\r\n        console.log(\"📚 Redirecionando para página Collection\");\r\n        // Aguarda mais tempo para garantir que o deck está carregado\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n        navigate(\"/collection\");\r\n        return;\r\n      }\r\n\r\n      // 🎴 Se há uma carta para adicionar, redireciona com a carta no state\r\n      if (cardToAdd && newDeck.id) {\r\n        console.log(\"🎯 Redirecionando para deck com carta:\", cardToAdd.card_name);\r\n        \r\n        // Prepara os dados da carta no formato que o Deckbuilder espera\r\n        const cardForDeckbuilder = {\r\n          id: cardToAdd.scryfall_id,\r\n          name: cardToAdd.card_name,\r\n          image_uris: cardToAdd.image_url ? { normal: cardToAdd.image_url } : undefined,\r\n          card_faces: cardToAdd.card_faces || undefined,\r\n          mana_cost: cardToAdd.mana_cost || \"\",\r\n          type_line: cardToAdd.type_line || \"\",\r\n          oracle_text: cardToAdd.oracle_text || \"\",\r\n        };\r\n        \r\n        console.log(\"📤 Dados enviados para Deckbuilder:\", cardForDeckbuilder);\r\n        \r\n        // Redireciona para o Deckbuilder com a carta no state\r\n        navigate(`/deckbuilder/${newDeck.id}`, {\r\n          state: {\r\n            addCard: cardForDeckbuilder\r\n          }\r\n        });\r\n      } else {\r\n        // Se não há carta, apenas navega para o deck vazio\r\n        navigate(`/deckbuilder/${newDeck.id}`);\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"❌ Erro ao criar deck:\", error);\r\n      setError(error.message || \"Erro ao criar deck. Tente novamente.\");\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  // Se não há usuário logado, verifica pelo Supabase Auth\r\n  const [authChecked, setAuthChecked] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      setIsLoggedIn(!!user);\r\n      setAuthChecked(true);\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  if (!authChecked) {\r\n    return (\r\n      <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4\"></div>\r\n          <p>Verificando autenticação...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-400 mb-4\">Você precisa estar logado para criar decks</p>\r\n          <button \r\n            onClick={() => navigate(\"/\")}\r\n            className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\"\r\n          >\r\n            Voltar para Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen bg-gradient-to-br from-gray-900 to-black text-white flex flex-col\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between gap-2 p-4\">\r\n        <button\r\n          onClick={() => navigate(-1)}\r\n          className=\"text-orange-500 hover:text-orange-400\"\r\n        >\r\n          ← Voltar\r\n        </button>\r\n        \r\n        {/* Status de conectividade */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className={`w-2 h-2 rounded-full ${isOnline ? 'bg-green-400' : 'bg-red-400'}`}></div>\r\n          <span className=\"text-sm\">\r\n            {isOnline ? 'Online' : 'Offline'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-center text-center px-6\">\r\n        <h1 className=\"text-2xl font-bold\">Criar Novo Deck</h1>\r\n        <p className=\"text-gray-400 mt-1\">\r\n          Preencha as informações do seu deck\r\n        </p>\r\n        \r\n        {/* 🎴 Indicador de carta para adicionar */}\r\n        {cardToAdd && (\r\n          <div className=\"mt-4 bg-orange-500/20 border border-orange-500 rounded-lg px-4 py-2\">\r\n            <p className=\"text-sm text-orange-300\">\r\n              🎴 A carta <span className=\"font-bold\">{cardToAdd.card_name}</span> será adicionada ao deck\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Aviso de offline */}\r\n        {!canSaveData && (\r\n          <div className=\"mt-4 bg-red-500/20 border border-red-500 rounded-lg px-4 py-2\">\r\n            <p className=\"text-sm text-red-300\">\r\n              ⚠️ Criação de decks indisponível offline. Conecte-se à internet.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Mensagem de erro */}\r\n        {error && (\r\n          <div className=\"mt-4 bg-red-900/50 border border-red-500 text-red-200 px-4 py-3 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Formulário */}\r\n      <div className=\"flex-1 flex items-center justify-center px-6\">\r\n        <form onSubmit={handleSubmit} className=\"w-full max-w-md space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Nome do Deck\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={deckName}\r\n              onChange={(e) => setDeckName(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n              placeholder=\"Digite o nome do deck...\"\r\n              required\r\n              disabled={!canSaveData || isCreating}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Formato\r\n            </label>\r\n            <Select value={format} onValueChange={setFormat} disabled={!canSaveData || isCreating}>\r\n              <SelectTrigger className=\"w-full bg-gray-800 border-gray-600\">\r\n                <SelectValue placeholder=\"Selecione o formato\" />\r\n              </SelectTrigger>\r\n              <SelectContent \r\n                className=\"bg-gray-800 border-gray-600 max-h-[300px] overflow-y-auto\" \r\n                position=\"popper\"\r\n                side=\"bottom\" \r\n                align=\"start\"\r\n                sideOffset={5}\r\n                avoidCollisions={false}\r\n              >\r\n                <SelectItem value=\"commander\">Commander</SelectItem>\r\n                <SelectItem value=\"commander 300\">Commander 300</SelectItem>\r\n                <SelectItem value=\"commander 500\">Commander 500</SelectItem>\r\n                <SelectItem value=\"standard\">Standard</SelectItem>\r\n                <SelectItem value=\"modern\">Modern</SelectItem>\r\n                <SelectItem value=\"legacy\">Legacy</SelectItem>\r\n                <SelectItem value=\"vintage\">Vintage</SelectItem>\r\n                <SelectItem value=\"pauper\">Pauper</SelectItem>\r\n                <SelectItem value=\"historic\">Historic</SelectItem>\r\n                <SelectItem value=\"pioneer\">Pioneer</SelectItem>\r\n                <SelectItem value=\"alchemy\">Alchemy</SelectItem>\r\n                <SelectItem value=\"brawl\">Brawl</SelectItem>\r\n                <SelectItem value=\"casual\">Casual</SelectItem>\r\n                <SelectItem value=\"Coleção de cartas\">Coleção de cartas</SelectItem>\r\n                <SelectItem value=\"Trades\">Trades</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!deckName || !format || !canSaveData || isCreating}\r\n            className=\"w-full bg-orange-600 hover:bg-orange-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white py-2 px-4 rounded-md font-medium transition-colors\"\r\n          >\r\n            {isCreating ? \"Criando...\" : \"Criar Deck\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDeck;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}