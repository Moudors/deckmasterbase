{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useCallback}from\"react\";import{messageOperations,userOperations}from\"@/lib/supabaseOperations\";import{supabase}from\"@/supabase\";import{ScrollArea}from\"@/components/ui/scroll-area\";import{Button}from\"@/components/ui/button\";import{Badge}from\"@/components/ui/badge\";import{Mail,MailOpen,Trash2,RefreshCw,UserPlus,Check,X}from\"lucide-react\";import{motion,AnimatePresence}from\"framer-motion\";import{format}from\"date-fns\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MessagesPanel(_ref){let{user}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchMessages=useCallback(async()=>{if(!(user!==null&&user!==void 0&&user.id))return;setLoading(true);setError(null);try{const msgs=await messageOperations.getUserMessages(user.id);console.log('[DEBUG] Mensagens recebidas:',msgs);setMessages(msgs);}catch(err){setError(err.message||'Erro ao buscar mensagens');}setLoading(false);},[user===null||user===void 0?void 0:user.id]);useEffect(()=>{fetchMessages();const interval=setInterval(fetchMessages,10000);return()=>clearInterval(interval);},[fetchMessages]);const markAsRead=async messageId=>{await messageOperations.updateMessage(messageId,{read:true});setMessages(prev=>prev.map(m=>m.id===messageId?_objectSpread(_objectSpread({},m),{},{read:true}):m));};const deleteMessage=async messageId=>{await messageOperations.deleteMessage(messageId);setMessages(prev=>prev.filter(m=>m.id!==messageId));};const handleMessageClick=message=>{if(!message.read&&message.type!==\"friend_request\"){markAsRead(message.id);}};// ✅ Aceitar solicitação de amizade\nconst handleAccept=async msg=>{try{// Buscar dados atuais dos usuários\nconsole.log(\"[DEBUG] user.id:\",user.id);console.log(\"[DEBUG] msg.sender_id:\",msg.sender_id);const currentUser=await userOperations.getUser(user.id);const senderUser=await userOperations.getUser(msg.sender_id);console.log(\"[DEBUG] currentUser:\",currentUser);console.log(\"[DEBUG] senderUser:\",senderUser);// MIGRAÇÃO: Adiciona amizade na tabela friendships\nif(!currentUser||!senderUser){throw new Error(\"Usuário não encontrado para amizade\");}// Verifica se já existe amizade\nconst{data:existingFriendship1}=await supabase.from('friendships').select('*').eq('user_id',user.id).eq('friend_id',msg.sender_id).single();const{data:existingFriendship2}=await supabase.from('friendships').select('*').eq('user_id',msg.sender_id).eq('friend_id',user.id).single();// Atualiza ou insere amizade para ambos\nlet err1=null;if(existingFriendship1){const{error}=await supabase.from('friendships').update({status:'accepted'}).eq('user_id',user.id).eq('friend_id',msg.sender_id);err1=error;}else{const{error}=await supabase.from('friendships').insert({user_id:user.id,friend_id:msg.sender_id,status:'accepted',created_at:new Date().toISOString()});err1=error;}let err2=null;if(existingFriendship2){const{error}=await supabase.from('friendships').update({status:'accepted'}).eq('user_id',msg.sender_id).eq('friend_id',user.id);err2=error;}else{const{error}=await supabase.from('friendships').insert({user_id:msg.sender_id,friend_id:user.id,status:'accepted',created_at:new Date().toISOString()});err2=error;}if(err1||err2)throw err1||err2;// atualiza status da mensagem\nawait messageOperations.updateMessage(msg.id,{status:\"accepted\",read:true});setMessages(prev=>prev.filter(m=>m.id!==msg.id));// Forçar reload para garantir atualização da lista de amigos\nif(typeof window!==\"undefined\"&&window.location){setTimeout(()=>window.location.reload(),500);}}catch(err){console.error(\"Erro ao aceitar solicitação:\",err);}};// ❌ Recusar solicitação\nconst handleReject=async msg=>{try{await messageOperations.updateMessage(msg.id,{status:\"rejected\",read:true});setMessages(prev=>prev.filter(m=>m.id!==msg.id));}catch(err){console.error(\"Erro ao recusar solicitação:\",err);}};const unreadCount=messages.filter(m=>!m.read).length;return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Mail,{className:\"w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-white\",children:\"Mensagens\"}),unreadCount>0&&/*#__PURE__*/_jsx(Badge,{className:\"bg-orange-500 text-white px-2 py-0.5 text-xs\",children:unreadCount})]}),/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:fetchMessages,className:\"h-7 w-7 hover:bg-gray-800\",children:/*#__PURE__*/_jsx(RefreshCw,{className:\"w-3 h-3 text-gray-400\"})})]}),/*#__PURE__*/_jsx(ScrollArea,{className:\"h-80 rounded-lg border border-gray-800\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsx(RefreshCw,{className:\"w-6 h-6 animate-spin text-gray-500\"})}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-full text-center p-4\",children:[/*#__PURE__*/_jsx(Mail,{className:\"w-12 h-12 text-red-600 mb-2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm\",children:error})]}):messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-full text-center p-4\",children:[/*#__PURE__*/_jsx(Mail,{className:\"w-12 h-12 text-gray-600 mb-2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm\",children:\"Nenhuma mensagem\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"p-2 space-y-2\",children:/*#__PURE__*/_jsx(AnimatePresence,{mode:\"popLayout\",children:messages.map(message=>/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},exit:{opacity:0,x:-100},onClick:()=>handleMessageClick(message),className:\"p-3 rounded-lg border cursor-pointer group hover:border-orange-500 transition-colors \".concat(message.read?\"bg-gray-800/50 border-gray-700\":\"bg-orange-500/10 border-orange-500/30\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between gap-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 flex-1 min-w-0\",children:[message.type===\"friend_request\"?/*#__PURE__*/_jsx(UserPlus,{className:\"w-4 h-4 text-blue-500 flex-shrink-0\"}):message.read?/*#__PURE__*/_jsx(MailOpen,{className:\"w-4 h-4 text-gray-500 flex-shrink-0\"}):/*#__PURE__*/_jsx(Mail,{className:\"w-4 h-4 text-orange-500 flex-shrink-0\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-white text-sm truncate\",children:message.sender_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 whitespace-nowrap\",children:((_message$created_date,_message$created_date2)=>{let dateValue=((_message$created_date=message.created_date)===null||_message$created_date===void 0?void 0:(_message$created_date2=_message$created_date.toDate)===null||_message$created_date2===void 0?void 0:_message$created_date2.call(_message$created_date))||message.created_date;let dateObj=dateValue?new Date(dateValue):null;if(!dateObj||isNaN(dateObj.getTime()))return\"\";try{return format(dateObj,\"dd/MM HH:mm\");}catch(_unused){return\"\";}})()}),message.type!==\"friend_request\"&&/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"icon\",onClick:e=>{e.stopPropagation();deleteMessage(message.id);},className:\"h-6 w-6 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-900/20 hover:text-red-400\",children:/*#__PURE__*/_jsx(Trash2,{className:\"w-3 h-3\"})})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-300 leading-relaxed mb-2\",children:message.content}),message.type===\"friend_request\"&&message.status===\"pending\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 mt-2\",children:[/*#__PURE__*/_jsxs(Button,{size:\"sm\",className:\"bg-green-600 hover:bg-green-700\",onClick:e=>{e.stopPropagation();handleAccept(message);},children:[/*#__PURE__*/_jsx(Check,{className:\"w-4 h-4 mr-1\"}),\" Aceitar\"]}),/*#__PURE__*/_jsxs(Button,{size:\"sm\",variant:\"destructive\",onClick:e=>{e.stopPropagation();handleReject(message);},children:[/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 mr-1\"}),\" Recusar\"]})]}),message.type===\"friend_request\"&&message.status===\"accepted\"&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-green-400\",children:\"\\u2705 Solicita\\xE7\\xE3o aceita\"}),message.type===\"friend_request\"&&message.status===\"rejected\"&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-red-400\",children:\"\\u274C Solicita\\xE7\\xE3o recusada\"})]},message.id))})})})]});}","map":{"version":3,"names":["React","useEffect","useState","useCallback","messageOperations","userOperations","supabase","ScrollArea","Button","Badge","Mail","MailOpen","Trash2","RefreshCw","UserPlus","Check","X","motion","AnimatePresence","format","jsx","_jsx","jsxs","_jsxs","MessagesPanel","_ref","user","messages","setMessages","loading","setLoading","error","setError","fetchMessages","id","msgs","getUserMessages","console","log","err","message","interval","setInterval","clearInterval","markAsRead","messageId","updateMessage","read","prev","map","m","_objectSpread","deleteMessage","filter","handleMessageClick","type","handleAccept","msg","sender_id","currentUser","getUser","senderUser","Error","data","existingFriendship1","from","select","eq","single","existingFriendship2","err1","update","status","insert","user_id","friend_id","created_at","Date","toISOString","err2","window","location","setTimeout","reload","handleReject","unreadCount","length","className","children","variant","size","onClick","mode","div","initial","opacity","y","animate","exit","x","concat","sender_name","_message$created_date","_message$created_date2","dateValue","created_date","toDate","call","dateObj","isNaN","getTime","_unused","e","stopPropagation","content"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/components/user/MessagesPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { messageOperations, userOperations } from \"@/lib/supabaseOperations\";\r\nimport { supabase } from \"@/supabase\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Mail,\r\n  MailOpen,\r\n  Trash2,\r\n  RefreshCw,\r\n  UserPlus,\r\n  Check,\r\n  X,\r\n} from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default function MessagesPanel({ user }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMessages = useCallback(async () => {\r\n    if (!user?.id) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const msgs = await messageOperations.getUserMessages(user.id);\r\n      console.log('[DEBUG] Mensagens recebidas:', msgs);\r\n      setMessages(msgs);\r\n    } catch (err) {\r\n      setError(err.message || 'Erro ao buscar mensagens');\r\n    }\r\n    setLoading(false);\r\n  }, [user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchMessages]);\r\n\r\n  const markAsRead = async (messageId) => {\r\n    await messageOperations.updateMessage(messageId, { read: true });\r\n    setMessages((prev) =>\r\n      prev.map((m) => (m.id === messageId ? { ...m, read: true } : m))\r\n    );\r\n  };\r\n\r\n  const deleteMessage = async (messageId) => {\r\n    await messageOperations.deleteMessage(messageId);\r\n    setMessages((prev) => prev.filter((m) => m.id !== messageId));\r\n  };\r\n\r\n  const handleMessageClick = (message) => {\r\n    if (!message.read && message.type !== \"friend_request\") {\r\n      markAsRead(message.id);\r\n    }\r\n  };\r\n\r\n  // ✅ Aceitar solicitação de amizade\r\n  const handleAccept = async (msg) => {\r\n    try {\r\n      // Buscar dados atuais dos usuários\r\n      console.log(\"[DEBUG] user.id:\", user.id);\r\n      console.log(\"[DEBUG] msg.sender_id:\", msg.sender_id);\r\n      const currentUser = await userOperations.getUser(user.id);\r\n      const senderUser = await userOperations.getUser(msg.sender_id);\r\n      console.log(\"[DEBUG] currentUser:\", currentUser);\r\n      console.log(\"[DEBUG] senderUser:\", senderUser);\r\n\r\n      // MIGRAÇÃO: Adiciona amizade na tabela friendships\r\n      if (!currentUser || !senderUser) {\r\n        throw new Error(\"Usuário não encontrado para amizade\");\r\n      }\r\n\r\n      // Verifica se já existe amizade\r\n      const { data: existingFriendship1 } = await supabase\r\n        .from('friendships')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .eq('friend_id', msg.sender_id)\r\n        .single();\r\n      const { data: existingFriendship2 } = await supabase\r\n        .from('friendships')\r\n        .select('*')\r\n        .eq('user_id', msg.sender_id)\r\n        .eq('friend_id', user.id)\r\n        .single();\r\n\r\n      // Atualiza ou insere amizade para ambos\r\n      let err1 = null;\r\n      if (existingFriendship1) {\r\n        const { error } = await supabase\r\n          .from('friendships')\r\n          .update({ status: 'accepted' })\r\n          .eq('user_id', user.id)\r\n          .eq('friend_id', msg.sender_id);\r\n        err1 = error;\r\n      } else {\r\n        const { error } = await supabase\r\n          .from('friendships')\r\n          .insert({\r\n            user_id: user.id,\r\n            friend_id: msg.sender_id,\r\n            status: 'accepted',\r\n            created_at: new Date().toISOString()\r\n          });\r\n        err1 = error;\r\n      }\r\n\r\n      let err2 = null;\r\n      if (existingFriendship2) {\r\n        const { error } = await supabase\r\n          .from('friendships')\r\n          .update({ status: 'accepted' })\r\n          .eq('user_id', msg.sender_id)\r\n          .eq('friend_id', user.id);\r\n        err2 = error;\r\n      } else {\r\n        const { error } = await supabase\r\n          .from('friendships')\r\n          .insert({\r\n            user_id: msg.sender_id,\r\n            friend_id: user.id,\r\n            status: 'accepted',\r\n            created_at: new Date().toISOString()\r\n          });\r\n        err2 = error;\r\n      }\r\n      if (err1 || err2) throw err1 || err2;\r\n\r\n      // atualiza status da mensagem\r\n      await messageOperations.updateMessage(msg.id, {\r\n        status: \"accepted\",\r\n        read: true,\r\n      });\r\n\r\n      setMessages((prev) => prev.filter((m) => m.id !== msg.id));\r\n\r\n      // Forçar reload para garantir atualização da lista de amigos\r\n      if (typeof window !== \"undefined\" && window.location) {\r\n        setTimeout(() => window.location.reload(), 500);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao aceitar solicitação:\", err);\r\n    }\r\n  };\r\n\r\n  // ❌ Recusar solicitação\r\n  const handleReject = async (msg) => {\r\n    try {\r\n      await messageOperations.updateMessage(msg.id, {\r\n        status: \"rejected\",\r\n        read: true,\r\n      });\r\n\r\n      setMessages((prev) => prev.filter((m) => m.id !== msg.id));\r\n    } catch (err) {\r\n      console.error(\"Erro ao recusar solicitação:\", err);\r\n    }\r\n  };\r\n\r\n  const unreadCount = messages.filter((m) => !m.read).length;\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex items-center justify-between mb-3\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <Mail className=\"w-4 h-4 text-gray-400\" />\r\n          <h3 className=\"font-semibold text-white\">Mensagens</h3>\r\n          {unreadCount > 0 && (\r\n            <Badge className=\"bg-orange-500 text-white px-2 py-0.5 text-xs\">\r\n              {unreadCount}\r\n            </Badge>\r\n          )}\r\n        </div>\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          onClick={fetchMessages}\r\n          className=\"h-7 w-7 hover:bg-gray-800\"\r\n        >\r\n          <RefreshCw className=\"w-3 h-3 text-gray-400\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <ScrollArea className=\"h-80 rounded-lg border border-gray-800\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <RefreshCw className=\"w-6 h-6 animate-spin text-gray-500\" />\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-center p-4\">\r\n            <Mail className=\"w-12 h-12 text-red-600 mb-2\" />\r\n            <p className=\"text-red-500 text-sm\">{error}</p>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-center p-4\">\r\n            <Mail className=\"w-12 h-12 text-gray-600 mb-2\" />\r\n            <p className=\"text-gray-500 text-sm\">Nenhuma mensagem</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-2 space-y-2\">\r\n            <AnimatePresence mode=\"popLayout\">\r\n              {messages.map((message) => (\r\n                <motion.div\r\n                  key={message.id}\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  exit={{ opacity: 0, x: -100 }}\r\n                  onClick={() => handleMessageClick(message)}\r\n                  className={`p-3 rounded-lg border cursor-pointer group hover:border-orange-500 transition-colors ${\r\n                    message.read\r\n                      ? \"bg-gray-800/50 border-gray-700\"\r\n                      : \"bg-orange-500/10 border-orange-500/30\"\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-start justify-between gap-2 mb-2\">\r\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                      {message.type === \"friend_request\" ? (\r\n                        <UserPlus className=\"w-4 h-4 text-blue-500 flex-shrink-0\" />\r\n                      ) : message.read ? (\r\n                        <MailOpen className=\"w-4 h-4 text-gray-500 flex-shrink-0\" />\r\n                      ) : (\r\n                        <Mail className=\"w-4 h-4 text-orange-500 flex-shrink-0\" />\r\n                      )}\r\n                      <span className=\"font-medium text-white text-sm truncate\">\r\n                        {message.sender_name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n                        {(() => {\r\n                          let dateValue = message.created_date?.toDate?.() || message.created_date;\r\n                          let dateObj = dateValue ? new Date(dateValue) : null;\r\n                          if (!dateObj || isNaN(dateObj.getTime())) return \"\";\r\n                          try {\r\n                            return format(dateObj, \"dd/MM HH:mm\");\r\n                          } catch {\r\n                            return \"\";\r\n                          }\r\n                        })()}\r\n                      </span>\r\n                      {message.type !== \"friend_request\" && (\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            deleteMessage(message.id);\r\n                          }}\r\n                          className=\"h-6 w-6 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-900/20 hover:text-red-400\"\r\n                        >\r\n                          <Trash2 className=\"w-3 h-3\" />\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p className=\"text-sm text-gray-300 leading-relaxed mb-2\">\r\n                    {message.content}\r\n                  </p>\r\n\r\n                  {/* ✅ Botões de aceitar/recusar solicitação */}\r\n                  {message.type === \"friend_request\" &&\r\n                    message.status === \"pending\" && (\r\n                      <div className=\"flex gap-2 mt-2\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          className=\"bg-green-600 hover:bg-green-700\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleAccept(message);\r\n                          }}\r\n                        >\r\n                          <Check className=\"w-4 h-4 mr-1\" /> Aceitar\r\n                        </Button>\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"destructive\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleReject(message);\r\n                          }}\r\n                        >\r\n                          <X className=\"w-4 h-4 mr-1\" /> Recusar\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n\r\n                  {message.type === \"friend_request\" &&\r\n                    message.status === \"accepted\" && (\r\n                      <p className=\"text-xs text-green-400\">\r\n                        ✅ Solicitação aceita\r\n                      </p>\r\n                    )}\r\n\r\n                  {message.type === \"friend_request\" &&\r\n                    message.status === \"rejected\" && (\r\n                      <p className=\"text-xs text-red-400\">\r\n                        ❌ Solicitação recusada\r\n                      </p>\r\n                    )}\r\n                </motion.div>\r\n              ))}\r\n            </AnimatePresence>\r\n          </div>\r\n        )}\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}