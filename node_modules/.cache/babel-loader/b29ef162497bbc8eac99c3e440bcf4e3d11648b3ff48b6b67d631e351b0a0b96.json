{"ast":null,"code":"import _objectSpread from\"C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,memo,useEffect}from\"react\";import{motion}from\"framer-motion\";import{useCardSwipe}from\"./CardSwipeHandler\";import{Button}from\"@/components/ui/button\";import CardZoomModal from\"./CardZoomModal\";import{useImageCache}from\"@/hooks/useImageCache\";// Map para preservar o estado das faces entre re-renders\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const faceStateMap=new Map();function CardGridItem(_ref){var _displayImageUrl;let{card,onToggleAcquired,onOfferTrade,onShowArtSelector,onChangeQuantity,// pode ser usado se quiser abrir DeleteQuantityDialog direto\nisViewOnly=false,currentUserId,deckOwnerId,isSelectionMode=false,isSelected=false,onToggleSelect,onDoubleClick,// Para abrir modal de trade\nhasGreenBorder=false,// Indica que amigos querem essa carta\nonLongPress// Custom long press handler (para deck de amigo)\n}=_ref;const[isTransparent,setIsTransparent]=useState(false);const[showZoom,setShowZoom]=useState(false);// 🔍 DEBUG: Verificar se está recebendo hasGreenBorder\nuseEffect(()=>{if(hasGreenBorder){console.log(\"🟢 CardGridItem - CARTA COM GREEN BORDER:\",{cardName:card.card_name,scryfallId:card.scryfall_id,hasGreenBorder,isSelectionMode});}},[hasGreenBorder,card.card_name,card.scryfall_id,isSelectionMode]);// Usar um estado persistente para currentFaceIndex baseado no ID da carta\nconst cardKey=\"\".concat(card.id,\"-\").concat(card.scryfall_id);const[currentFaceIndex,setCurrentFaceIndex]=useState(()=>{return faceStateMap.get(cardKey)||0;});// Atualizar o map quando o estado muda\nuseEffect(()=>{faceStateMap.set(cardKey,currentFaceIndex);},[cardKey,currentFaceIndex]);// 🔄 Long press manual com timeout\nconst longPressTimer=useRef(null);const longPressTriggered=useRef(false);const handlePressStart=e=>{if(isViewOnly||isSelectionMode)return;longPressTriggered.current=false;console.log('[DEBUG] Long press iniciado',{hasCustomHandler:!!onLongPress});longPressTimer.current=setTimeout(()=>{console.log('[DEBUG] Long press detectado',{hasCustomHandler:!!onLongPress});longPressTriggered.current=true;// Se tem handler customizado (deck de amigo), usa ele\nif(onLongPress){onLongPress(card);}else{// Senão, abre o seletor de arte (comportamento padrão)\nonShowArtSelector===null||onShowArtSelector===void 0?void 0:onShowArtSelector(card);}},500);// 500ms\n};const handlePressEnd=e=>{if(longPressTimer.current){clearTimeout(longPressTimer.current);longPressTimer.current=null;}if(longPressTriggered.current){console.log('[DEBUG] Long press completado');e.preventDefault();e.stopPropagation();}};const handlePressCancel=()=>{if(longPressTimer.current){console.log('[DEBUG] Long press cancelado');clearTimeout(longPressTimer.current);longPressTimer.current=null;}longPressTriggered.current=false;};// Limpar timer ao desmontar\nuseEffect(()=>{return()=>{if(longPressTimer.current){clearTimeout(longPressTimer.current);}};},[]);// 🔄 Determinar se é carta dupla face\nconst hasMultipleFaces=card.card_faces&&card.card_faces.length>1;const currentFace=hasMultipleFaces?card.card_faces[currentFaceIndex]:card;// DEBUG COMPLETO\nif(hasMultipleFaces){console.log(\"� DEBUG FACES COMPLETO:\",{cardName:card.card_name,currentFaceIndex,allFaces:card.card_faces,currentFace:currentFace,cardImageUrl:card.image_url});}// �🖼️ Lógica de URL de imagem para diferentes tipos de cartas dupla face\nlet displayImageUrl;if(hasMultipleFaces){var _currentFace$image_ur,_currentFace$image_ur2,_currentFace$image_ur3;// Para cartas dupla face, tentar pegar a imagem da face atual\n// Suporta diferentes layouts do Scryfall (transform, modal_dfc, etc)\ndisplayImageUrl=((_currentFace$image_ur=currentFace.image_uris)===null||_currentFace$image_ur===void 0?void 0:_currentFace$image_ur.normal)||(// Scryfall padrão (cada face tem image_uris)\n(_currentFace$image_ur2=currentFace.image_uris)===null||_currentFace$image_ur2===void 0?void 0:_currentFace$image_ur2.large)||((_currentFace$image_ur3=currentFace.image_uris)===null||_currentFace$image_ur3===void 0?void 0:_currentFace$image_ur3.png)||currentFace.image_url||// Backup: image_url salva no banco\ncard.image_url;// Fallback: imagem principal do card\n}else{var _card$image_uris,_card$image_uris2,_card$image_uris3;// Para cartas normais, prioriza image_url (pode ter sido alterado via ArtSelector)\ndisplayImageUrl=card.image_url||((_card$image_uris=card.image_uris)===null||_card$image_uris===void 0?void 0:_card$image_uris.normal)||((_card$image_uris2=card.image_uris)===null||_card$image_uris2===void 0?void 0:_card$image_uris2.large)||((_card$image_uris3=card.image_uris)===null||_card$image_uris3===void 0?void 0:_card$image_uris3.png);}// 🖼️ Cache de imagem local (IndexedDB)\nconst cachedImageUrl=useImageCache(displayImageUrl);const{handleTouchStart,handleTouchEnd}=useCardSwipe({onSwipeRight:()=>{if(!isSelectionMode)setShowZoom(true);},onDoubleTap:()=>{handleDoubleClick();}});// Long press para menu de arte - REMOVIDO (usando manual agora)\n// removido: funções antigas de touch\n// 🔄 Duplo clique: alterna transparência, trade, ou modal de trade\nconst handleDoubleClick=e=>{// Se for prop onDoubleClick (Trade), usa ela\nif(onDoubleClick){if(e){e.preventDefault();e.stopPropagation();}onDoubleClick(card);return;}// Comportamento padrão\nif(deckOwnerId===currentUserId){setIsTransparent(prev=>!prev);onToggleAcquired===null||onToggleAcquired===void 0?void 0:onToggleAcquired(_objectSpread(_objectSpread({},card),{},{acquired:!card.acquired}));}else{onOfferTrade===null||onOfferTrade===void 0?void 0:onOfferTrade(card);}};// 🔄 Alternar face da carta dupla face\n// Alterna a face da carta dupla face\nconst toggleFace=()=>{var _card$card_faces;console.log(\"🔄 toggleFace chamado\",{hasMultipleFaces,currentFaceIndex,totalFaces:(_card$card_faces=card.card_faces)===null||_card$card_faces===void 0?void 0:_card$card_faces.length,cardName:card.card_name});if(hasMultipleFaces){const newIndex=(currentFaceIndex+1)%card.card_faces.length;console.log(\"🔄 Mudando para face:\",newIndex);setCurrentFaceIndex(newIndex);}};// 🔄 Clique longo: abre direto o seletor de arte\n// (Removido: duplicata de bindLongPress)\n// 🔍 DEBUG DIRETO NO RENDER\nconsole.log(\"🔍 CardGridItem RENDER:\",{cardName:card.card_name,hasGreenBorder,willRenderGreenCircle:hasGreenBorder===true,hasGreenBorderType:typeof hasGreenBorder,hasGreenBorderValue:JSON.stringify(hasGreenBorder)});return/*#__PURE__*/_jsxs(_Fragment,{children:[showZoom&&/*#__PURE__*/_jsx(CardZoomModal,{card:card,onClose:()=>setShowZoom(false)}),/*#__PURE__*/_jsxs(motion.div,{onTouchStart:handleTouchStart,onTouchEnd:handleTouchEnd,initial:{opacity:0,scale:0.9},animate:{opacity:1,scale:1},exit:{opacity:0,scale:0.9},className:\"relative group\",onDoubleClick:hasGreenBorder?handleDoubleClick:undefined,children:[hasGreenBorder&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:e=>{e.stopPropagation();e.preventDefault();onDoubleClick===null||onDoubleClick===void 0?void 0:onDoubleClick(card);},\"aria-label\":\"Ver amigos interessados\",className:\"absolute top-1 left-1 z-50 w-6 h-6 rounded-full bg-green-500 bg-opacity-80 border-2 border-white shadow-lg hover:bg-green-600 hover:bg-opacity-90 hover:scale-110 active:scale-95 transition-all cursor-pointer focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-offset-1\",style:{boxShadow:'0 0 0 2px white, 0 0 10px rgba(34, 197, 94, 0.5)',pointerEvents:'auto'},title:\"Clique para ver quem quer essa carta\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Amigos querem essa carta\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative rounded-lg overflow-hidden cursor-pointer focus:outline-none focus:ring-0\",onMouseDown:handlePressStart,onMouseUp:handlePressEnd,onMouseLeave:handlePressCancel,onTouchStart:handlePressStart,onTouchEnd:handlePressEnd,onTouchCancel:handlePressCancel,children:[isSelectionMode&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-2 left-2 z-20\",children:/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"icon\",onClick:e=>{e.stopPropagation();onToggleSelect===null||onToggleSelect===void 0?void 0:onToggleSelect(card.id);},\"aria-pressed\":isSelected,\"aria-label\":isSelected?\"Desmarcar carta\":\"Selecionar carta para remoção\",className:\"w-7 h-7 rounded-full p-0 border-2 transition-all focus:ring-0 focus:ring-offset-0 \".concat(isSelected?\"bg-gray-500/60 border-gray-400\":\"bg-gray-500/20 border-gray-500\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:isSelected?\"Selecionado\":\"Não selecionado\"})})}),/*#__PURE__*/_jsx(\"img\",{src:cachedImageUrl||displayImageUrl,alt:currentFace.name||card.card_name,className:\"card-image w-full h-auto rounded-lg transition-opacity duration-300 \".concat(isTransparent?\"opacity-50\":\"opacity-100\"),draggable:false,onContextMenu:e=>e.preventDefault(),loading:\"lazy\"},\"\".concat(card.id,\"-\").concat(currentFaceIndex,\"-\").concat((_displayImageUrl=displayImageUrl)===null||_displayImageUrl===void 0?void 0:_displayImageUrl.split('/').pop(),\"-\").concat(card.updated_at||card.scryfall_id)),hasMultipleFaces&&/*#__PURE__*/_jsxs(\"button\",{onClick:e=>{e.preventDefault();e.stopPropagation();console.log(\"🔘 Botão de face clicado!\");toggleFace();},className:\"absolute top-2 right-2 w-7 h-7 bg-orange-500/90 hover:bg-orange-500 text-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110 active:scale-95 z-10\",\"aria-label\":\"Alternar face da carta\",title:\"Face \".concat(currentFaceIndex+1,\"/\").concat(card.card_faces.length,\": \").concat(currentFace.name||'Face '+(currentFaceIndex+1)),\"data-card-id\":card.id,\"data-face-index\":currentFaceIndex,\"data-testid\":\"dual-face-toggle\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-3 h-3\",fill:\"none\",strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"absolute -bottom-1 -right-1 w-3 h-3 bg-white text-orange-500 text-xs rounded-full flex items-center justify-center font-bold leading-none\",children:currentFaceIndex+1})]}),card.quantity>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bottom-2 right-2 bg-black/80 text-white px-2 py-1 rounded-full text-xs font-bold\",children:[\"x\",card.quantity]})]})]})]});}// Memoiza componente - só re-renderiza se props essenciais mudarem\nexport default/*#__PURE__*/memo(CardGridItem,(prevProps,nextProps)=>{return prevProps.card.id===nextProps.card.id&&prevProps.card.quantity===nextProps.card.quantity&&prevProps.card.acquired===nextProps.card.acquired&&prevProps.card.image_url===nextProps.card.image_url&&JSON.stringify(prevProps.card.card_faces)===JSON.stringify(nextProps.card.card_faces)&&prevProps.isSelected===nextProps.isSelected&&prevProps.isSelectionMode===nextProps.isSelectionMode&&prevProps.hasGreenBorder===nextProps.hasGreenBorder// ✅ CRÍTICO: Verifica green border!\n;});","map":{"version":3,"names":["React","useState","useRef","memo","useEffect","motion","useCardSwipe","Button","CardZoomModal","useImageCache","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","faceStateMap","Map","CardGridItem","_ref","_displayImageUrl","card","onToggleAcquired","onOfferTrade","onShowArtSelector","onChangeQuantity","isViewOnly","currentUserId","deckOwnerId","isSelectionMode","isSelected","onToggleSelect","onDoubleClick","hasGreenBorder","onLongPress","isTransparent","setIsTransparent","showZoom","setShowZoom","console","log","cardName","card_name","scryfallId","scryfall_id","cardKey","concat","id","currentFaceIndex","setCurrentFaceIndex","get","set","longPressTimer","longPressTriggered","handlePressStart","e","current","hasCustomHandler","setTimeout","handlePressEnd","clearTimeout","preventDefault","stopPropagation","handlePressCancel","hasMultipleFaces","card_faces","length","currentFace","allFaces","cardImageUrl","image_url","displayImageUrl","_currentFace$image_ur","_currentFace$image_ur2","_currentFace$image_ur3","image_uris","normal","large","png","_card$image_uris","_card$image_uris2","_card$image_uris3","cachedImageUrl","handleTouchStart","handleTouchEnd","onSwipeRight","onDoubleTap","handleDoubleClick","prev","_objectSpread","acquired","toggleFace","_card$card_faces","totalFaces","newIndex","willRenderGreenCircle","hasGreenBorderType","hasGreenBorderValue","JSON","stringify","children","onClose","div","onTouchStart","onTouchEnd","initial","opacity","scale","animate","exit","className","undefined","type","onClick","style","boxShadow","pointerEvents","title","onMouseDown","onMouseUp","onMouseLeave","onTouchCancel","size","src","alt","name","draggable","onContextMenu","loading","split","pop","updated_at","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","quantity","prevProps","nextProps"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/components/deck/CardGridItem.jsx"],"sourcesContent":["import React, { useState, useRef, memo, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useCardSwipe } from \"./CardSwipeHandler\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport CardZoomModal from \"./CardZoomModal\";\r\nimport { useImageCache } from \"@/hooks/useImageCache\";\r\n\r\n// Map para preservar o estado das faces entre re-renders\r\nconst faceStateMap = new Map();\r\n\r\nfunction CardGridItem({ \r\n  card, \r\n  onToggleAcquired, \r\n  onOfferTrade,\r\n  onShowArtSelector,\r\n  onChangeQuantity, // pode ser usado se quiser abrir DeleteQuantityDialog direto\r\n  isViewOnly = false,\r\n  currentUserId,\r\n  deckOwnerId,\r\n  isSelectionMode = false,\r\n  isSelected = false,\r\n  onToggleSelect,\r\n  onDoubleClick, // Para abrir modal de trade\r\n  hasGreenBorder = false, // Indica que amigos querem essa carta\r\n  onLongPress // Custom long press handler (para deck de amigo)\r\n}) {\r\n  const [isTransparent, setIsTransparent] = useState(false);\r\n  const [showZoom, setShowZoom] = useState(false);\r\n  \r\n  // 🔍 DEBUG: Verificar se está recebendo hasGreenBorder\r\n  useEffect(() => {\r\n    if (hasGreenBorder) {\r\n      console.log(\"🟢 CardGridItem - CARTA COM GREEN BORDER:\", {\r\n        cardName: card.card_name,\r\n        scryfallId: card.scryfall_id,\r\n        hasGreenBorder,\r\n        isSelectionMode\r\n      });\r\n    }\r\n  }, [hasGreenBorder, card.card_name, card.scryfall_id, isSelectionMode]);\r\n  \r\n  // Usar um estado persistente para currentFaceIndex baseado no ID da carta\r\n  const cardKey = `${card.id}-${card.scryfall_id}`;\r\n  const [currentFaceIndex, setCurrentFaceIndex] = useState(() => {\r\n    return faceStateMap.get(cardKey) || 0;\r\n  });\r\n\r\n  // Atualizar o map quando o estado muda\r\n  useEffect(() => {\r\n    faceStateMap.set(cardKey, currentFaceIndex);\r\n  }, [cardKey, currentFaceIndex]);\r\n\r\n  // 🔄 Long press manual com timeout\r\n  const longPressTimer = useRef(null);\r\n  const longPressTriggered = useRef(false);\r\n\r\n  const handlePressStart = (e) => {\r\n    if (isViewOnly || isSelectionMode) return;\r\n    \r\n    longPressTriggered.current = false;\r\n    console.log('[DEBUG] Long press iniciado', { hasCustomHandler: !!onLongPress });\r\n    \r\n    longPressTimer.current = setTimeout(() => {\r\n      console.log('[DEBUG] Long press detectado', { hasCustomHandler: !!onLongPress });\r\n      longPressTriggered.current = true;\r\n      \r\n      // Se tem handler customizado (deck de amigo), usa ele\r\n      if (onLongPress) {\r\n        onLongPress(card);\r\n      } else {\r\n        // Senão, abre o seletor de arte (comportamento padrão)\r\n        onShowArtSelector?.(card);\r\n      }\r\n    }, 500); // 500ms\r\n  };\r\n\r\n  const handlePressEnd = (e) => {\r\n    if (longPressTimer.current) {\r\n      clearTimeout(longPressTimer.current);\r\n      longPressTimer.current = null;\r\n    }\r\n    \r\n    if (longPressTriggered.current) {\r\n      console.log('[DEBUG] Long press completado');\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  };\r\n\r\n  const handlePressCancel = () => {\r\n    if (longPressTimer.current) {\r\n      console.log('[DEBUG] Long press cancelado');\r\n      clearTimeout(longPressTimer.current);\r\n      longPressTimer.current = null;\r\n    }\r\n    longPressTriggered.current = false;\r\n  };\r\n\r\n  // Limpar timer ao desmontar\r\n  useEffect(() => {\r\n    return () => {\r\n      if (longPressTimer.current) {\r\n        clearTimeout(longPressTimer.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 🔄 Determinar se é carta dupla face\r\n  const hasMultipleFaces = card.card_faces && card.card_faces.length > 1;\r\n  const currentFace = hasMultipleFaces ? card.card_faces[currentFaceIndex] : card;\r\n  \r\n  // DEBUG COMPLETO\r\n  if (hasMultipleFaces) {\r\n    console.log(\"� DEBUG FACES COMPLETO:\", {\r\n      cardName: card.card_name,\r\n      currentFaceIndex,\r\n      allFaces: card.card_faces,\r\n      currentFace: currentFace,\r\n      cardImageUrl: card.image_url\r\n    });\r\n  }\r\n  \r\n  // �🖼️ Lógica de URL de imagem para diferentes tipos de cartas dupla face\r\n  let displayImageUrl;\r\n  \r\n  if (hasMultipleFaces) {\r\n    // Para cartas dupla face, tentar pegar a imagem da face atual\r\n    // Suporta diferentes layouts do Scryfall (transform, modal_dfc, etc)\r\n    displayImageUrl = \r\n      currentFace.image_uris?.normal ||       // Scryfall padrão (cada face tem image_uris)\r\n      currentFace.image_uris?.large ||\r\n      currentFace.image_uris?.png ||\r\n      currentFace.image_url ||                 // Backup: image_url salva no banco\r\n      card.image_url;                          // Fallback: imagem principal do card\r\n  } else {\r\n    // Para cartas normais, prioriza image_url (pode ter sido alterado via ArtSelector)\r\n    displayImageUrl = \r\n      card.image_url || \r\n      card.image_uris?.normal || \r\n      card.image_uris?.large ||\r\n      card.image_uris?.png;\r\n  }\r\n\r\n  // 🖼️ Cache de imagem local (IndexedDB)\r\n  const cachedImageUrl = useImageCache(displayImageUrl);\r\n    const { handleTouchStart, handleTouchEnd } = useCardSwipe({\r\n      onSwipeRight: () => {\r\n        if (!isSelectionMode) setShowZoom(true);\r\n      },\r\n      onDoubleTap: () => {\r\n        handleDoubleClick();\r\n      }\r\n    });\r\n  \r\n    // Long press para menu de arte - REMOVIDO (usando manual agora)\r\n\r\n  // removido: funções antigas de touch\r\n\r\n  // 🔄 Duplo clique: alterna transparência, trade, ou modal de trade\r\n  const handleDoubleClick = (e) => {\r\n    // Se for prop onDoubleClick (Trade), usa ela\r\n    if (onDoubleClick) {\r\n      if (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n      onDoubleClick(card);\r\n      return;\r\n    }\r\n    \r\n    // Comportamento padrão\r\n    if (deckOwnerId === currentUserId) {\r\n      setIsTransparent(prev => !prev);\r\n      onToggleAcquired?.({ ...card, acquired: !card.acquired });\r\n    } else {\r\n      onOfferTrade?.(card);\r\n    }\r\n  };\r\n\r\n  // 🔄 Alternar face da carta dupla face\r\n  // Alterna a face da carta dupla face\r\n  const toggleFace = () => {\r\n    console.log(\"🔄 toggleFace chamado\", { \r\n      hasMultipleFaces, \r\n      currentFaceIndex, \r\n      totalFaces: card.card_faces?.length,\r\n      cardName: card.card_name \r\n    });\r\n    if (hasMultipleFaces) {\r\n      const newIndex = (currentFaceIndex + 1) % card.card_faces.length;\r\n      console.log(\"🔄 Mudando para face:\", newIndex);\r\n      setCurrentFaceIndex(newIndex);\r\n    }\r\n  };\r\n\r\n  // 🔄 Clique longo: abre direto o seletor de arte\r\n  // (Removido: duplicata de bindLongPress)\r\n\r\n  // 🔍 DEBUG DIRETO NO RENDER\r\n  console.log(\"🔍 CardGridItem RENDER:\", {\r\n    cardName: card.card_name,\r\n    hasGreenBorder,\r\n    willRenderGreenCircle: hasGreenBorder === true,\r\n    hasGreenBorderType: typeof hasGreenBorder,\r\n    hasGreenBorderValue: JSON.stringify(hasGreenBorder)\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Modal de Zoom */}\r\n      {showZoom && (\r\n        <CardZoomModal\r\n          card={card}\r\n          onClose={() => setShowZoom(false)}\r\n        />\r\n      )}\r\n\r\n      <motion.div\r\n  onTouchStart={handleTouchStart}\r\n  onTouchEnd={handleTouchEnd}\r\n  initial={{ opacity: 0, scale: 0.9 }}\r\n  animate={{ opacity: 1, scale: 1 }}\r\n  exit={{ opacity: 0, scale: 0.9 }}\r\n  className=\"relative group\"\r\n  onDoubleClick={hasGreenBorder ? handleDoubleClick : undefined}\r\n      >\r\n        {/* Bolinha verde - indica que amigos querem esta carta */}\r\n        {hasGreenBorder && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              onDoubleClick?.(card);\r\n            }}\r\n            aria-label=\"Ver amigos interessados\"\r\n            className=\"absolute top-1 left-1 z-50 w-6 h-6 rounded-full bg-green-500 bg-opacity-80 border-2 border-white shadow-lg hover:bg-green-600 hover:bg-opacity-90 hover:scale-110 active:scale-95 transition-all cursor-pointer focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-offset-1\"\r\n            style={{ \r\n              boxShadow: '0 0 0 2px white, 0 0 10px rgba(34, 197, 94, 0.5)',\r\n              pointerEvents: 'auto'\r\n            }}\r\n            title=\"Clique para ver quem quer essa carta\"\r\n          >\r\n            <span className=\"sr-only\">Amigos querem essa carta</span>\r\n          </button>\r\n        )}\r\n\r\n      <div \r\n        className=\"relative rounded-lg overflow-hidden cursor-pointer focus:outline-none focus:ring-0\"\r\n        onMouseDown={handlePressStart}\r\n        onMouseUp={handlePressEnd}\r\n        onMouseLeave={handlePressCancel}\r\n        onTouchStart={handlePressStart}\r\n        onTouchEnd={handlePressEnd}\r\n        onTouchCancel={handlePressCancel}\r\n      >\r\n        {/* Botão de seleção para modo de deleção */}\r\n        {isSelectionMode && (\r\n          <div className=\"absolute top-2 left-2 z-20\">\r\n            <Button\r\n              type=\"button\"\r\n              size=\"icon\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onToggleSelect?.(card.id);\r\n              }}\r\n              aria-pressed={isSelected}\r\n              aria-label={isSelected ? \"Desmarcar carta\" : \"Selecionar carta para remoção\"}\r\n              className={`w-7 h-7 rounded-full p-0 border-2 transition-all focus:ring-0 focus:ring-offset-0 ${\r\n                isSelected\r\n                  ? \"bg-gray-500/60 border-gray-400\"\r\n                  : \"bg-gray-500/20 border-gray-500\"\r\n              }`}\r\n            >\r\n              <span className=\"sr-only\">{isSelected ? \"Selecionado\" : \"Não selecionado\"}</span>\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <img\r\n          key={`${card.id}-${currentFaceIndex}-${displayImageUrl?.split('/').pop()}-${card.updated_at || card.scryfall_id}`}\r\n          src={cachedImageUrl || displayImageUrl}\r\n          alt={currentFace.name || card.card_name}\r\n          className={`card-image w-full h-auto rounded-lg transition-opacity duration-300 ${\r\n            isTransparent ? \"opacity-50\" : \"opacity-100\"\r\n          }`}\r\n          draggable={false}\r\n          onContextMenu={(e) => e.preventDefault()}\r\n          loading=\"lazy\"\r\n        />\r\n\r\n        {/* Botão de alternar face (canto superior direito) */}\r\n        {hasMultipleFaces && (\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              console.log(\"🔘 Botão de face clicado!\");\r\n              toggleFace();\r\n            }}\r\n            className=\"absolute top-2 right-2 w-7 h-7 bg-orange-500/90 hover:bg-orange-500 text-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110 active:scale-95 z-10\"\r\n            aria-label=\"Alternar face da carta\"\r\n            title={`Face ${currentFaceIndex + 1}/${card.card_faces.length}: ${currentFace.name || 'Face ' + (currentFaceIndex + 1)}`}\r\n            data-card-id={card.id}\r\n            data-face-index={currentFaceIndex}\r\n            data-testid=\"dual-face-toggle\"\r\n          >\r\n            <svg\r\n              className=\"w-3 h-3\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n            </svg>\r\n            <span className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-white text-orange-500 text-xs rounded-full flex items-center justify-center font-bold leading-none\">\r\n              {currentFaceIndex + 1}\r\n            </span>\r\n          </button>\r\n        )}\r\n\r\n        {/* Quantidade */}\r\n        {card.quantity > 1 && (\r\n          <div className=\"absolute bottom-2 right-2 bg-black/80 text-white px-2 py-1 rounded-full text-xs font-bold\">\r\n            x{card.quantity}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Memoiza componente - só re-renderiza se props essenciais mudarem\r\nexport default memo(CardGridItem, (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.card.id === nextProps.card.id &&\r\n    prevProps.card.quantity === nextProps.card.quantity &&\r\n    prevProps.card.acquired === nextProps.card.acquired &&\r\n    prevProps.card.image_url === nextProps.card.image_url &&\r\n    JSON.stringify(prevProps.card.card_faces) === JSON.stringify(nextProps.card.card_faces) &&\r\n    prevProps.isSelected === nextProps.isSelected &&\r\n    prevProps.isSelectionMode === nextProps.isSelectionMode &&\r\n    prevProps.hasGreenBorder === nextProps.hasGreenBorder // ✅ CRÍTICO: Verifica green border!\r\n  );\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}