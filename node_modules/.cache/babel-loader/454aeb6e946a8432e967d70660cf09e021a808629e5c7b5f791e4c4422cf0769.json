{"ast":null,"code":"// src/pages/Home.jsx\nimport React,{useState,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import{useQueryClient}from\"@tanstack/react-query\";import{useDecks}from\"@/lib/useUnifiedDecks\";import{useConnectivity}from\"@/lib/connectivityManager\";import{useAuthState}from\"@/hooks/useAuthState\";import{useUserProfile}from\"@/hooks/useUserProfile\";import{Search,WifiOff,AlertCircle}from\"lucide-react\";import{useDebounce}from\"@/hooks/useDebounce\";import{Alert,AlertDescription}from\"@/components/ui/alert\";// 🔗 Import do menu de usuário (popup de perfil)\nimport UserMenu from\"@/components/user/UserMenu\";// ✅ Import do componente de busca de regras\nimport SearchRulesDialog from\"@/components/rules/SearchRulesDialog\";// 🔍 Import do componente de busca avançada\nimport AdvancedSearchPage from\"@/components/advanced-search/AdvancedSearchPage\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const navigate=useNavigate();const location=useLocation();const[user]=useAuthState();const{profile,loading:profileLoading,error:profileError}=useUserProfile(user);const connectivity=useConnectivity();// Novo sistema unificado de decks\nconst{decks,isLoading,error:decksError,createDeck,updateDeck,deleteDeck,syncDecks,refetch,createError,updateError,deleteError}=useDecks();const queryClient=useQueryClient();// Estados para funcionalidades da UI\nconst[selectedDeck,setSelectedDeck]=useState(null);const[deckOptionsOpen,setDeckOptionsOpen]=useState(false);const[renameDialogOpen,setRenameDialogOpen]=useState(false);const[deleteDialogOpen,setDeleteDialogOpen]=useState(false);const[formatDialogOpen,setFormatDialogOpen]=useState(false);const[newDeckName,setNewDeckName]=useState(\"\");const[newFormat,setNewFormat]=useState(\"\");const[isDeleting,setIsDeleting]=useState(false);const[isExporting,setIsExporting]=useState(false);const[warningMessage,setWarningMessage]=useState(null);// Estados para busca (cartas e capa)\nconst[searchOptionsOpen,setSearchOptionsOpen]=useState(false);const[rulesDialogOpen,setRulesDialogOpen]=useState(false);const[advancedSearchOpen,setAdvancedSearchOpen]=useState(false);const[coverSearchOpen,setCoverSearchOpen]=useState(false);const[deckForCover,setDeckForCover]=useState(null);const[coverSearchTerm,setCoverSearchTerm]=useState(\"\");const[coverSuggestions,setCoverSuggestions]=useState([]);const[loadingSearch,setLoadingSearch]=useState(false);// Hook de debounce para busca de capa\nconst debouncedCoverSearchTerm=useDebounce(coverSearchTerm,500);// Efeito para busca automática de cartas para capa\nuseEffect(()=>{if(debouncedCoverSearchTerm&&coverSearchOpen){handleSearchAutocomplete(debouncedCoverSearchTerm);}},[debouncedCoverSearchTerm,coverSearchOpen]);// Efeito para exibir mensagens de navegação (ex: duplicata de formatos especiais)\nuseEffect(()=>{var _location$state;if((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.message){setWarningMessage(location.state.message);// Limpar o estado da navegação para não mostrar novamente ao recarregar\nwindow.history.replaceState({},document.title);// Auto-limpar mensagem após 5 segundos\nconst timer=setTimeout(()=>{setWarningMessage(null);},5000);return()=>clearTimeout(timer);}},[location.state]);// Computadas\nconst hasDecks=decks&&decks.length>0;const isOfflineMode=!connectivity.canSaveData;// 🔍 Debug logs para identificar problema\nconsole.log(\"🏠 HOME DEBUG:\",{isLoading,decksError,decks:decks?{length:decks.length,items:decks.map(d=>({id:d.id,name:d.name,format:d.format,cover:d.cover_image_url}))}:null,hasDecks,user:user?{id:user.id,email:user.email}:null});// Funções auxiliares\nconst normalizeFormat=format=>{if(!format)return\"Commander\";const lower=format.toLowerCase();if(lower.includes(\"commander\")){if(lower.includes(\"300\"))return\"Commander 300\";if(lower.includes(\"500\"))return\"Commander 500\";return\"Commander\";}return format.charAt(0).toUpperCase()+format.slice(1);};// Função para busca automática de cartas para capa\nconst handleSearchAutocomplete=async searchTerm=>{if(searchTerm.length<2){setCoverSuggestions([]);return;}setLoadingSearch(true);try{// Primeiro buscar autocomplete para nomes\nconst autocompleteResponse=await fetch(\"https://api.scryfall.com/cards/autocomplete?q=\".concat(encodeURIComponent(searchTerm)));if(!autocompleteResponse.ok)throw new Error(\"Erro na busca\");const autocompleteData=await autocompleteResponse.json();const cardNames=autocompleteData.data||[];// Para os primeiros 5 resultados, buscar dados completos para mostrar preview\nconst previewPromises=cardNames.slice(0,5).map(async cardName=>{try{const cardResponse=await fetch(\"https://api.scryfall.com/cards/named?fuzzy=\".concat(encodeURIComponent(cardName)));if(cardResponse.ok){const cardData=await cardResponse.json();return{name:cardName,image_url:getCardImageUrl(cardData,0),// Usar helper para dual-face\nhas_art_crop:hasArtCrop(cardData),// Usar helper para verificar art_crop\nis_dual_face:!!cardData.card_faces};}}catch(e){// Se falhar, retornar apenas o nome\nreturn{name:cardName,image_url:null,has_art_crop:false};}return{name:cardName,image_url:null,has_art_crop:false};});// Aguardar todas as buscas de preview (com timeout)\nconst previewResults=await Promise.allSettled(previewPromises);const enrichedSuggestions=previewResults.map((result,index)=>{if(result.status==='fulfilled'){return result.value;}return{name:cardNames[index],image_url:null,has_art_crop:false};});// Adicionar os nomes restantes sem preview\nconst remainingNames=cardNames.slice(5).map(name=>({name,image_url:null,has_art_crop:false}));setCoverSuggestions([...enrichedSuggestions,...remainingNames]);}catch(error){console.error(\"❌ Erro ao buscar cartas:\",error);setCoverSuggestions([]);}finally{setLoadingSearch(false);}};// Função para selecionar capa do deck\n// Função helper para extrair URL de imagem de cartas (incluindo dual-face)\nconst getCardImageUrl=function(cardData){let preferredFace=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;// Função para extrair imagem de image_uris\nconst extractImageFromUris=uris=>{if(!uris)return null;return uris.art_crop||uris.large||uris.normal||uris.border_crop;};// Se tem image_uris no nível raiz (cartas normais)\nif(cardData.image_uris){return extractImageFromUris(cardData.image_uris);}// Se tem card_faces (cartas de duas faces)\nif(cardData.card_faces&&cardData.card_faces.length>0){// Usar a face especificada ou a primeira\nconst faceIndex=Math.min(preferredFace,cardData.card_faces.length-1);const selectedFace=cardData.card_faces[faceIndex];if(selectedFace.image_uris){return extractImageFromUris(selectedFace.image_uris);}}return null;};// Função helper para verificar se tem art_crop disponível\nconst hasArtCrop=cardData=>{var _cardData$image_uris;// Verificar no nível raiz\nif((_cardData$image_uris=cardData.image_uris)!==null&&_cardData$image_uris!==void 0&&_cardData$image_uris.art_crop)return true;// Verificar nas faces\nif(cardData.card_faces){return cardData.card_faces.some(face=>{var _face$image_uris;return(_face$image_uris=face.image_uris)===null||_face$image_uris===void 0?void 0:_face$image_uris.art_crop;});}return false;};const handleSelectCover=async cardName=>{console.log('🖼️ COVER FUNCTION - Starting with:',cardName);console.log('🖼️ COVER FUNCTION - DeckForCover:',deckForCover);if(!deckForCover){console.log('❌ COVER FUNCTION - No deck selected');return;}try{var _cardData$card_faces;console.log('🌐 COVER FUNCTION - Fetching from Scryfall...');const response=await fetch(\"https://api.scryfall.com/cards/named?exact=\".concat(encodeURIComponent(cardName)));console.log('📡 COVER FUNCTION - Response status:',response.status);if(!response.ok)throw new Error(\"Carta não encontrada\");const cardData=await response.json();console.log('🎴 COVER FUNCTION - Card data:',cardData.name);console.log('🔍 COVER FUNCTION - Card type:',{has_image_uris:!!cardData.image_uris,has_card_faces:!!cardData.card_faces,faces_count:((_cardData$card_faces=cardData.card_faces)===null||_cardData$card_faces===void 0?void 0:_cardData$card_faces.length)||0});// Usar função helper para extrair imagem (suporta dual-face)\nconst imageUrl=getCardImageUrl(cardData,0);// Usar primeira face por padrão\nconsole.log('🖼️ COVER FUNCTION - Available image formats:');if(cardData.image_uris){var _cardData$image_uris2,_cardData$image_uris3,_cardData$image_uris4,_cardData$image_uris5;console.log('  Normal card:',{art_crop:(_cardData$image_uris2=cardData.image_uris)!==null&&_cardData$image_uris2!==void 0&&_cardData$image_uris2.art_crop?'✅':'❌',large:(_cardData$image_uris3=cardData.image_uris)!==null&&_cardData$image_uris3!==void 0&&_cardData$image_uris3.large?'✅':'❌',normal:(_cardData$image_uris4=cardData.image_uris)!==null&&_cardData$image_uris4!==void 0&&_cardData$image_uris4.normal?'✅':'❌',border_crop:(_cardData$image_uris5=cardData.image_uris)!==null&&_cardData$image_uris5!==void 0&&_cardData$image_uris5.border_crop?'✅':'❌'});}if(cardData.card_faces){console.log('  Dual-face card:');cardData.card_faces.forEach((face,index)=>{var _face$image_uris2,_face$image_uris3,_face$image_uris4,_face$image_uris5;console.log(\"    Face \".concat(index+1,\" (\").concat(face.name,\"):\"),{art_crop:(_face$image_uris2=face.image_uris)!==null&&_face$image_uris2!==void 0&&_face$image_uris2.art_crop?'✅':'❌',large:(_face$image_uris3=face.image_uris)!==null&&_face$image_uris3!==void 0&&_face$image_uris3.large?'✅':'❌',normal:(_face$image_uris4=face.image_uris)!==null&&_face$image_uris4!==void 0&&_face$image_uris4.normal?'✅':'❌',border_crop:(_face$image_uris5=face.image_uris)!==null&&_face$image_uris5!==void 0&&_face$image_uris5.border_crop?'✅':'❌'});});}console.log('🖼️ COVER FUNCTION - Selected image URL:',imageUrl);if(imageUrl){console.log('💾 COVER FUNCTION - Calling updateDeck...');console.log('🔧 COVER FUNCTION - Deck ID:',deckForCover.id);console.log('🔧 COVER FUNCTION - Updates:',{cover_image_url:imageUrl});const result=await updateDeck({deckId:deckForCover.id,updates:{cover_image_url:imageUrl}});console.log('✅ COVER FUNCTION - UpdateDeck result:',result);setCoverSearchOpen(false);setDeckForCover(null);setCoverSearchTerm(\"\");setCoverSuggestions([]);console.log('🏁 COVER FUNCTION - Process completed successfully');}else{console.log('❌ COVER FUNCTION - No image URL found');}}catch(error){console.error(\"❌ COVER FUNCTION - Error:\",error);console.error(\"❌ COVER FUNCTION - Error details:\",{message:error.message,stack:error.stack,cardName,deckId:deckForCover===null||deckForCover===void 0?void 0:deckForCover.id});alert(\"Erro ao definir capa do deck: \"+error.message);}};// Função para renomear deck\nconst handleRenameDeck=async()=>{if(!selectedDeck||!newDeckName.trim())return;try{await updateDeck({deckId:selectedDeck.id,updates:{name:newDeckName.trim()}});setRenameDialogOpen(false);setDeckOptionsOpen(false);setSelectedDeck(null);setNewDeckName(\"\");}catch(error){console.error(\"❌ Erro ao renomear deck:\",error);alert(\"Erro ao renomear deck: \"+error.message);}};// Função para alterar formato do deck\nconst handleChangeFormat=async()=>{if(!selectedDeck||!newFormat.trim())return;try{await updateDeck({deckId:selectedDeck.id,updates:{format:newFormat.trim()}});setFormatDialogOpen(false);setDeckOptionsOpen(false);setSelectedDeck(null);setNewFormat(\"\");}catch(error){console.error(\"Erro ao alterar formato:\",error);alert(\"Erro ao alterar formato do deck\");}};// Função para apagar deck\nconst handleDeleteDeck=async()=>{if(!selectedDeck)return;setIsDeleting(true);try{await deleteDeck(selectedDeck.id);setDeleteDialogOpen(false);setDeckOptionsOpen(false);setSelectedDeck(null);}catch(error){console.error(\"Erro ao apagar deck:\",error);alert(\"Erro ao apagar deck\");}finally{setIsDeleting(false);}};// Função para exportar para Magic Arena\nconst handleExportToArena=async()=>{if(!selectedDeck)return;setIsExporting(true);try{// Buscar cartas do deck\nconst response=await fetch(\"/api/decks/\".concat(selectedDeck.id,\"/cards\"));if(!response.ok)throw new Error(\"Erro ao carregar cartas\");const cards=await response.json();// Converter para formato Arena\nconst arenaFormat=cards.map(card=>\"\".concat(card.quantity,\" \").concat(card.name)).join(\"\\n\");// Copiar para clipboard\nawait navigator.clipboard.writeText(arenaFormat);alert(\"Lista copiada para a área de transferência!\");setDeckOptionsOpen(false);setSelectedDeck(null);}catch(error){console.error(\"Erro ao exportar:\",error);alert(\"Erro ao exportar deck\");}finally{setIsExporting(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-gray-950 via-gray-900 to-purple-950\",children:[isOfflineMode&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 right-0 z-50 bg-yellow-600/90 backdrop-blur-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-2 px-4 py-2 text-sm font-medium text-white\",children:[/*#__PURE__*/_jsx(WifiOff,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Modo Offline - Apenas visualiza\\xE7\\xE3o\"}),connectivity.canSearchScryfall&&/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-200\",children:\"\\u2022 Busca Scryfall dispon\\xEDvel\"}),connectivity.isSupabaseConnected&&/*#__PURE__*/_jsx(\"button\",{onClick:syncDecks,className:\"ml-4 px-2 py-1 bg-white/20 rounded text-xs hover:bg-white/30 transition-colors\",children:\"Sincronizar\"})]})}),user&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-6 right-6\",children:/*#__PURE__*/_jsx(UserMenu,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-full flex-col items-center px-4 text-white \".concat(isOfflineMode?'pt-24':'pt-20'),children:[(decksError||createError||deleteError)&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 w-full max-w-md\",children:/*#__PURE__*/_jsxs(Alert,{className:\"bg-red-900/20 border-red-800\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-red-400\",children:(decksError===null||decksError===void 0?void 0:decksError.message)||(createError===null||createError===void 0?void 0:createError.message)||(deleteError===null||deleteError===void 0?void 0:deleteError.message)})]})}),warningMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 w-full max-w-md\",children:/*#__PURE__*/_jsxs(Alert,{className:\"bg-yellow-900/20 border-yellow-800\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(AlertDescription,{className:\"text-yellow-400\",children:warningMessage})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"mb-6 text-3xl font-bold\",children:\"Meus Decks\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Carregando decks...\"}),!isLoading&&!hasDecks&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(!connectivity.canSaveData){alert('Criar deck só é possível quando online');return;}navigate(\"/create\");},className:\"rounded-lg px-6 py-3 text-lg font-semibold text-white shadow \".concat(connectivity.canSaveData?'bg-orange-500 hover:bg-orange-600':'bg-gray-500 cursor-not-allowed'),disabled:!connectivity.canSaveData,children:[\"Adicionar um novo deck\",!connectivity.canSaveData&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm\",children:\"(Offline)\"})]}),hasDecks&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-lg overflow-y-auto max-h-[calc(100vh-200px)] pb-24 scrollbar-hide space-y-6\",children:decks===null||decks===void 0?void 0:decks.map(deck=>/*#__PURE__*/_jsxs(\"div\",{className:\"relative cursor-pointer overflow-hidden rounded-xl shadow-lg min-h-[240px] flex-shrink-0\",onClick:()=>{console.log(\"🎯 Clicou no deck:\",{name:deck.name,format:deck.format});// Se for Coleção de cartas, redireciona para /collection\nif(deck.format===\"Coleção de cartas\"){console.log(\"➡️ Redirecionando para /collection\");navigate(\"/collection\");}else if(deck.format===\"Trade\"||deck.format===\"Trades\"){// Se for Trade ou Trades, redireciona para /trade\nconsole.log(\"➡️ Redirecionando para /trade\");navigate(\"/trade\");}else{console.log(\"➡️ Redirecionando para /deckbuilder\");navigate(\"/deckbuilder/\".concat(deck.id));}},children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-56 w-full bg-cover bg-center\",style:{backgroundImage:\"url(\".concat(deck.cover_image_url||\"https://placehold.co/400x200\",\")\")}}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();e.preventDefault();setSelectedDeck(deck);setDeckOptionsOpen(true);},className:\"absolute top-2 right-2 flex h-10 w-10 items-center justify-center rounded-full bg-black/60 text-white hover:bg-black/80 text-lg\",children:\"\\u2699\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 to-transparent p-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:deck.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-base text-gray-300\",children:normalizeFormat(deck.format)})]})]},deck.id))})]}),hasDecks&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/create\"),className:\"fixed bottom-6 right-6 flex h-14 w-14 items-center justify-center rounded-full bg-orange-500 text-white shadow-lg hover:bg-orange-600\",children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSearchOptionsOpen(!searchOptionsOpen),className:\"fixed bottom-6 left-6 flex h-14 w-14 items-center justify-center rounded-full bg-purple-500 text-white shadow-lg hover:bg-purple-600 z-50\",children:/*#__PURE__*/_jsx(Search,{className:\"w-6 h-6\"})}),searchOptionsOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-24 left-6 flex flex-col gap-2 z-40\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSearchOptionsOpen(false);setRulesDialogOpen(true);},className:\"rounded-lg bg-gray-700 px-4 py-2 text-white text-sm font-medium hover:bg-gray-600 transition-all shadow-lg\",children:\"Buscar Carta\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSearchOptionsOpen(false);setAdvancedSearchOpen(true);},className:\"rounded-lg bg-gray-700 px-4 py-2 text-white text-sm font-medium hover:bg-gray-600 transition-all shadow-lg\",children:\"Busca Avan\\xE7ada\"})]}),/*#__PURE__*/_jsx(SearchRulesDialog,{isOpen:rulesDialogOpen,onClose:()=>setRulesDialogOpen(false)}),advancedSearchOpen&&/*#__PURE__*/_jsx(AdvancedSearchPage,{onClose:()=>setAdvancedSearchOpen(false)}),coverSearchOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-start justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-900 p-6 rounded-lg w-full max-w-md\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg font-bold mb-4\",children:[\"Escolher capa para \",deckForCover===null||deckForCover===void 0?void 0:deckForCover.name]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:coverSearchTerm,onChange:e=>{const value=e.target.value;setCoverSearchTerm(value);if(value.length>=2){handleSearchAutocomplete(value);}else{setCoverSuggestions([]);}},placeholder:\"Digite o nome da carta...\",className:\"w-full rounded-md border border-gray-700 bg-gray-800 px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-orange-500\"}),loadingSearch&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-sm text-gray-400\",children:\"Buscando...\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"mt-3 max-h-60 overflow-y-auto\",children:coverSuggestions.map((suggestion,index)=>{const cardName=suggestion.name||suggestion;const imageUrl=suggestion.image_url;const hasArtCrop=suggestion.has_art_crop;const isDualFace=suggestion.is_dual_face;return/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleSelectCover(cardName),className:\"cursor-pointer px-2 py-2 hover:bg-gray-700 rounded flex items-center gap-3 transition-colors\",children:[imageUrl&&/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:cardName,className:\"w-12 h-12 object-cover rounded border border-gray-600\",onError:e=>{e.target.style.display='none';}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-white font-medium\",children:cardName}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:[isDualFace&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-400\",children:\"\\uD83D\\uDD04 Duas faces\"}),hasArtCrop&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-400\",children:\"\\uD83C\\uDFA8 Arte sem moldura\"}),imageUrl&&!hasArtCrop&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-yellow-400\",children:\"\\uD83D\\uDDBC\\uFE0F Com moldura\"})]})]})]},\"\".concat(cardName,\"-\").concat(index));})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCoverSearchOpen(false),className:\"mt-4 rounded-md bg-red-500 px-4 py-2 text-white hover:bg-red-600\",children:\"Cancelar\"})]})}),deckOptionsOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-6 text-gray-100\",children:selectedDeck===null||selectedDeck===void 0?void 0:selectedDeck.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setNewDeckName((selectedDeck===null||selectedDeck===void 0?void 0:selectedDeck.name)||\"\");setRenameDialogOpen(true);},className:\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\",children:\"Renomear Deck\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setDeckForCover(selectedDeck);setCoverSearchOpen(true);setDeckOptionsOpen(false);},className:\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\",children:\"Alterar Capa\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setNewFormat((selectedDeck===null||selectedDeck===void 0?void 0:selectedDeck.format)||\"\");setFormatDialogOpen(true);},className:\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\",children:\"Mudar Formato\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleExportToArena,disabled:isExporting,className:\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 disabled:bg-gray-800 disabled:cursor-not-allowed disabled:opacity-50 transition-colors text-left font-medium\",children:isExporting?\"Exportando...\":\"Copiar para Magic Arena\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDeleteDialogOpen(true),className:\"w-full rounded-lg bg-red-600 px-4 py-3 text-white hover:bg-red-700 transition-colors text-left font-medium\",children:\"Apagar Deck\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setDeckOptionsOpen(false);setSelectedDeck(null);},className:\"mt-6 w-full rounded-lg bg-gray-900 px-4 py-2 text-gray-300 hover:bg-black hover:text-white transition-colors\",children:\"Fechar\"})]})}),renameDialogOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-gray-100\",children:\"Renomear Deck\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newDeckName,onChange:e=>setNewDeckName(e.target.value),placeholder:\"Digite o novo nome...\",className:\"w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent mb-4\",onKeyDown:e=>{if(e.key===\"Enter\"&&newDeckName.trim()){handleRenameDeck();}}}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRenameDeck,disabled:!newDeckName.trim(),className:\"flex-1 rounded-lg bg-orange-500 px-4 py-2.5 text-white font-medium hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed transition-colors\",children:\"Salvar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setRenameDialogOpen(false);setNewDeckName(\"\");},className:\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors\",children:\"Cancelar\"})]})]})}),deleteDialogOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-red-700 shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-red-500\",children:\"Apagar Deck\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-300 mb-6\",children:[\"Tem certeza que deseja apagar o deck \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-bold text-white\",children:[\"\\\"\",selectedDeck===null||selectedDeck===void 0?void 0:selectedDeck.name,\"\\\"\"]}),\"?\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-400 mb-6\",children:\"\\u26A0\\uFE0F Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita. Todas as cartas do deck tamb\\xE9m ser\\xE3o removidas.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleDeleteDeck,disabled:isDeleting,className:\"flex-1 rounded-lg bg-red-600 px-4 py-2.5 text-white font-medium hover:bg-red-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",children:isDeleting?\"Apagando...\":\"Apagar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDeleteDialogOpen(false),disabled:isDeleting,className:\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",children:\"Cancelar\"})]})]})}),formatDialogOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-gray-100\",children:\"Mudar Formato do Deck\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 mb-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Commander\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Commander\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Commander\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Commander 300\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Commander 300\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Commander 300\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Commander 500\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Commander 500\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Commander 500\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Standard\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Standard\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Modern\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Modern\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Modern\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Pioneer\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Pioneer\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Pioneer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Pauper\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Pauper\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Pauper\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setNewFormat(\"Legacy\"),className:\"rounded-lg px-4 py-3 font-medium transition-all \".concat(newFormat===\"Legacy\"?\"bg-orange-500 text-white ring-2 ring-orange-400\":\"bg-gray-700 text-gray-200 hover:bg-gray-600\"),children:\"Legacy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleChangeFormat,disabled:!newFormat.trim(),className:\"flex-1 rounded-lg bg-orange-500 px-4 py-2.5 text-white font-medium hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed transition-colors\",children:\"Salvar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setFormatDialogOpen(false);setNewFormat(\"\");},className:\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors\",children:\"Cancelar\"})]})]})})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","useQueryClient","useDecks","useConnectivity","useAuthState","useUserProfile","Search","WifiOff","AlertCircle","useDebounce","Alert","AlertDescription","UserMenu","SearchRulesDialog","AdvancedSearchPage","jsx","_jsx","jsxs","_jsxs","Home","navigate","location","user","profile","loading","profileLoading","error","profileError","connectivity","decks","isLoading","decksError","createDeck","updateDeck","deleteDeck","syncDecks","refetch","createError","updateError","deleteError","queryClient","selectedDeck","setSelectedDeck","deckOptionsOpen","setDeckOptionsOpen","renameDialogOpen","setRenameDialogOpen","deleteDialogOpen","setDeleteDialogOpen","formatDialogOpen","setFormatDialogOpen","newDeckName","setNewDeckName","newFormat","setNewFormat","isDeleting","setIsDeleting","isExporting","setIsExporting","warningMessage","setWarningMessage","searchOptionsOpen","setSearchOptionsOpen","rulesDialogOpen","setRulesDialogOpen","advancedSearchOpen","setAdvancedSearchOpen","coverSearchOpen","setCoverSearchOpen","deckForCover","setDeckForCover","coverSearchTerm","setCoverSearchTerm","coverSuggestions","setCoverSuggestions","loadingSearch","setLoadingSearch","debouncedCoverSearchTerm","handleSearchAutocomplete","_location$state","state","message","window","history","replaceState","document","title","timer","setTimeout","clearTimeout","hasDecks","length","isOfflineMode","canSaveData","console","log","items","map","d","id","name","format","cover","cover_image_url","email","normalizeFormat","lower","toLowerCase","includes","charAt","toUpperCase","slice","searchTerm","autocompleteResponse","fetch","concat","encodeURIComponent","ok","Error","autocompleteData","json","cardNames","data","previewPromises","cardName","cardResponse","cardData","image_url","getCardImageUrl","has_art_crop","hasArtCrop","is_dual_face","card_faces","e","previewResults","Promise","allSettled","enrichedSuggestions","result","index","status","value","remainingNames","preferredFace","arguments","undefined","extractImageFromUris","uris","art_crop","large","normal","border_crop","image_uris","faceIndex","Math","min","selectedFace","_cardData$image_uris","some","face","_face$image_uris","handleSelectCover","_cardData$card_faces","response","has_image_uris","has_card_faces","faces_count","imageUrl","_cardData$image_uris2","_cardData$image_uris3","_cardData$image_uris4","_cardData$image_uris5","forEach","_face$image_uris2","_face$image_uris3","_face$image_uris4","_face$image_uris5","deckId","updates","stack","alert","handleRenameDeck","trim","handleChangeFormat","handleDeleteDeck","handleExportToArena","cards","arenaFormat","card","quantity","join","navigator","clipboard","writeText","className","children","canSearchScryfall","isSupabaseConnected","onClick","disabled","deck","style","backgroundImage","stopPropagation","preventDefault","isOpen","onClose","type","onChange","target","placeholder","suggestion","isDualFace","src","alt","onError","display","onKeyDown","key"],"sources":["C:/Users/Lucas Araujo/Desktop/supabase/DeckMaster/src/pages/Home.jsx"],"sourcesContent":["// src/pages/Home.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { useDecks } from \"@/lib/useUnifiedDecks\";\r\nimport { useConnectivity } from \"@/lib/connectivityManager\";\r\nimport { useAuthState } from \"@/hooks/useAuthState\";\r\nimport { useUserProfile } from \"@/hooks/useUserProfile\";\r\nimport { Search, WifiOff, AlertCircle } from \"lucide-react\";\r\nimport { useDebounce } from \"@/hooks/useDebounce\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\n\r\n// 🔗 Import do menu de usuário (popup de perfil)\r\nimport UserMenu from \"@/components/user/UserMenu\";\r\n// ✅ Import do componente de busca de regras\r\nimport SearchRulesDialog from \"@/components/rules/SearchRulesDialog\";\r\n// 🔍 Import do componente de busca avançada\r\nimport AdvancedSearchPage from \"@/components/advanced-search/AdvancedSearchPage\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [user] = useAuthState();\r\n  const { profile, loading: profileLoading, error: profileError } = useUserProfile(user);\r\n  const connectivity = useConnectivity();\r\n\r\n  // Novo sistema unificado de decks\r\n  const {\r\n    decks,\r\n    isLoading,\r\n    error: decksError,\r\n    createDeck,\r\n    updateDeck,\r\n    deleteDeck,\r\n    syncDecks,\r\n    refetch,\r\n    createError,\r\n    updateError,\r\n    deleteError\r\n  } = useDecks();\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // Estados para funcionalidades da UI\r\n  const [selectedDeck, setSelectedDeck] = useState(null);\r\n  const [deckOptionsOpen, setDeckOptionsOpen] = useState(false);\r\n  const [renameDialogOpen, setRenameDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [formatDialogOpen, setFormatDialogOpen] = useState(false);\r\n  const [newDeckName, setNewDeckName] = useState(\"\");\r\n  const [newFormat, setNewFormat] = useState(\"\");\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [warningMessage, setWarningMessage] = useState(null);\r\n  \r\n  // Estados para busca (cartas e capa)\r\n  const [searchOptionsOpen, setSearchOptionsOpen] = useState(false);\r\n  const [rulesDialogOpen, setRulesDialogOpen] = useState(false);\r\n  const [advancedSearchOpen, setAdvancedSearchOpen] = useState(false);\r\n  const [coverSearchOpen, setCoverSearchOpen] = useState(false);\r\n  const [deckForCover, setDeckForCover] = useState(null);\r\n  const [coverSearchTerm, setCoverSearchTerm] = useState(\"\");\r\n  const [coverSuggestions, setCoverSuggestions] = useState([]);\r\n  const [loadingSearch, setLoadingSearch] = useState(false);\r\n\r\n  // Hook de debounce para busca de capa\r\n  const debouncedCoverSearchTerm = useDebounce(coverSearchTerm, 500);\r\n\r\n  // Efeito para busca automática de cartas para capa\r\n  useEffect(() => {\r\n    if (debouncedCoverSearchTerm && coverSearchOpen) {\r\n      handleSearchAutocomplete(debouncedCoverSearchTerm);\r\n    }\r\n  }, [debouncedCoverSearchTerm, coverSearchOpen]);\r\n\r\n  // Efeito para exibir mensagens de navegação (ex: duplicata de formatos especiais)\r\n  useEffect(() => {\r\n    if (location.state?.message) {\r\n      setWarningMessage(location.state.message);\r\n      // Limpar o estado da navegação para não mostrar novamente ao recarregar\r\n      window.history.replaceState({}, document.title);\r\n      \r\n      // Auto-limpar mensagem após 5 segundos\r\n      const timer = setTimeout(() => {\r\n        setWarningMessage(null);\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Computadas\r\n  const hasDecks = decks && decks.length > 0;\r\n  const isOfflineMode = !connectivity.canSaveData;\r\n\r\n  // 🔍 Debug logs para identificar problema\r\n  console.log(\"🏠 HOME DEBUG:\", {\r\n    isLoading,\r\n    decksError,\r\n    decks: decks ? { \r\n      length: decks.length, \r\n      items: decks.map(d => ({ id: d.id, name: d.name, format: d.format, cover: d.cover_image_url })) \r\n    } : null,\r\n    hasDecks,\r\n    user: user ? { id: user.id, email: user.email } : null\r\n  });\r\n\r\n  // Funções auxiliares\r\n  const normalizeFormat = (format) => {\r\n    if (!format) return \"Commander\";\r\n    const lower = format.toLowerCase();\r\n    if (lower.includes(\"commander\")) {\r\n      if (lower.includes(\"300\")) return \"Commander 300\";\r\n      if (lower.includes(\"500\")) return \"Commander 500\";\r\n      return \"Commander\";\r\n    }\r\n    return format.charAt(0).toUpperCase() + format.slice(1);\r\n  };\r\n\r\n  // Função para busca automática de cartas para capa\r\n  const handleSearchAutocomplete = async (searchTerm) => {\r\n    if (searchTerm.length < 2) {\r\n      setCoverSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    setLoadingSearch(true);\r\n    try {\r\n      // Primeiro buscar autocomplete para nomes\r\n      const autocompleteResponse = await fetch(\r\n        `https://api.scryfall.com/cards/autocomplete?q=${encodeURIComponent(searchTerm)}`\r\n      );\r\n      if (!autocompleteResponse.ok) throw new Error(\"Erro na busca\");\r\n      \r\n      const autocompleteData = await autocompleteResponse.json();\r\n      const cardNames = autocompleteData.data || [];\r\n      \r\n      // Para os primeiros 5 resultados, buscar dados completos para mostrar preview\r\n      const previewPromises = cardNames.slice(0, 5).map(async (cardName) => {\r\n        try {\r\n          const cardResponse = await fetch(\r\n            `https://api.scryfall.com/cards/named?fuzzy=${encodeURIComponent(cardName)}`\r\n          );\r\n          if (cardResponse.ok) {\r\n            const cardData = await cardResponse.json();\r\n            return {\r\n              name: cardName,\r\n              image_url: getCardImageUrl(cardData, 0), // Usar helper para dual-face\r\n              has_art_crop: hasArtCrop(cardData), // Usar helper para verificar art_crop\r\n              is_dual_face: !!cardData.card_faces\r\n            };\r\n          }\r\n        } catch (e) {\r\n          // Se falhar, retornar apenas o nome\r\n          return { name: cardName, image_url: null, has_art_crop: false };\r\n        }\r\n        return { name: cardName, image_url: null, has_art_crop: false };\r\n      });\r\n      \r\n      // Aguardar todas as buscas de preview (com timeout)\r\n      const previewResults = await Promise.allSettled(previewPromises);\r\n      const enrichedSuggestions = previewResults.map((result, index) => {\r\n        if (result.status === 'fulfilled') {\r\n          return result.value;\r\n        }\r\n        return { name: cardNames[index], image_url: null, has_art_crop: false };\r\n      });\r\n      \r\n      // Adicionar os nomes restantes sem preview\r\n      const remainingNames = cardNames.slice(5).map(name => ({\r\n        name,\r\n        image_url: null,\r\n        has_art_crop: false\r\n      }));\r\n      \r\n      setCoverSuggestions([...enrichedSuggestions, ...remainingNames]);\r\n    } catch (error) {\r\n      console.error(\"❌ Erro ao buscar cartas:\", error);\r\n      setCoverSuggestions([]);\r\n    } finally {\r\n      setLoadingSearch(false);\r\n    }\r\n  };\r\n\r\n  // Função para selecionar capa do deck\r\n  // Função helper para extrair URL de imagem de cartas (incluindo dual-face)\r\n  const getCardImageUrl = (cardData, preferredFace = 0) => {\r\n    // Função para extrair imagem de image_uris\r\n    const extractImageFromUris = (uris) => {\r\n      if (!uris) return null;\r\n      return uris.art_crop || uris.large || uris.normal || uris.border_crop;\r\n    };\r\n\r\n    // Se tem image_uris no nível raiz (cartas normais)\r\n    if (cardData.image_uris) {\r\n      return extractImageFromUris(cardData.image_uris);\r\n    }\r\n\r\n    // Se tem card_faces (cartas de duas faces)\r\n    if (cardData.card_faces && cardData.card_faces.length > 0) {\r\n      // Usar a face especificada ou a primeira\r\n      const faceIndex = Math.min(preferredFace, cardData.card_faces.length - 1);\r\n      const selectedFace = cardData.card_faces[faceIndex];\r\n      \r\n      if (selectedFace.image_uris) {\r\n        return extractImageFromUris(selectedFace.image_uris);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  // Função helper para verificar se tem art_crop disponível\r\n  const hasArtCrop = (cardData) => {\r\n    // Verificar no nível raiz\r\n    if (cardData.image_uris?.art_crop) return true;\r\n    \r\n    // Verificar nas faces\r\n    if (cardData.card_faces) {\r\n      return cardData.card_faces.some(face => face.image_uris?.art_crop);\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  const handleSelectCover = async (cardName) => {\r\n    console.log('🖼️ COVER FUNCTION - Starting with:', cardName);\r\n    console.log('🖼️ COVER FUNCTION - DeckForCover:', deckForCover);\r\n    \r\n    if (!deckForCover) {\r\n      console.log('❌ COVER FUNCTION - No deck selected');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('🌐 COVER FUNCTION - Fetching from Scryfall...');\r\n      const response = await fetch(\r\n        `https://api.scryfall.com/cards/named?exact=${encodeURIComponent(cardName)}`\r\n      );\r\n      \r\n      console.log('📡 COVER FUNCTION - Response status:', response.status);\r\n      if (!response.ok) throw new Error(\"Carta não encontrada\");\r\n      \r\n      const cardData = await response.json();\r\n      console.log('🎴 COVER FUNCTION - Card data:', cardData.name);\r\n      console.log('🔍 COVER FUNCTION - Card type:', {\r\n        has_image_uris: !!cardData.image_uris,\r\n        has_card_faces: !!cardData.card_faces,\r\n        faces_count: cardData.card_faces?.length || 0\r\n      });\r\n      \r\n      // Usar função helper para extrair imagem (suporta dual-face)\r\n      const imageUrl = getCardImageUrl(cardData, 0); // Usar primeira face por padrão\r\n      \r\n      console.log('🖼️ COVER FUNCTION - Available image formats:');\r\n      if (cardData.image_uris) {\r\n        console.log('  Normal card:', {\r\n          art_crop: cardData.image_uris?.art_crop ? '✅' : '❌',\r\n          large: cardData.image_uris?.large ? '✅' : '❌',\r\n          normal: cardData.image_uris?.normal ? '✅' : '❌',\r\n          border_crop: cardData.image_uris?.border_crop ? '✅' : '❌'\r\n        });\r\n      }\r\n      if (cardData.card_faces) {\r\n        console.log('  Dual-face card:');\r\n        cardData.card_faces.forEach((face, index) => {\r\n          console.log(`    Face ${index + 1} (${face.name}):`, {\r\n            art_crop: face.image_uris?.art_crop ? '✅' : '❌',\r\n            large: face.image_uris?.large ? '✅' : '❌',\r\n            normal: face.image_uris?.normal ? '✅' : '❌',\r\n            border_crop: face.image_uris?.border_crop ? '✅' : '❌'\r\n          });\r\n        });\r\n      }\r\n      console.log('🖼️ COVER FUNCTION - Selected image URL:', imageUrl);\r\n      \r\n      if (imageUrl) {\r\n        console.log('💾 COVER FUNCTION - Calling updateDeck...');\r\n        console.log('🔧 COVER FUNCTION - Deck ID:', deckForCover.id);\r\n        console.log('🔧 COVER FUNCTION - Updates:', { cover_image_url: imageUrl });\r\n        \r\n        const result = await updateDeck({ deckId: deckForCover.id, updates: { cover_image_url: imageUrl } });\r\n        console.log('✅ COVER FUNCTION - UpdateDeck result:', result);\r\n        \r\n        setCoverSearchOpen(false);\r\n        setDeckForCover(null);\r\n        setCoverSearchTerm(\"\");\r\n        setCoverSuggestions([]);\r\n        console.log('🏁 COVER FUNCTION - Process completed successfully');\r\n      } else {\r\n        console.log('❌ COVER FUNCTION - No image URL found');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ COVER FUNCTION - Error:\", error);\r\n      console.error(\"❌ COVER FUNCTION - Error details:\", {\r\n        message: error.message,\r\n        stack: error.stack,\r\n        cardName,\r\n        deckId: deckForCover?.id\r\n      });\r\n      alert(\"Erro ao definir capa do deck: \" + error.message);\r\n    }\r\n  };\r\n\r\n  // Função para renomear deck\r\n  const handleRenameDeck = async () => {\r\n    if (!selectedDeck || !newDeckName.trim()) return;\r\n\r\n    try {\r\n      await updateDeck({ deckId: selectedDeck.id, updates: { name: newDeckName.trim() } });\r\n      setRenameDialogOpen(false);\r\n      setDeckOptionsOpen(false);\r\n      setSelectedDeck(null);\r\n      setNewDeckName(\"\");\r\n    } catch (error) {\r\n      console.error(\"❌ Erro ao renomear deck:\", error);\r\n      alert(\"Erro ao renomear deck: \" + error.message);\r\n    }\r\n  };\r\n\r\n  // Função para alterar formato do deck\r\n  const handleChangeFormat = async () => {\r\n    if (!selectedDeck || !newFormat.trim()) return;\r\n\r\n    try {\r\n      await updateDeck({ deckId: selectedDeck.id, updates: { format: newFormat.trim() } });\r\n      setFormatDialogOpen(false);\r\n      setDeckOptionsOpen(false);\r\n      setSelectedDeck(null);\r\n      setNewFormat(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao alterar formato:\", error);\r\n      alert(\"Erro ao alterar formato do deck\");\r\n    }\r\n  };\r\n\r\n  // Função para apagar deck\r\n  const handleDeleteDeck = async () => {\r\n    if (!selectedDeck) return;\r\n\r\n    setIsDeleting(true);\r\n    try {\r\n      await deleteDeck(selectedDeck.id);\r\n      setDeleteDialogOpen(false);\r\n      setDeckOptionsOpen(false);\r\n      setSelectedDeck(null);\r\n    } catch (error) {\r\n      console.error(\"Erro ao apagar deck:\", error);\r\n      alert(\"Erro ao apagar deck\");\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  // Função para exportar para Magic Arena\r\n  const handleExportToArena = async () => {\r\n    if (!selectedDeck) return;\r\n\r\n    setIsExporting(true);\r\n    try {\r\n      // Buscar cartas do deck\r\n      const response = await fetch(`/api/decks/${selectedDeck.id}/cards`);\r\n      if (!response.ok) throw new Error(\"Erro ao carregar cartas\");\r\n      \r\n      const cards = await response.json();\r\n      \r\n      // Converter para formato Arena\r\n      const arenaFormat = cards\r\n        .map((card) => `${card.quantity} ${card.name}`)\r\n        .join(\"\\n\");\r\n      \r\n      // Copiar para clipboard\r\n      await navigator.clipboard.writeText(arenaFormat);\r\n      alert(\"Lista copiada para a área de transferência!\");\r\n      \r\n      setDeckOptionsOpen(false);\r\n      setSelectedDeck(null);\r\n    } catch (error) {\r\n      console.error(\"Erro ao exportar:\", error);\r\n      alert(\"Erro ao exportar deck\");\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-950 via-gray-900 to-purple-950\">\r\n      {/* 🌐 Barra de status de conectividade */}\r\n      {isOfflineMode && (\r\n        <div className=\"fixed top-0 left-0 right-0 z-50 bg-yellow-600/90 backdrop-blur-sm\">\r\n          <div className=\"flex items-center justify-center gap-2 px-4 py-2 text-sm font-medium text-white\">\r\n            <WifiOff className=\"w-4 h-4\" />\r\n            <span>Modo Offline - Apenas visualização</span>\r\n            {connectivity.canSearchScryfall && (\r\n              <span className=\"text-yellow-200\">• Busca Scryfall disponível</span>\r\n            )}\r\n            {connectivity.isSupabaseConnected && (\r\n              <button \r\n                onClick={syncDecks}\r\n                className=\"ml-4 px-2 py-1 bg-white/20 rounded text-xs hover:bg-white/30 transition-colors\"\r\n              >\r\n                Sincronizar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 🔗 Popup de perfil (UserMenu) - só mostra se há usuário autenticado */}\r\n      {user && (\r\n        <div className=\"fixed top-6 right-6\">\r\n          <UserMenu />\r\n        </div>\r\n      )}\r\n\r\n      <div className={`flex h-full flex-col items-center px-4 text-white ${isOfflineMode ? 'pt-24' : 'pt-20'}`}>\r\n        {/* Alertas de erro */}\r\n        {(decksError || createError || deleteError) && (\r\n          <div className=\"mb-4 w-full max-w-md\">\r\n            <Alert className=\"bg-red-900/20 border-red-800\">\r\n              <AlertCircle className=\"h-4 w-4\" />\r\n              <AlertDescription className=\"text-red-400\">\r\n                {decksError?.message || createError?.message || deleteError?.message}\r\n              </AlertDescription>\r\n            </Alert>\r\n          </div>\r\n        )}\r\n\r\n        {/* Alertas de aviso (ex: duplicata de formato especial) */}\r\n        {warningMessage && (\r\n          <div className=\"mb-4 w-full max-w-md\">\r\n            <Alert className=\"bg-yellow-900/20 border-yellow-800\">\r\n              <AlertCircle className=\"h-4 w-4\" />\r\n              <AlertDescription className=\"text-yellow-400\">\r\n                {warningMessage}\r\n              </AlertDescription>\r\n            </Alert>\r\n          </div>\r\n        )}\r\n\r\n        <h1 className=\"mb-6 text-3xl font-bold\">Meus Decks</h1>\r\n\r\n\r\n        {isLoading && <p>Carregando decks...</p>}\r\n\r\n        {!isLoading && !hasDecks && (\r\n          <button\r\n            onClick={() => {\r\n              if (!connectivity.canSaveData) {\r\n                alert('Criar deck só é possível quando online');\r\n                return;\r\n              }\r\n              navigate(\"/create\");\r\n            }}\r\n            className={`rounded-lg px-6 py-3 text-lg font-semibold text-white shadow ${\r\n              connectivity.canSaveData \r\n                ? 'bg-orange-500 hover:bg-orange-600' \r\n                : 'bg-gray-500 cursor-not-allowed'\r\n            }`}\r\n            disabled={!connectivity.canSaveData}\r\n          >\r\n            Adicionar um novo deck\r\n            {!connectivity.canSaveData && <span className=\"ml-2 text-sm\">(Offline)</span>}\r\n          </button>\r\n        )}\r\n\r\n        {hasDecks && (\r\n          <div className=\"w-full max-w-lg overflow-y-auto max-h-[calc(100vh-200px)] pb-24 scrollbar-hide space-y-6\">\r\n            {decks?.map((deck) => (\r\n              <div\r\n                key={deck.id}\r\n                className=\"relative cursor-pointer overflow-hidden rounded-xl shadow-lg min-h-[240px] flex-shrink-0\"\r\n                onClick={() => {\r\n                  console.log(\"🎯 Clicou no deck:\", { name: deck.name, format: deck.format });\r\n                  \r\n                  // Se for Coleção de cartas, redireciona para /collection\r\n                  if (deck.format === \"Coleção de cartas\") {\r\n                    console.log(\"➡️ Redirecionando para /collection\");\r\n                    navigate(\"/collection\");\r\n                  } else if (deck.format === \"Trade\" || deck.format === \"Trades\") {\r\n                    // Se for Trade ou Trades, redireciona para /trade\r\n                    console.log(\"➡️ Redirecionando para /trade\");\r\n                    navigate(\"/trade\");\r\n                  } else {\r\n                    console.log(\"➡️ Redirecionando para /deckbuilder\");\r\n                    navigate(`/deckbuilder/${deck.id}`);\r\n                  }\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"h-56 w-full bg-cover bg-center\"\r\n                  style={{\r\n                    backgroundImage: `url(${deck.cover_image_url || \"https://placehold.co/400x200\"})`,\r\n                  }}\r\n                />\r\n\r\n                {/* Botão de opções (substituindo estrela) */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    setSelectedDeck(deck);\r\n                    setDeckOptionsOpen(true);\r\n                  }}\r\n                  className=\"absolute top-2 right-2 flex h-10 w-10 items-center justify-center rounded-full bg-black/60 text-white hover:bg-black/80 text-lg\"\r\n                >\r\n                  ⚙\r\n                </button>\r\n\r\n                <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 to-transparent p-5\">\r\n                  <h2 className=\"text-2xl font-bold\">{deck.name}</h2>\r\n                  <p className=\"text-base text-gray-300\">{normalizeFormat(deck.format)}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {hasDecks && (\r\n        <button\r\n          onClick={() => navigate(\"/create\")}\r\n          className=\"fixed bottom-6 right-6 flex h-14 w-14 items-center justify-center rounded-full bg-orange-500 text-white shadow-lg hover:bg-orange-600\"\r\n        >\r\n          +\r\n        </button>\r\n      )}\r\n\r\n      {/* 🔎 Botão de busca */}\r\n      <button\r\n        onClick={() => setSearchOptionsOpen(!searchOptionsOpen)}\r\n        className=\"fixed bottom-6 left-6 flex h-14 w-14 items-center justify-center rounded-full bg-purple-500 text-white shadow-lg hover:bg-purple-600 z-50\"\r\n      >\r\n        <Search className=\"w-6 h-6\" />\r\n      </button>\r\n\r\n      {/* 🔎 Menu de opções de busca (slide de baixo pra cima) */}\r\n      {searchOptionsOpen && (\r\n        <div className=\"fixed bottom-24 left-6 flex flex-col gap-2 z-40\">\r\n          {/* Buscar Carta */}\r\n          <button\r\n            onClick={() => {\r\n              setSearchOptionsOpen(false);\r\n              setRulesDialogOpen(true);\r\n            }}\r\n            className=\"rounded-lg bg-gray-700 px-4 py-2 text-white text-sm font-medium hover:bg-gray-600 transition-all shadow-lg\"\r\n          >\r\n            Buscar Carta\r\n          </button>\r\n\r\n          {/* Busca Avançada */}\r\n          <button\r\n            onClick={() => {\r\n              setSearchOptionsOpen(false);\r\n              setAdvancedSearchOpen(true);\r\n            }}\r\n            className=\"rounded-lg bg-gray-700 px-4 py-2 text-white text-sm font-medium hover:bg-gray-600 transition-all shadow-lg\"\r\n          >\r\n            Busca Avançada\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Dialog de busca de carta (regras) */}\r\n      <SearchRulesDialog\r\n        isOpen={rulesDialogOpen}\r\n        onClose={() => setRulesDialogOpen(false)}\r\n      />\r\n\r\n      {/* Dialog de busca avançada */}\r\n      {advancedSearchOpen && (\r\n        <AdvancedSearchPage onClose={() => setAdvancedSearchOpen(false)} />\r\n      )}\r\n\r\n      {/* ⭐ Barra de busca independente para capa */}\r\n      {coverSearchOpen && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-start justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-900 p-6 rounded-lg w-full max-w-md\">\r\n            <h2 className=\"text-lg font-bold mb-4\">\r\n              Escolher capa para {deckForCover?.name}\r\n            </h2>\r\n            <input\r\n              type=\"text\"\r\n              value={coverSearchTerm}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setCoverSearchTerm(value);\r\n                if (value.length >= 2) {\r\n                  handleSearchAutocomplete(value);\r\n                } else {\r\n                  setCoverSuggestions([]);\r\n                }\r\n              }}\r\n              placeholder=\"Digite o nome da carta...\"\r\n              className=\"w-full rounded-md border border-gray-700 bg-gray-800 px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n            />\r\n            {loadingSearch && <p className=\"mt-2 text-sm text-gray-400\">Buscando...</p>}\r\n            <ul className=\"mt-3 max-h-60 overflow-y-auto\">\r\n              {coverSuggestions.map((suggestion, index) => {\r\n                const cardName = suggestion.name || suggestion;\r\n                const imageUrl = suggestion.image_url;\r\n                const hasArtCrop = suggestion.has_art_crop;\r\n                const isDualFace = suggestion.is_dual_face;\r\n                \r\n                return (\r\n                  <li\r\n                    key={`${cardName}-${index}`}\r\n                    onClick={() => handleSelectCover(cardName)}\r\n                    className=\"cursor-pointer px-2 py-2 hover:bg-gray-700 rounded flex items-center gap-3 transition-colors\"\r\n                  >\r\n                    {imageUrl && (\r\n                      <div className=\"flex-shrink-0\">\r\n                        <img \r\n                          src={imageUrl} \r\n                          alt={cardName}\r\n                          className=\"w-12 h-12 object-cover rounded border border-gray-600\"\r\n                          onError={(e) => {\r\n                            e.target.style.display = 'none';\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-white font-medium\">{cardName}</div>\r\n                      <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                        {isDualFace && (\r\n                          <div className=\"text-xs text-blue-400\">🔄 Duas faces</div>\r\n                        )}\r\n                        {hasArtCrop && (\r\n                          <div className=\"text-xs text-green-400\">🎨 Arte sem moldura</div>\r\n                        )}\r\n                        {imageUrl && !hasArtCrop && (\r\n                          <div className=\"text-xs text-yellow-400\">🖼️ Com moldura</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <button\r\n              onClick={() => setCoverSearchOpen(false)}\r\n              className=\"mt-4 rounded-md bg-red-500 px-4 py-2 text-white hover:bg-red-600\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 🎯 Modal de opções do deck */}\r\n      {deckOptionsOpen && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\">\r\n            <h2 className=\"text-xl font-bold mb-6 text-gray-100\">\r\n              {selectedDeck?.name}\r\n            </h2>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {/* Renomear Deck */}\r\n              <button\r\n                onClick={() => {\r\n                  setNewDeckName(selectedDeck?.name || \"\");\r\n                  setRenameDialogOpen(true);\r\n                }}\r\n                className=\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\"\r\n              >\r\n                Renomear Deck\r\n              </button>\r\n\r\n              {/* Alterar Capa */}\r\n              <button\r\n                onClick={() => {\r\n                  setDeckForCover(selectedDeck);\r\n                  setCoverSearchOpen(true);\r\n                  setDeckOptionsOpen(false);\r\n                }}\r\n                className=\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\"\r\n              >\r\n                Alterar Capa\r\n              </button>\r\n\r\n              {/* Mudar Formato */}\r\n              <button\r\n                onClick={() => {\r\n                  setNewFormat(selectedDeck?.format || \"\");\r\n                  setFormatDialogOpen(true);\r\n                }}\r\n                className=\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 transition-colors text-left font-medium\"\r\n              >\r\n                Mudar Formato\r\n              </button>\r\n\r\n              {/* Copiar para Magic Arena */}\r\n              <button\r\n                onClick={handleExportToArena}\r\n                disabled={isExporting}\r\n                className=\"w-full rounded-lg bg-gray-700 px-4 py-3 text-gray-100 hover:bg-gray-600 disabled:bg-gray-800 disabled:cursor-not-allowed disabled:opacity-50 transition-colors text-left font-medium\"\r\n              >\r\n                {isExporting ? \"Exportando...\" : \"Copiar para Magic Arena\"}\r\n              </button>\r\n\r\n              {/* Apagar Deck */}\r\n              <button\r\n                onClick={() => setDeleteDialogOpen(true)}\r\n                className=\"w-full rounded-lg bg-red-600 px-4 py-3 text-white hover:bg-red-700 transition-colors text-left font-medium\"\r\n              >\r\n                Apagar Deck\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => {\r\n                setDeckOptionsOpen(false);\r\n                setSelectedDeck(null);\r\n              }}\r\n              className=\"mt-6 w-full rounded-lg bg-gray-900 px-4 py-2 text-gray-300 hover:bg-black hover:text-white transition-colors\"\r\n            >\r\n              Fechar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 📝 Dialog de renomear deck */}\r\n      {renameDialogOpen && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-gray-100\">\r\n              Renomear Deck\r\n            </h2>\r\n            \r\n            <input\r\n              type=\"text\"\r\n              value={newDeckName}\r\n              onChange={(e) => setNewDeckName(e.target.value)}\r\n              placeholder=\"Digite o novo nome...\"\r\n              className=\"w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent mb-4\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" && newDeckName.trim()) {\r\n                  handleRenameDeck();\r\n                }\r\n              }}\r\n            />\r\n\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={handleRenameDeck}\r\n                disabled={!newDeckName.trim()}\r\n                className=\"flex-1 rounded-lg bg-orange-500 px-4 py-2.5 text-white font-medium hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Salvar\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => {\r\n                  setRenameDialogOpen(false);\r\n                  setNewDeckName(\"\");\r\n                }}\r\n                className=\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 🗑️ Dialog de confirmação de apagar deck */}\r\n      {deleteDialogOpen && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-red-700 shadow-2xl\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-red-500\">\r\n              Apagar Deck\r\n            </h2>\r\n            \r\n            <p className=\"text-gray-300 mb-6\">\r\n              Tem certeza que deseja apagar o deck <span className=\"font-bold text-white\">\"{selectedDeck?.name}\"</span>?\r\n            </p>\r\n            \r\n            <p className=\"text-sm text-red-400 mb-6\">\r\n              ⚠️ Esta ação não pode ser desfeita. Todas as cartas do deck também serão removidas.\r\n            </p>\r\n\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={handleDeleteDeck}\r\n                disabled={isDeleting}\r\n                className=\"flex-1 rounded-lg bg-red-600 px-4 py-2.5 text-white font-medium hover:bg-red-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isDeleting ? \"Apagando...\" : \"Apagar\"}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setDeleteDialogOpen(false)}\r\n                disabled={isDeleting}\r\n                className=\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 🎨 Dialog de mudar formato */}\r\n      {formatDialogOpen && (\r\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-10 z-50\">\r\n          <div className=\"bg-gray-800 p-6 rounded-xl w-full max-w-md border border-gray-700 shadow-2xl\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-gray-100\">\r\n              Mudar Formato do Deck\r\n            </h2>\r\n            \r\n            <div className=\"flex flex-col gap-2 mb-6\">\r\n              <button\r\n                onClick={() => setNewFormat(\"Commander\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Commander\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Commander\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Commander 300\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Commander 300\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Commander 300\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Commander 500\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Commander 500\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Commander 500\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Standard\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Standard\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Standard\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Modern\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Modern\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Modern\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Pioneer\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Pioneer\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Pioneer\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Pauper\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Pauper\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Pauper\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setNewFormat(\"Legacy\")}\r\n                className={`rounded-lg px-4 py-3 font-medium transition-all ${\r\n                  newFormat === \"Legacy\"\r\n                    ? \"bg-orange-500 text-white ring-2 ring-orange-400\"\r\n                    : \"bg-gray-700 text-gray-200 hover:bg-gray-600\"\r\n                }`}\r\n              >\r\n                Legacy\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={handleChangeFormat}\r\n                disabled={!newFormat.trim()}\r\n                className=\"flex-1 rounded-lg bg-orange-500 px-4 py-2.5 text-white font-medium hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Salvar\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => {\r\n                  setFormatDialogOpen(false);\r\n                  setNewFormat(\"\");\r\n                }}\r\n                className=\"flex-1 rounded-lg bg-gray-700 px-4 py-2.5 text-gray-200 font-medium hover:bg-gray-600 transition-colors\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,eAAe,KAAQ,2BAA2B,CAC3D,OAASC,YAAY,KAAQ,sBAAsB,CACnD,OAASC,cAAc,KAAQ,wBAAwB,CACvD,OAASC,MAAM,CAAEC,OAAO,CAAEC,WAAW,KAAQ,cAAc,CAC3D,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,KAAK,CAAEC,gBAAgB,KAAQ,uBAAuB,CAE/D;AACA,MAAO,CAAAC,QAAQ,KAAM,4BAA4B,CACjD;AACA,MAAO,CAAAC,iBAAiB,KAAM,sCAAsC,CACpE;AACA,MAAO,CAAAC,kBAAkB,KAAM,iDAAiD,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjF,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAAAC,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAsB,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACsB,IAAI,CAAC,CAAGlB,YAAY,CAAC,CAAC,CAC7B,KAAM,CAAEmB,OAAO,CAAEC,OAAO,CAAEC,cAAc,CAAEC,KAAK,CAAEC,YAAa,CAAC,CAAGtB,cAAc,CAACiB,IAAI,CAAC,CACtF,KAAM,CAAAM,YAAY,CAAGzB,eAAe,CAAC,CAAC,CAEtC;AACA,KAAM,CACJ0B,KAAK,CACLC,SAAS,CACTJ,KAAK,CAAEK,UAAU,CACjBC,UAAU,CACVC,UAAU,CACVC,UAAU,CACVC,SAAS,CACTC,OAAO,CACPC,WAAW,CACXC,WAAW,CACXC,WACF,CAAC,CAAGrC,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAsC,WAAW,CAAGvC,cAAc,CAAC,CAAC,CAEpC;AACA,KAAM,CAACwC,YAAY,CAAEC,eAAe,CAAC,CAAG7C,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC8C,eAAe,CAAEC,kBAAkB,CAAC,CAAG/C,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACgD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACkD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACoD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGrD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACsD,WAAW,CAAEC,cAAc,CAAC,CAAGvD,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACwD,SAAS,CAAEC,YAAY,CAAC,CAAGzD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC0D,UAAU,CAAEC,aAAa,CAAC,CAAG3D,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC4D,WAAW,CAAEC,cAAc,CAAC,CAAG7D,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC8D,cAAc,CAAEC,iBAAiB,CAAC,CAAG/D,QAAQ,CAAC,IAAI,CAAC,CAE1D;AACA,KAAM,CAACgE,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGjE,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACkE,eAAe,CAAEC,kBAAkB,CAAC,CAAGnE,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACoE,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGrE,QAAQ,CAAC,KAAK,CAAC,CACnE,KAAM,CAACsE,eAAe,CAAEC,kBAAkB,CAAC,CAAGvE,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACwE,YAAY,CAAEC,eAAe,CAAC,CAAGzE,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC0E,eAAe,CAAEC,kBAAkB,CAAC,CAAG3E,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAC4E,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG7E,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAC8E,aAAa,CAAEC,gBAAgB,CAAC,CAAG/E,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACA,KAAM,CAAAgF,wBAAwB,CAAGpE,WAAW,CAAC8D,eAAe,CAAE,GAAG,CAAC,CAElE;AACAzE,SAAS,CAAC,IAAM,CACd,GAAI+E,wBAAwB,EAAIV,eAAe,CAAE,CAC/CW,wBAAwB,CAACD,wBAAwB,CAAC,CACpD,CACF,CAAC,CAAE,CAACA,wBAAwB,CAAEV,eAAe,CAAC,CAAC,CAE/C;AACArE,SAAS,CAAC,IAAM,KAAAiF,eAAA,CACd,IAAAA,eAAA,CAAI1D,QAAQ,CAAC2D,KAAK,UAAAD,eAAA,WAAdA,eAAA,CAAgBE,OAAO,CAAE,CAC3BrB,iBAAiB,CAACvC,QAAQ,CAAC2D,KAAK,CAACC,OAAO,CAAC,CACzC;AACAC,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAAEC,QAAQ,CAACC,KAAK,CAAC,CAE/C;AACA,KAAM,CAAAC,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7B5B,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAM6B,YAAY,CAACF,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAAClE,QAAQ,CAAC2D,KAAK,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAU,QAAQ,CAAG7D,KAAK,EAAIA,KAAK,CAAC8D,MAAM,CAAG,CAAC,CAC1C,KAAM,CAAAC,aAAa,CAAG,CAAChE,YAAY,CAACiE,WAAW,CAE/C;AACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE,CAC5BjE,SAAS,CACTC,UAAU,CACVF,KAAK,CAAEA,KAAK,CAAG,CACb8D,MAAM,CAAE9D,KAAK,CAAC8D,MAAM,CACpBK,KAAK,CAAEnE,KAAK,CAACoE,GAAG,CAACC,CAAC,GAAK,CAAEC,EAAE,CAAED,CAAC,CAACC,EAAE,CAAEC,IAAI,CAAEF,CAAC,CAACE,IAAI,CAAEC,MAAM,CAAEH,CAAC,CAACG,MAAM,CAAEC,KAAK,CAAEJ,CAAC,CAACK,eAAgB,CAAC,CAAC,CAChG,CAAC,CAAG,IAAI,CACRb,QAAQ,CACRpE,IAAI,CAAEA,IAAI,CAAG,CAAE6E,EAAE,CAAE7E,IAAI,CAAC6E,EAAE,CAAEK,KAAK,CAAElF,IAAI,CAACkF,KAAM,CAAC,CAAG,IACpD,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,eAAe,CAAIJ,MAAM,EAAK,CAClC,GAAI,CAACA,MAAM,CAAE,MAAO,WAAW,CAC/B,KAAM,CAAAK,KAAK,CAAGL,MAAM,CAACM,WAAW,CAAC,CAAC,CAClC,GAAID,KAAK,CAACE,QAAQ,CAAC,WAAW,CAAC,CAAE,CAC/B,GAAIF,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC,CAAE,MAAO,eAAe,CACjD,GAAIF,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC,CAAE,MAAO,eAAe,CACjD,MAAO,WAAW,CACpB,CACA,MAAO,CAAAP,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGT,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CACzD,CAAC,CAED;AACA,KAAM,CAAAjC,wBAAwB,CAAG,KAAO,CAAAkC,UAAU,EAAK,CACrD,GAAIA,UAAU,CAACrB,MAAM,CAAG,CAAC,CAAE,CACzBjB,mBAAmB,CAAC,EAAE,CAAC,CACvB,OACF,CAEAE,gBAAgB,CAAC,IAAI,CAAC,CACtB,GAAI,CACF;AACA,KAAM,CAAAqC,oBAAoB,CAAG,KAAM,CAAAC,KAAK,kDAAAC,MAAA,CACWC,kBAAkB,CAACJ,UAAU,CAAC,CACjF,CAAC,CACD,GAAI,CAACC,oBAAoB,CAACI,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,eAAe,CAAC,CAE9D,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAN,oBAAoB,CAACO,IAAI,CAAC,CAAC,CAC1D,KAAM,CAAAC,SAAS,CAAGF,gBAAgB,CAACG,IAAI,EAAI,EAAE,CAE7C;AACA,KAAM,CAAAC,eAAe,CAAGF,SAAS,CAACV,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACd,GAAG,CAAC,KAAO,CAAA2B,QAAQ,EAAK,CACpE,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAX,KAAK,+CAAAC,MAAA,CACgBC,kBAAkB,CAACQ,QAAQ,CAAC,CAC5E,CAAC,CACD,GAAIC,YAAY,CAACR,EAAE,CAAE,CACnB,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAD,YAAY,CAACL,IAAI,CAAC,CAAC,CAC1C,MAAO,CACLpB,IAAI,CAAEwB,QAAQ,CACdG,SAAS,CAAEC,eAAe,CAACF,QAAQ,CAAE,CAAC,CAAC,CAAE;AACzCG,YAAY,CAAEC,UAAU,CAACJ,QAAQ,CAAC,CAAE;AACpCK,YAAY,CAAE,CAAC,CAACL,QAAQ,CAACM,UAC3B,CAAC,CACH,CACF,CAAE,MAAOC,CAAC,CAAE,CACV;AACA,MAAO,CAAEjC,IAAI,CAAEwB,QAAQ,CAAEG,SAAS,CAAE,IAAI,CAAEE,YAAY,CAAE,KAAM,CAAC,CACjE,CACA,MAAO,CAAE7B,IAAI,CAAEwB,QAAQ,CAAEG,SAAS,CAAE,IAAI,CAAEE,YAAY,CAAE,KAAM,CAAC,CACjE,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,cAAc,CAAG,KAAM,CAAAC,OAAO,CAACC,UAAU,CAACb,eAAe,CAAC,CAChE,KAAM,CAAAc,mBAAmB,CAAGH,cAAc,CAACrC,GAAG,CAAC,CAACyC,MAAM,CAAEC,KAAK,GAAK,CAChE,GAAID,MAAM,CAACE,MAAM,GAAK,WAAW,CAAE,CACjC,MAAO,CAAAF,MAAM,CAACG,KAAK,CACrB,CACA,MAAO,CAAEzC,IAAI,CAAEqB,SAAS,CAACkB,KAAK,CAAC,CAAEZ,SAAS,CAAE,IAAI,CAAEE,YAAY,CAAE,KAAM,CAAC,CACzE,CAAC,CAAC,CAEF;AACA,KAAM,CAAAa,cAAc,CAAGrB,SAAS,CAACV,KAAK,CAAC,CAAC,CAAC,CAACd,GAAG,CAACG,IAAI,GAAK,CACrDA,IAAI,CACJ2B,SAAS,CAAE,IAAI,CACfE,YAAY,CAAE,KAChB,CAAC,CAAC,CAAC,CAEHvD,mBAAmB,CAAC,CAAC,GAAG+D,mBAAmB,CAAE,GAAGK,cAAc,CAAC,CAAC,CAClE,CAAE,MAAOpH,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDgD,mBAAmB,CAAC,EAAE,CAAC,CACzB,CAAC,OAAS,CACRE,gBAAgB,CAAC,KAAK,CAAC,CACzB,CACF,CAAC,CAED;AACA;AACA,KAAM,CAAAoD,eAAe,CAAG,QAAAA,CAACF,QAAQ,CAAwB,IAAtB,CAAAiB,aAAa,CAAAC,SAAA,CAAArD,MAAA,IAAAqD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAClD;AACA,KAAM,CAAAE,oBAAoB,CAAIC,IAAI,EAAK,CACrC,GAAI,CAACA,IAAI,CAAE,MAAO,KAAI,CACtB,MAAO,CAAAA,IAAI,CAACC,QAAQ,EAAID,IAAI,CAACE,KAAK,EAAIF,IAAI,CAACG,MAAM,EAAIH,IAAI,CAACI,WAAW,CACvE,CAAC,CAED;AACA,GAAIzB,QAAQ,CAAC0B,UAAU,CAAE,CACvB,MAAO,CAAAN,oBAAoB,CAACpB,QAAQ,CAAC0B,UAAU,CAAC,CAClD,CAEA;AACA,GAAI1B,QAAQ,CAACM,UAAU,EAAIN,QAAQ,CAACM,UAAU,CAACzC,MAAM,CAAG,CAAC,CAAE,CACzD;AACA,KAAM,CAAA8D,SAAS,CAAGC,IAAI,CAACC,GAAG,CAACZ,aAAa,CAAEjB,QAAQ,CAACM,UAAU,CAACzC,MAAM,CAAG,CAAC,CAAC,CACzE,KAAM,CAAAiE,YAAY,CAAG9B,QAAQ,CAACM,UAAU,CAACqB,SAAS,CAAC,CAEnD,GAAIG,YAAY,CAACJ,UAAU,CAAE,CAC3B,MAAO,CAAAN,oBAAoB,CAACU,YAAY,CAACJ,UAAU,CAAC,CACtD,CACF,CAEA,MAAO,KAAI,CACb,CAAC,CAED;AACA,KAAM,CAAAtB,UAAU,CAAIJ,QAAQ,EAAK,KAAA+B,oBAAA,CAC/B;AACA,IAAAA,oBAAA,CAAI/B,QAAQ,CAAC0B,UAAU,UAAAK,oBAAA,WAAnBA,oBAAA,CAAqBT,QAAQ,CAAE,MAAO,KAAI,CAE9C;AACA,GAAItB,QAAQ,CAACM,UAAU,CAAE,CACvB,MAAO,CAAAN,QAAQ,CAACM,UAAU,CAAC0B,IAAI,CAACC,IAAI,OAAAC,gBAAA,QAAAA,gBAAA,CAAID,IAAI,CAACP,UAAU,UAAAQ,gBAAA,iBAAfA,gBAAA,CAAiBZ,QAAQ,GAAC,CACpE,CAEA,MAAO,MAAK,CACd,CAAC,CAED,KAAM,CAAAa,iBAAiB,CAAG,KAAO,CAAArC,QAAQ,EAAK,CAC5C9B,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAE6B,QAAQ,CAAC,CAC5D9B,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAE1B,YAAY,CAAC,CAE/D,GAAI,CAACA,YAAY,CAAE,CACjByB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAClD,OACF,CAEA,GAAI,KAAAmE,oBAAA,CACFpE,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC,CAC5D,KAAM,CAAAoE,QAAQ,CAAG,KAAM,CAAAjD,KAAK,+CAAAC,MAAA,CACoBC,kBAAkB,CAACQ,QAAQ,CAAC,CAC5E,CAAC,CAED9B,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEoE,QAAQ,CAACvB,MAAM,CAAC,CACpE,GAAI,CAACuB,QAAQ,CAAC9C,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAEzD,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAqC,QAAQ,CAAC3C,IAAI,CAAC,CAAC,CACtC1B,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE+B,QAAQ,CAAC1B,IAAI,CAAC,CAC5DN,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE,CAC5CqE,cAAc,CAAE,CAAC,CAACtC,QAAQ,CAAC0B,UAAU,CACrCa,cAAc,CAAE,CAAC,CAACvC,QAAQ,CAACM,UAAU,CACrCkC,WAAW,CAAE,EAAAJ,oBAAA,CAAApC,QAAQ,CAACM,UAAU,UAAA8B,oBAAA,iBAAnBA,oBAAA,CAAqBvE,MAAM,GAAI,CAC9C,CAAC,CAAC,CAEF;AACA,KAAM,CAAA4E,QAAQ,CAAGvC,eAAe,CAACF,QAAQ,CAAE,CAAC,CAAC,CAAE;AAE/ChC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC,CAC5D,GAAI+B,QAAQ,CAAC0B,UAAU,CAAE,KAAAgB,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACvB7E,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE,CAC5BqD,QAAQ,CAAE,CAAAoB,qBAAA,CAAA1C,QAAQ,CAAC0B,UAAU,UAAAgB,qBAAA,WAAnBA,qBAAA,CAAqBpB,QAAQ,CAAG,GAAG,CAAG,GAAG,CACnDC,KAAK,CAAE,CAAAoB,qBAAA,CAAA3C,QAAQ,CAAC0B,UAAU,UAAAiB,qBAAA,WAAnBA,qBAAA,CAAqBpB,KAAK,CAAG,GAAG,CAAG,GAAG,CAC7CC,MAAM,CAAE,CAAAoB,qBAAA,CAAA5C,QAAQ,CAAC0B,UAAU,UAAAkB,qBAAA,WAAnBA,qBAAA,CAAqBpB,MAAM,CAAG,GAAG,CAAG,GAAG,CAC/CC,WAAW,CAAE,CAAAoB,qBAAA,CAAA7C,QAAQ,CAAC0B,UAAU,UAAAmB,qBAAA,WAAnBA,qBAAA,CAAqBpB,WAAW,CAAG,GAAG,CAAG,GACxD,CAAC,CAAC,CACJ,CACA,GAAIzB,QAAQ,CAACM,UAAU,CAAE,CACvBtC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChC+B,QAAQ,CAACM,UAAU,CAACwC,OAAO,CAAC,CAACb,IAAI,CAAEpB,KAAK,GAAK,KAAAkC,iBAAA,CAAAC,iBAAA,CAAAC,iBAAA,CAAAC,iBAAA,CAC3ClF,OAAO,CAACC,GAAG,aAAAoB,MAAA,CAAawB,KAAK,CAAG,CAAC,OAAAxB,MAAA,CAAK4C,IAAI,CAAC3D,IAAI,OAAM,CACnDgD,QAAQ,CAAE,CAAAyB,iBAAA,CAAAd,IAAI,CAACP,UAAU,UAAAqB,iBAAA,WAAfA,iBAAA,CAAiBzB,QAAQ,CAAG,GAAG,CAAG,GAAG,CAC/CC,KAAK,CAAE,CAAAyB,iBAAA,CAAAf,IAAI,CAACP,UAAU,UAAAsB,iBAAA,WAAfA,iBAAA,CAAiBzB,KAAK,CAAG,GAAG,CAAG,GAAG,CACzCC,MAAM,CAAE,CAAAyB,iBAAA,CAAAhB,IAAI,CAACP,UAAU,UAAAuB,iBAAA,WAAfA,iBAAA,CAAiBzB,MAAM,CAAG,GAAG,CAAG,GAAG,CAC3CC,WAAW,CAAE,CAAAyB,iBAAA,CAAAjB,IAAI,CAACP,UAAU,UAAAwB,iBAAA,WAAfA,iBAAA,CAAiBzB,WAAW,CAAG,GAAG,CAAG,GACpD,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACAzD,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEwE,QAAQ,CAAC,CAEjE,GAAIA,QAAQ,CAAE,CACZzE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CACxDD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAE1B,YAAY,CAAC8B,EAAE,CAAC,CAC5DL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAE,CAAEQ,eAAe,CAAEgE,QAAS,CAAC,CAAC,CAE1E,KAAM,CAAA7B,MAAM,CAAG,KAAM,CAAAzG,UAAU,CAAC,CAAEgJ,MAAM,CAAE5G,YAAY,CAAC8B,EAAE,CAAE+E,OAAO,CAAE,CAAE3E,eAAe,CAAEgE,QAAS,CAAE,CAAC,CAAC,CACpGzE,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAE2C,MAAM,CAAC,CAE5DtE,kBAAkB,CAAC,KAAK,CAAC,CACzBE,eAAe,CAAC,IAAI,CAAC,CACrBE,kBAAkB,CAAC,EAAE,CAAC,CACtBE,mBAAmB,CAAC,EAAE,CAAC,CACvBoB,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CACnE,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACtD,CACF,CAAE,MAAOrE,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDoE,OAAO,CAACpE,KAAK,CAAC,mCAAmC,CAAE,CACjDuD,OAAO,CAAEvD,KAAK,CAACuD,OAAO,CACtBkG,KAAK,CAAEzJ,KAAK,CAACyJ,KAAK,CAClBvD,QAAQ,CACRqD,MAAM,CAAE5G,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE8B,EACxB,CAAC,CAAC,CACFiF,KAAK,CAAC,gCAAgC,CAAG1J,KAAK,CAACuD,OAAO,CAAC,CACzD,CACF,CAAC,CAED;AACA,KAAM,CAAAoG,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAAC5I,YAAY,EAAI,CAACU,WAAW,CAACmI,IAAI,CAAC,CAAC,CAAE,OAE1C,GAAI,CACF,KAAM,CAAArJ,UAAU,CAAC,CAAEgJ,MAAM,CAAExI,YAAY,CAAC0D,EAAE,CAAE+E,OAAO,CAAE,CAAE9E,IAAI,CAAEjD,WAAW,CAACmI,IAAI,CAAC,CAAE,CAAE,CAAC,CAAC,CACpFxI,mBAAmB,CAAC,KAAK,CAAC,CAC1BF,kBAAkB,CAAC,KAAK,CAAC,CACzBF,eAAe,CAAC,IAAI,CAAC,CACrBU,cAAc,CAAC,EAAE,CAAC,CACpB,CAAE,MAAO1B,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD0J,KAAK,CAAC,yBAAyB,CAAG1J,KAAK,CAACuD,OAAO,CAAC,CAClD,CACF,CAAC,CAED;AACA,KAAM,CAAAsG,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CAAC9I,YAAY,EAAI,CAACY,SAAS,CAACiI,IAAI,CAAC,CAAC,CAAE,OAExC,GAAI,CACF,KAAM,CAAArJ,UAAU,CAAC,CAAEgJ,MAAM,CAAExI,YAAY,CAAC0D,EAAE,CAAE+E,OAAO,CAAE,CAAE7E,MAAM,CAAEhD,SAAS,CAACiI,IAAI,CAAC,CAAE,CAAE,CAAC,CAAC,CACpFpI,mBAAmB,CAAC,KAAK,CAAC,CAC1BN,kBAAkB,CAAC,KAAK,CAAC,CACzBF,eAAe,CAAC,IAAI,CAAC,CACrBY,YAAY,CAAC,EAAE,CAAC,CAClB,CAAE,MAAO5B,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD0J,KAAK,CAAC,iCAAiC,CAAC,CAC1C,CACF,CAAC,CAED;AACA,KAAM,CAAAI,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAAC/I,YAAY,CAAE,OAEnBe,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF,KAAM,CAAAtB,UAAU,CAACO,YAAY,CAAC0D,EAAE,CAAC,CACjCnD,mBAAmB,CAAC,KAAK,CAAC,CAC1BJ,kBAAkB,CAAC,KAAK,CAAC,CACzBF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,MAAOhB,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C0J,KAAK,CAAC,qBAAqB,CAAC,CAC9B,CAAC,OAAS,CACR5H,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED;AACA,KAAM,CAAAiI,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CAAChJ,YAAY,CAAE,OAEnBiB,cAAc,CAAC,IAAI,CAAC,CACpB,GAAI,CACF;AACA,KAAM,CAAAyG,QAAQ,CAAG,KAAM,CAAAjD,KAAK,eAAAC,MAAA,CAAe1E,YAAY,CAAC0D,EAAE,UAAQ,CAAC,CACnE,GAAI,CAACgE,QAAQ,CAAC9C,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAE5D,KAAM,CAAAoE,KAAK,CAAG,KAAM,CAAAvB,QAAQ,CAAC3C,IAAI,CAAC,CAAC,CAEnC;AACA,KAAM,CAAAmE,WAAW,CAAGD,KAAK,CACtBzF,GAAG,CAAE2F,IAAI,KAAAzE,MAAA,CAAQyE,IAAI,CAACC,QAAQ,MAAA1E,MAAA,CAAIyE,IAAI,CAACxF,IAAI,CAAE,CAAC,CAC9C0F,IAAI,CAAC,IAAI,CAAC,CAEb;AACA,KAAM,CAAAC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,WAAW,CAAC,CAChDP,KAAK,CAAC,6CAA6C,CAAC,CAEpDxI,kBAAkB,CAAC,KAAK,CAAC,CACzBF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,MAAOhB,KAAK,CAAE,CACdoE,OAAO,CAACpE,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC0J,KAAK,CAAC,uBAAuB,CAAC,CAChC,CAAC,OAAS,CACR1H,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,mBACExC,KAAA,QAAKgL,SAAS,CAAC,yEAAyE,CAAAC,QAAA,EAErFvG,aAAa,eACZ5E,IAAA,QAAKkL,SAAS,CAAC,mEAAmE,CAAAC,QAAA,cAChFjL,KAAA,QAAKgL,SAAS,CAAC,iFAAiF,CAAAC,QAAA,eAC9FnL,IAAA,CAACT,OAAO,EAAC2L,SAAS,CAAC,SAAS,CAAE,CAAC,cAC/BlL,IAAA,SAAAmL,QAAA,CAAM,0CAAkC,CAAM,CAAC,CAC9CvK,YAAY,CAACwK,iBAAiB,eAC7BpL,IAAA,SAAMkL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,qCAA2B,CAAM,CACpE,CACAvK,YAAY,CAACyK,mBAAmB,eAC/BrL,IAAA,WACEsL,OAAO,CAAEnK,SAAU,CACnB+J,SAAS,CAAC,gFAAgF,CAAAC,QAAA,CAC3F,aAED,CAAQ,CACT,EACE,CAAC,CACH,CACN,CAGA7K,IAAI,eACHN,IAAA,QAAKkL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCnL,IAAA,CAACJ,QAAQ,GAAE,CAAC,CACT,CACN,cAEDM,KAAA,QAAKgL,SAAS,sDAAA/E,MAAA,CAAuDvB,aAAa,CAAG,OAAO,CAAG,OAAO,CAAG,CAAAuG,QAAA,EAEtG,CAACpK,UAAU,EAAIM,WAAW,EAAIE,WAAW,gBACxCvB,IAAA,QAAKkL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCjL,KAAA,CAACR,KAAK,EAACwL,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC7CnL,IAAA,CAACR,WAAW,EAAC0L,SAAS,CAAC,SAAS,CAAE,CAAC,cACnClL,IAAA,CAACL,gBAAgB,EAACuL,SAAS,CAAC,cAAc,CAAAC,QAAA,CACvC,CAAApK,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEkD,OAAO,IAAI5C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAE4C,OAAO,IAAI1C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAE0C,OAAO,EACpD,CAAC,EACd,CAAC,CACL,CACN,CAGAtB,cAAc,eACb3C,IAAA,QAAKkL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCjL,KAAA,CAACR,KAAK,EAACwL,SAAS,CAAC,oCAAoC,CAAAC,QAAA,eACnDnL,IAAA,CAACR,WAAW,EAAC0L,SAAS,CAAC,SAAS,CAAE,CAAC,cACnClL,IAAA,CAACL,gBAAgB,EAACuL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC1CxI,cAAc,CACC,CAAC,EACd,CAAC,CACL,CACN,cAED3C,IAAA,OAAIkL,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,CAGtDrK,SAAS,eAAId,IAAA,MAAAmL,QAAA,CAAG,qBAAmB,CAAG,CAAC,CAEvC,CAACrK,SAAS,EAAI,CAAC4D,QAAQ,eACtBxE,KAAA,WACEoL,OAAO,CAAEA,CAAA,GAAM,CACb,GAAI,CAAC1K,YAAY,CAACiE,WAAW,CAAE,CAC7BuF,KAAK,CAAC,wCAAwC,CAAC,CAC/C,OACF,CACAhK,QAAQ,CAAC,SAAS,CAAC,CACrB,CAAE,CACF8K,SAAS,iEAAA/E,MAAA,CACPvF,YAAY,CAACiE,WAAW,CACpB,mCAAmC,CACnC,gCAAgC,CACnC,CACH0G,QAAQ,CAAE,CAAC3K,YAAY,CAACiE,WAAY,CAAAsG,QAAA,EACrC,wBAEC,CAAC,CAACvK,YAAY,CAACiE,WAAW,eAAI7E,IAAA,SAAMkL,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,EACvE,CACT,CAEAzG,QAAQ,eACP1E,IAAA,QAAKkL,SAAS,CAAC,0FAA0F,CAAAC,QAAA,CACtGtK,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEoE,GAAG,CAAEuG,IAAI,eACftL,KAAA,QAEEgL,SAAS,CAAC,0FAA0F,CACpGI,OAAO,CAAEA,CAAA,GAAM,CACbxG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE,CAAEK,IAAI,CAAEoG,IAAI,CAACpG,IAAI,CAAEC,MAAM,CAAEmG,IAAI,CAACnG,MAAO,CAAC,CAAC,CAE3E;AACA,GAAImG,IAAI,CAACnG,MAAM,GAAK,mBAAmB,CAAE,CACvCP,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACjD3E,QAAQ,CAAC,aAAa,CAAC,CACzB,CAAC,IAAM,IAAIoL,IAAI,CAACnG,MAAM,GAAK,OAAO,EAAImG,IAAI,CAACnG,MAAM,GAAK,QAAQ,CAAE,CAC9D;AACAP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C3E,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACL0E,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAClD3E,QAAQ,iBAAA+F,MAAA,CAAiBqF,IAAI,CAACrG,EAAE,CAAE,CAAC,CACrC,CACF,CAAE,CAAAgG,QAAA,eAEFnL,IAAA,QACEkL,SAAS,CAAC,gCAAgC,CAC1CO,KAAK,CAAE,CACLC,eAAe,QAAAvF,MAAA,CAASqF,IAAI,CAACjG,eAAe,EAAI,8BAA8B,KAChF,CAAE,CACH,CAAC,cAGFvF,IAAA,WACEsL,OAAO,CAAGjE,CAAC,EAAK,CACdA,CAAC,CAACsE,eAAe,CAAC,CAAC,CACnBtE,CAAC,CAACuE,cAAc,CAAC,CAAC,CAClBlK,eAAe,CAAC8J,IAAI,CAAC,CACrB5J,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAE,CACFsJ,SAAS,CAAC,iIAAiI,CAAAC,QAAA,CAC5I,QAED,CAAQ,CAAC,cAETjL,KAAA,QAAKgL,SAAS,CAAC,oFAAoF,CAAAC,QAAA,eACjGnL,IAAA,OAAIkL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAEK,IAAI,CAACpG,IAAI,CAAK,CAAC,cACnDpF,IAAA,MAAGkL,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAE1F,eAAe,CAAC+F,IAAI,CAACnG,MAAM,CAAC,CAAI,CAAC,EACtE,CAAC,GA1CDmG,IAAI,CAACrG,EA2CP,CACN,CAAC,CACC,CACN,EACE,CAAC,CAELT,QAAQ,eACP1E,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMlL,QAAQ,CAAC,SAAS,CAAE,CACnC8K,SAAS,CAAC,uIAAuI,CAAAC,QAAA,CAClJ,GAED,CAAQ,CACT,cAGDnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMxI,oBAAoB,CAAC,CAACD,iBAAiB,CAAE,CACxDqI,SAAS,CAAC,2IAA2I,CAAAC,QAAA,cAErJnL,IAAA,CAACV,MAAM,EAAC4L,SAAS,CAAC,SAAS,CAAE,CAAC,CACxB,CAAC,CAGRrI,iBAAiB,eAChB3C,KAAA,QAAKgL,SAAS,CAAC,iDAAiD,CAAAC,QAAA,eAE9DnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbxI,oBAAoB,CAAC,KAAK,CAAC,CAC3BE,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAE,CACFkI,SAAS,CAAC,4GAA4G,CAAAC,QAAA,CACvH,cAED,CAAQ,CAAC,cAGTnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbxI,oBAAoB,CAAC,KAAK,CAAC,CAC3BI,qBAAqB,CAAC,IAAI,CAAC,CAC7B,CAAE,CACFgI,SAAS,CAAC,4GAA4G,CAAAC,QAAA,CACvH,mBAED,CAAQ,CAAC,EACN,CACN,cAGDnL,IAAA,CAACH,iBAAiB,EAChBgM,MAAM,CAAE9I,eAAgB,CACxB+I,OAAO,CAAEA,CAAA,GAAM9I,kBAAkB,CAAC,KAAK,CAAE,CAC1C,CAAC,CAGDC,kBAAkB,eACjBjD,IAAA,CAACF,kBAAkB,EAACgM,OAAO,CAAEA,CAAA,GAAM5I,qBAAqB,CAAC,KAAK,CAAE,CAAE,CACnE,CAGAC,eAAe,eACdnD,IAAA,QAAKkL,SAAS,CAAC,qEAAqE,CAAAC,QAAA,cAClFjL,KAAA,QAAKgL,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eACzDjL,KAAA,OAAIgL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EAAC,qBAClB,CAAC9H,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE+B,IAAI,EACpC,CAAC,cACLpF,IAAA,UACE+L,IAAI,CAAC,MAAM,CACXlE,KAAK,CAAEtE,eAAgB,CACvByI,QAAQ,CAAG3E,CAAC,EAAK,CACf,KAAM,CAAAQ,KAAK,CAAGR,CAAC,CAAC4E,MAAM,CAACpE,KAAK,CAC5BrE,kBAAkB,CAACqE,KAAK,CAAC,CACzB,GAAIA,KAAK,CAAClD,MAAM,EAAI,CAAC,CAAE,CACrBb,wBAAwB,CAAC+D,KAAK,CAAC,CACjC,CAAC,IAAM,CACLnE,mBAAmB,CAAC,EAAE,CAAC,CACzB,CACF,CAAE,CACFwI,WAAW,CAAC,2BAA2B,CACvChB,SAAS,CAAC,iIAAiI,CAC5I,CAAC,CACDvH,aAAa,eAAI3D,IAAA,MAAGkL,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,aAAW,CAAG,CAAC,cAC3EnL,IAAA,OAAIkL,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAC1C1H,gBAAgB,CAACwB,GAAG,CAAC,CAACkH,UAAU,CAAExE,KAAK,GAAK,CAC3C,KAAM,CAAAf,QAAQ,CAAGuF,UAAU,CAAC/G,IAAI,EAAI+G,UAAU,CAC9C,KAAM,CAAA5C,QAAQ,CAAG4C,UAAU,CAACpF,SAAS,CACrC,KAAM,CAAAG,UAAU,CAAGiF,UAAU,CAAClF,YAAY,CAC1C,KAAM,CAAAmF,UAAU,CAAGD,UAAU,CAAChF,YAAY,CAE1C,mBACEjH,KAAA,OAEEoL,OAAO,CAAEA,CAAA,GAAMrC,iBAAiB,CAACrC,QAAQ,CAAE,CAC3CsE,SAAS,CAAC,8FAA8F,CAAAC,QAAA,EAEvG5B,QAAQ,eACPvJ,IAAA,QAAKkL,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BnL,IAAA,QACEqM,GAAG,CAAE9C,QAAS,CACd+C,GAAG,CAAE1F,QAAS,CACdsE,SAAS,CAAC,uDAAuD,CACjEqB,OAAO,CAAGlF,CAAC,EAAK,CACdA,CAAC,CAAC4E,MAAM,CAACR,KAAK,CAACe,OAAO,CAAG,MAAM,CACjC,CAAE,CACH,CAAC,CACC,CACN,cACDtM,KAAA,QAAKgL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBnL,IAAA,QAAKkL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAEvE,QAAQ,CAAM,CAAC,cACxD1G,KAAA,QAAKgL,SAAS,CAAC,2BAA2B,CAAAC,QAAA,EACvCiB,UAAU,eACTpM,IAAA,QAAKkL,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,yBAAa,CAAK,CAC1D,CACAjE,UAAU,eACTlH,IAAA,QAAKkL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,+BAAmB,CAAK,CACjE,CACA5B,QAAQ,EAAI,CAACrC,UAAU,eACtBlH,IAAA,QAAKkL,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,gCAAe,CAAK,CAC9D,EACE,CAAC,EACH,CAAC,MAAAhF,MAAA,CA7BES,QAAQ,MAAAT,MAAA,CAAIwB,KAAK,CA8BvB,CAAC,CAET,CAAC,CAAC,CACA,CAAC,cACL3H,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMlI,kBAAkB,CAAC,KAAK,CAAE,CACzC8H,SAAS,CAAC,kEAAkE,CAAAC,QAAA,CAC7E,UAED,CAAQ,CAAC,EACN,CAAC,CACH,CACN,CAGAxJ,eAAe,eACd3B,IAAA,QAAKkL,SAAS,CAAC,sEAAsE,CAAAC,QAAA,cACnFjL,KAAA,QAAKgL,SAAS,CAAC,8EAA8E,CAAAC,QAAA,eAC3FnL,IAAA,OAAIkL,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CACjD1J,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE2D,IAAI,CACjB,CAAC,cAELlF,KAAA,QAAKgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAElCnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACblJ,cAAc,CAAC,CAAAX,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE2D,IAAI,GAAI,EAAE,CAAC,CACxCtD,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CACFoJ,SAAS,CAAC,iHAAiH,CAAAC,QAAA,CAC5H,eAED,CAAQ,CAAC,cAGTnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbhI,eAAe,CAAC7B,YAAY,CAAC,CAC7B2B,kBAAkB,CAAC,IAAI,CAAC,CACxBxB,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAE,CACFsJ,SAAS,CAAC,iHAAiH,CAAAC,QAAA,CAC5H,cAED,CAAQ,CAAC,cAGTnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbhJ,YAAY,CAAC,CAAAb,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE4D,MAAM,GAAI,EAAE,CAAC,CACxCnD,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CACFgJ,SAAS,CAAC,iHAAiH,CAAAC,QAAA,CAC5H,eAED,CAAQ,CAAC,cAGTnL,IAAA,WACEsL,OAAO,CAAEb,mBAAoB,CAC7Bc,QAAQ,CAAE9I,WAAY,CACtByI,SAAS,CAAC,sLAAsL,CAAAC,QAAA,CAE/L1I,WAAW,CAAG,eAAe,CAAG,yBAAyB,CACpD,CAAC,cAGTzC,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMtJ,mBAAmB,CAAC,IAAI,CAAE,CACzCkJ,SAAS,CAAC,4GAA4G,CAAAC,QAAA,CACvH,aAED,CAAQ,CAAC,EACN,CAAC,cAENnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACb1J,kBAAkB,CAAC,KAAK,CAAC,CACzBF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CACFwJ,SAAS,CAAC,8GAA8G,CAAAC,QAAA,CACzH,QAED,CAAQ,CAAC,EACN,CAAC,CACH,CACN,CAGAtJ,gBAAgB,eACf7B,IAAA,QAAKkL,SAAS,CAAC,sEAAsE,CAAAC,QAAA,cACnFjL,KAAA,QAAKgL,SAAS,CAAC,8EAA8E,CAAAC,QAAA,eAC3FnL,IAAA,OAAIkL,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,eAErD,CAAI,CAAC,cAELnL,IAAA,UACE+L,IAAI,CAAC,MAAM,CACXlE,KAAK,CAAE1F,WAAY,CACnB6J,QAAQ,CAAG3E,CAAC,EAAKjF,cAAc,CAACiF,CAAC,CAAC4E,MAAM,CAACpE,KAAK,CAAE,CAChDqE,WAAW,CAAC,uBAAuB,CACnChB,SAAS,CAAC,oLAAoL,CAC9LuB,SAAS,CAAGpF,CAAC,EAAK,CAChB,GAAIA,CAAC,CAACqF,GAAG,GAAK,OAAO,EAAIvK,WAAW,CAACmI,IAAI,CAAC,CAAC,CAAE,CAC3CD,gBAAgB,CAAC,CAAC,CACpB,CACF,CAAE,CACH,CAAC,cAEFnK,KAAA,QAAKgL,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnL,IAAA,WACEsL,OAAO,CAAEjB,gBAAiB,CAC1BkB,QAAQ,CAAE,CAACpJ,WAAW,CAACmI,IAAI,CAAC,CAAE,CAC9BY,SAAS,CAAC,2JAA2J,CAAAC,QAAA,CACtK,QAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbxJ,mBAAmB,CAAC,KAAK,CAAC,CAC1BM,cAAc,CAAC,EAAE,CAAC,CACpB,CAAE,CACF8I,SAAS,CAAC,yGAAyG,CAAAC,QAAA,CACpH,UAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CACN,CAGApJ,gBAAgB,eACf/B,IAAA,QAAKkL,SAAS,CAAC,sEAAsE,CAAAC,QAAA,cACnFjL,KAAA,QAAKgL,SAAS,CAAC,6EAA6E,CAAAC,QAAA,eAC1FnL,IAAA,OAAIkL,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,aAEpD,CAAI,CAAC,cAELjL,KAAA,MAAGgL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAAC,uCACK,cAAAjL,KAAA,SAAMgL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAAC,IAAC,CAAC1J,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE2D,IAAI,CAAC,IAAC,EAAM,CAAC,IAC3G,EAAG,CAAC,cAEJpF,IAAA,MAAGkL,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,8GAEzC,CAAG,CAAC,cAEJjL,KAAA,QAAKgL,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnL,IAAA,WACEsL,OAAO,CAAEd,gBAAiB,CAC1Be,QAAQ,CAAEhJ,UAAW,CACrB2I,SAAS,CAAC,oJAAoJ,CAAAC,QAAA,CAE7J5I,UAAU,CAAG,aAAa,CAAG,QAAQ,CAChC,CAAC,cAETvC,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMtJ,mBAAmB,CAAC,KAAK,CAAE,CAC1CuJ,QAAQ,CAAEhJ,UAAW,CACrB2I,SAAS,CAAC,yJAAyJ,CAAAC,QAAA,CACpK,UAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CACN,CAGAlJ,gBAAgB,eACfjC,IAAA,QAAKkL,SAAS,CAAC,sEAAsE,CAAAC,QAAA,cACnFjL,KAAA,QAAKgL,SAAS,CAAC,8EAA8E,CAAAC,QAAA,eAC3FnL,IAAA,OAAIkL,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,uBAErD,CAAI,CAAC,cAELjL,KAAA,QAAKgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvCnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,WAAW,CAAE,CACzC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,WAAW,CACrB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,WAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,eAAe,CAAE,CAC7C4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,eAAe,CACzB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,eAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,eAAe,CAAE,CAC7C4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,eAAe,CACzB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,eAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,UAAU,CAAE,CACxC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,UAAU,CACpB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,UAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,QAAQ,CAAE,CACtC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,QAAQ,CAClB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,QAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,SAAS,CAAE,CACvC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,SAAS,CACnB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,SAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,QAAQ,CAAE,CACtC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,QAAQ,CAClB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,QAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,QAAQ,CAAE,CACtC4I,SAAS,oDAAA/E,MAAA,CACP9D,SAAS,GAAK,QAAQ,CAClB,iDAAiD,CACjD,6CAA6C,CAChD,CAAA8I,QAAA,CACJ,QAED,CAAQ,CAAC,EACN,CAAC,cAENjL,KAAA,QAAKgL,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnL,IAAA,WACEsL,OAAO,CAAEf,kBAAmB,CAC5BgB,QAAQ,CAAE,CAAClJ,SAAS,CAACiI,IAAI,CAAC,CAAE,CAC5BY,SAAS,CAAC,2JAA2J,CAAAC,QAAA,CACtK,QAED,CAAQ,CAAC,cAETnL,IAAA,WACEsL,OAAO,CAAEA,CAAA,GAAM,CACbpJ,mBAAmB,CAAC,KAAK,CAAC,CAC1BI,YAAY,CAAC,EAAE,CAAC,CAClB,CAAE,CACF4I,SAAS,CAAC,yGAAyG,CAAAC,QAAA,CACpH,UAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CACN,EAEE,CAAC,CAEV,CAEA,cAAe,CAAAhL,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}